// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function() {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function() {
    var t1 = this.stack;
    return !(t1 == null) ? t1 : "";
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  }
};

$$.Dynamic_ = {"": "Object;"};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;actualType,expectedType",
  toString$0: function() {
    return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
  }
};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_liblib1$_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.length($.$$index(m, 0));
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._liblib1$_pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start,end,_groups",
  $index: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout1(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout1: function(state0, index, t1) {
    return $.$$index(t1, index);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    this._liblib1$_current = this._re.firstMatch$1(this._str);
    return !(this._liblib1$_current == null);
  }
};

$$.StringMatch = {"": "Object;start,str,pattern>",
  $index: function(g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if ($.$$eq(group_, 0) !== true)
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  }
};

$$.JsStringBuffer = {"": "Object;_contents",
  get$length: function() {
    return $.length(this._contents);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  add$1: function(obj) {
    var t1, t2;
    if (typeof obj !== "string")
      return this.add$1$bailout(1, obj);
    t1 = this._contents;
    t2 = obj;
    this._contents = t1 + t2;
  },
  add$1$bailout: function(state0, obj) {
    var t1, t2;
    t1 = this._contents;
    t2 = typeof obj === "string" ? obj : $.S(obj);
    this._contents = t1 + t2;
  },
  addAll$1: function(objects) {
    var t1, t2, t3;
    for (t1 = $.iterator(objects); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = this._contents;
      t2 = typeof t2 === "string" ? t2 : $.S(t2);
      this._contents = t3 + t2;
    }
  },
  toString$0: function() {
    return this._contents;
  }
};

$$.Collection = {"": "Iterable;",
  addAll$1: function(elements) {
    var t1;
    for (t1 = $.iterator(elements); t1.moveNext$0() === true;)
      this.add$1(t1.get$current());
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  $isCollection: function() {
    return true;
  }
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (!(t1 == null))
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, i;
    t1 = {};
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout(1, t1, t2);
    for (; $.$$lt(t1.i_1, t2.length) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
      if ($.$$gt(t1.i_1, 0) === true)
        $.add(t1.sb_0, ", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      $.add(t3, $.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    if (!(t2 == null))
      $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout(2, t1, t2);
    t3 = $.toString(t1.sb_0);
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0)
        $.add(t1.sb_0, ", ");
      t4 = t1.sb_0;
      if (i >= t2.length)
        throw $.ioore(i);
      $.add(t4, t2[i]);
    }
    t2 = $.toString(t1.sb_0);
    t4 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t4) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t4) + "(" + $.S(t3) + ")\n" + "Found: " + $.S(t4) + "(" + $.S(t2) + ")";
  },
  toString$0$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (!(t2 == null))
          for (t3 = $.getInterceptor$JSStringJSArray(t2); $.$$lt(t1.i_1, t3.get$length(t2)) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
            if ($.$$gt(t1.i_1, 0) === true)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, $.Error_safeToString(t3.$index(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (!(t2 == null))
          $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t3, t4, i;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          t3 = $.toString(t1.sb_0);
          t1.sb_0 = $.StringBuffer_StringBuffer("");
          for (t4 = $.getInterceptor$JSStringJSArray(t2), i = 0; $.CONSTANT1.$lt(i, t4.get$length(t2)); ++i) {
            if (i > 0)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, t4.$index(t2, i));
          }
          t2 = $.toString(t1.sb_0);
          t4 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t4) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t4) + "(" + $.S(t3) + ")\n" + "Found: " + $.S(t4) + "(" + $.S(t2) + ")";
        }
    }
  }
};

$$.UnsupportedError = {"": "Object;message>",
  toString$0: function() {
    return "Unsupported operation: " + $.S(this.get$message());
  }
};

$$.UnimplementedError = {"": "Object;message>",
  toString$0: function() {
    var t1 = this.message;
    return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function() {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.IllegalJSRegExpException = {"": "Object;_pattern,_errmsg",
  toString$0: function() {
    return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
  },
  $isException: true
};

$$.Iterable = {"": "Object;",
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  contains$1: function(element) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$length: function() {
    var t1, count;
    t1 = $.iterator(this);
    for (count = 0; t1.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function() {
    return $.iterator(this).moveNext$0() !== true;
  },
  take$1: function(n) {
    return $.TakeIterable$(this, n);
  },
  get$last: function() {
    var t1, result;
    t1 = $.iterator(this);
    if (t1.moveNext$0() !== true)
      throw $.$$throw($.StateError$("No elements"));
    do
      result = t1.get$current();
    while (t1.moveNext$0() === true);
    return result;
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(other) {
    if (other == null)
      return false;
    return this === other;
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  }
};

$$.ObjectInterceptor = {"": "Object;",
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  addAll$1: function(receiver, a0) {
    return receiver.addAll$1(a0);
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  addLast$1: function(receiver, a0) {
    return receiver.addLast$1(a0);
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  $gt: function(receiver, a0) {
    return receiver.$gt(a0);
  },
  $indexSet: function(receiver, a0, a1) {
    return receiver.$indexSet(a0, a1);
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  floor$0: function(receiver) {
    return receiver.floor$0();
  },
  $lt: function(receiver, a0) {
    return receiver.$lt(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  get$contains: function(receiver) {
    return receiver.get$contains();
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  getRange$2: function(receiver, a0, a1) {
    return receiver.getRange$2(a0, a1);
  },
  toList$0: function(receiver) {
    return receiver.toList$0();
  },
  $ge: function(receiver, a0) {
    return receiver.$ge(a0);
  },
  get$last: function(receiver) {
    return receiver.get$last();
  },
  $mul: function(receiver, a0) {
    return receiver.$mul(a0);
  },
  toSet$0: function(receiver) {
    return receiver.toSet$0();
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  removeAll$1: function(receiver, a0) {
    return receiver.removeAll$1(a0);
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  take$1: function(receiver, a0) {
    return receiver.take$1(a0);
  },
  $and: function(receiver, a0) {
    return receiver.$and(a0);
  },
  toInt$0: function(receiver) {
    return receiver.toInt$0();
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  contains$1: function(receiver, a0) {
    return receiver.contains$1(a0);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  $index: function(receiver, a0) {
    return receiver.$index(a0);
  },
  removeAt$1: function(receiver, a0) {
    return receiver.removeAt$1(a0);
  },
  get$isNegative: function(receiver) {
    return receiver.get$isNegative();
  },
  $add: function(receiver, a0) {
    return receiver.$add(a0);
  },
  concat$1: function(receiver, a0) {
    return receiver.concat$1(a0);
  },
  where$1: function(receiver, a0) {
    return receiver.where$1(a0);
  },
  $shl: function(receiver, a0) {
    return receiver.$shl(a0);
  },
  get$isInfinite: function(receiver) {
    return receiver.get$isInfinite();
  },
  $or: function(receiver, a0) {
    return receiver.$or(a0);
  },
  removeMatching$1: function(receiver, a0) {
    return receiver.removeMatching$1(a0);
  },
  remove$1: function(receiver, a0) {
    return receiver.remove$1(a0);
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  $sub: function(receiver, a0) {
    return receiver.$sub(a0);
  },
  $le: function(receiver, a0) {
    return receiver.$le(a0);
  },
  $xor: function(receiver, a0) {
    return receiver.$xor(a0);
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  },
  $tdiv: function(receiver, a0) {
    return receiver.$tdiv(a0);
  },
  $div: function(receiver, a0) {
    return receiver.$div(a0);
  },
  $eq: function(receiver, a0) {
    return receiver.$eq(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  },
  $eq: function(receiver, a) {
    return receiver == a;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeAt$1: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    $.checkGrowable(receiver, "removeAt");
    return receiver.splice(index, 1)[0];
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.$$eq(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return;
      }
  },
  removeAll$1: function(receiver, elements) {
    $.IterableMixinWorkaround_removeAllList(receiver, elements);
  },
  removeMatching$1: function(receiver, test) {
    $.IterableMixinWorkaround_removeMatchingList(receiver, test);
  },
  where$1: function(receiver, f) {
    return $.WhereIterable$(receiver, f);
  },
  addAll$1: function(receiver, collection) {
    var t1;
    for (t1 = $.iterator(collection); t1.moveNext$0() === true;)
      this.add$1(receiver, t1.get$current());
  },
  addLast$1: function(receiver, value) {
    $.checkGrowable(receiver, "addLast");
    receiver.push(value);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  take$1: function(receiver, n) {
    return $.IterableMixinWorkaround_takeList(receiver, n);
  },
  getRange$2: function(receiver, start, length) {
    var t1, end;
    if (0 === length)
      return [];
    $.checkNull(start);
    $.checkNull(length);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof length === "number" && Math.floor(length) === length))
      throw $.$$throw($.ArgumentError$(length));
    t1 = length < 0;
    if (t1)
      throw $.$$throw($.ArgumentError$(length));
    if (start < 0)
      throw $.$$throw($.RangeError$value(start));
    end = start + length;
    if (end > receiver.length)
      throw $.$$throw($.RangeError$value(length));
    if (t1)
      throw $.$$throw($.ArgumentError$(length));
    return receiver.slice(start, end);
  },
  get$last: function(receiver) {
    var t1 = receiver.length;
    if (t1 > 0)
      return receiver[t1 - 1];
    throw $.$$throw($.StateError$("No elements"));
  },
  indexOf$2: function(receiver, element, start) {
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  contains$1: function(receiver, other) {
    var t1, i;
    for (t1 = $.getInterceptor(other), i = 0; i < receiver.length; ++i)
      if (t1.$eq(other, receiver[i]) === true)
        return true;
    return false;
  },
  get$contains: function(receiver) {
    return new $.BoundClosure0(this, "contains$1", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.Collections_collectionToString(receiver);
  },
  toList$0: function(receiver) {
    return $.List_List$from(receiver);
  },
  toSet$0: function(receiver) {
    return $.Set_Set$from(receiver);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNumber = {"": "Object;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  toInt$0: function(receiver) {
    var truncated;
    if (this.get$isNaN(receiver) === true)
      throw $.$$throw($.UnsupportedError$("NaN"));
    if (this.get$isInfinite(receiver) === true)
      throw $.$$throw($.UnsupportedError$("Infinity"));
    truncated = this.truncate$0(receiver);
    return truncated == -0.0 ? 0 : truncated;
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floor$0: function(receiver) {
    return Math.floor(receiver);
  },
  get$isInfinite: function(receiver) {
    return receiver == Infinity || receiver == -Infinity;
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver / other;
  },
  $mul: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver * other;
  },
  $tdiv: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    return (receiver | other) >>> 0;
  },
  $xor: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSInt = {"": "JSNumber;",
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSDouble = {"": "JSNumber;",
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  concat$1: function(receiver, other) {
    return receiver + other;
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$JSNumber(startIndex);
    if (t1.$lt(startIndex, 0) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$$gt(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$contains: function(receiver) {
    return new $.BoundClosure1(this, "contains$2", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var hash, i, hash0, hash1;
    for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$._HashMapImpl = {"": "Object;_keys>,_values>,_loadLimit,_numberOfEntries,_numberOfDeleted",
  _probeForAdding$1: function(key) {
    var t1, t3, hash, insertionIndex, numberOfProbes, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.hashCode(key);
    t3 = this._keys.length;
    if (t1 !== (t1 | 0))
      return this._probeForAdding$1$bailout(1, key, t1);
    hash = (t1 & t3 - 1) >>> 0;
    for (insertionIndex = -1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null) {
        if (insertionIndex < 0)
          return hash;
        return insertionIndex;
      } else if ($.$$eq(existingKey, key) === true)
        return hash;
      else if (insertionIndex < 0 && existingKey === $.CONSTANT4)
        insertionIndex = hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
      if (hash !== (hash | 0))
        return this._probeForAdding$1$bailout(2, key, null, hash, numberOfProbes0, insertionIndex);
    }
  },
  _probeForAdding$1$bailout: function(state0, key, t1, hash, numberOfProbes0, insertionIndex) {
    switch (state0) {
      case 0:
        if (key == null)
          throw $.$$throw($.ArgumentError$(null));
        t1 = $.hashCode(key);
      case 1:
        state0 = 0;
        hash = $.$$and(t1, this._keys.length - 1);
        insertionIndex = -1;
        numberOfProbes = 1;
      case 2:
        var numberOfProbes, existingKey;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!true)
                  break L0;
                t1 = this._keys;
                if (hash !== (hash | 0))
                  throw $.iae(hash);
                if (hash < 0 || hash >= t1.length)
                  throw $.ioore(hash);
                existingKey = t1[hash];
                if (existingKey == null) {
                  if (insertionIndex < 0)
                    return hash;
                  return insertionIndex;
                } else if ($.$$eq(existingKey, key) === true)
                  return hash;
                else if (insertionIndex < 0 && existingKey === $.CONSTANT4)
                  insertionIndex = hash;
                numberOfProbes0 = numberOfProbes + 1;
                hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
              case 2:
                state0 = 0;
                numberOfProbes = numberOfProbes0;
            }
    }
  },
  _probeForLookup$1: function(key) {
    var t1, hash, numberOfProbes, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.$$and($.hashCode(key), this._keys.length - 1);
    if (t1 !== (t1 | 0))
      return this._probeForLookup$1$bailout(1, key, t1);
    for (hash = t1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _probeForLookup$1$bailout: function(state0, key, t1) {
    var hash, numberOfProbes, existingKey, numberOfProbes0;
    for (hash = t1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _ensureCapacity$0: function() {
    var t1, capacity, t2;
    t1 = $.$$add(this._numberOfEntries, 1);
    if ($.$$ge(t1, this._loadLimit) === true) {
      this._grow$1(this._keys.length * 2);
      return;
    }
    capacity = this._keys.length;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = this._numberOfDeleted;
    if (t2 > capacity - t1 - t2)
      this._grow$1(capacity);
  },
  _grow$1: function(newCapacity) {
    var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
    capacity = this._keys.length;
    this._loadLimit = $.$$tdiv($.$$mul(newCapacity, 3), 4);
    oldKeys = this._keys;
    oldValues = this._values;
    this._keys = $.List_List$fixedLength(newCapacity, null);
    this._values = $.List_List$fixedLength(newCapacity, null);
    for (i = 0; i < capacity; ++i) {
      if (i >= oldKeys.length)
        throw $.ioore(i);
      key = oldKeys[i];
      if (key == null || key === $.CONSTANT4)
        continue;
      if (i >= oldValues.length)
        throw $.ioore(i);
      value = oldValues[i];
      newIndex = this._probeForAdding$1(key);
      t1 = this._keys;
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = key;
      t1 = this._values;
      if (newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = value;
    }
    this._numberOfDeleted = 0;
  },
  $indexSet: function(key, value) {
    var index, t1;
    this._ensureCapacity$0();
    index = this._probeForAdding$1(key);
    t1 = this._keys;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    t1 = t1[index];
    if (t1 == null || t1 === $.CONSTANT4) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.$$indexSet$bailout0(1, key, value, t1, index);
      this._numberOfEntries = t1 + 1;
    }
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = key;
    t1 = this._values;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  $$indexSet$bailout0: function(state0, key, value, t1, index) {
    switch (state0) {
      case 0:
        this._ensureCapacity$0();
        index = this._probeForAdding$1(key);
        t1 = this._keys;
        if (index !== (index | 0))
          throw $.iae(index);
        if (index < 0 || index >= t1.length)
          throw $.ioore(index);
        t1 = t1[index];
      case 1:
        if (state0 === 1 || state0 === 0 && (t1 == null || t1 === $.CONSTANT4))
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 1:
              state0 = 0;
              this._numberOfEntries = $.$$add(t1, 1);
          }
        t1 = this._keys;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = key;
        t1 = this._values;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = value;
    }
  },
  $index: function(key) {
    var index, t1;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.$$index$bailout2(1, index);
    if (index < 0)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout2: function(state0, index) {
    var t1;
    if ($.$$lt(index, 0) === true)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  remove$1: function(key) {
    var index, t1, t3, value;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.remove$1$bailout(1, index);
    if (index >= 0) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.remove$1$bailout(2, index, t1);
      this._numberOfEntries = t1 - 1;
      t3 = this._values;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t3.length)
        throw $.ioore(index);
      value = t3[index];
      t3[index] = null;
      t3 = this._keys;
      if (index >= t3.length)
        throw $.ioore(index);
      t3[index] = $.CONSTANT4;
      this._numberOfDeleted = this._numberOfDeleted + 1;
      return value;
    }
    return;
  },
  remove$1$bailout: function(state0, index, t1) {
    switch (state0) {
      case 0:
        index = this._probeForLookup$1(key);
      case 1:
        state0 = 0;
      case 2:
        var t3, value;
        if (state0 === 2 || state0 === 0 && $.$$ge(index, 0) === true)
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 2:
              state0 = 0;
              this._numberOfEntries = $.$$sub(t1, 1);
              t3 = this._values;
              if (index !== (index | 0))
                throw $.iae(index);
              if (index < 0 || index >= t3.length)
                throw $.ioore(index);
              value = t3[index];
              t3[index] = null;
              t3 = this._keys;
              if (index >= t3.length)
                throw $.ioore(index);
              t3[index] = $.CONSTANT4;
              this._numberOfDeleted = this._numberOfDeleted + 1;
              return value;
          }
        return;
    }
  },
  get$isEmpty: function() {
    return $.$$eq(this._numberOfEntries, 0);
  },
  get$length: function() {
    return this._numberOfEntries;
  },
  forEach$1: function(f) {
    var it, t1, t2, t3;
    it = $._HashMapImplIndexIterator$(this);
    for (; it.moveNext$0() === true;) {
      t1 = this._keys;
      t2 = it.get$current();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t2 = t1[t2];
      t1 = this._values;
      t3 = it.get$current();
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      f.call$2(t2, t1[t3]);
    }
  },
  get$keys: function() {
    return $._HashMapImplKeyIterable$(this);
  },
  get$values: function() {
    return $._HashMapImplValueIterable$(this);
  },
  containsKey$1: function(key) {
    return $.$$eq(this._probeForLookup$1(key), -1) !== true;
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _HashMapImpl$0: function() {
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
    this._keys = $.List_List$fixedLength(8, null);
    this._values = $.List_List$fixedLength(8, null);
  },
  $isMap: function() {
    return true;
  }
};

$$._HashMapImplKeyIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplKeyIterator$(this._map);
  }
};

$$._HashMapImplValueIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplValueIterator$(this._map);
  }
};

$$._HashMapImplIterator = {"": "Object;",
  moveNext$0: function() {
    var t1, t2, t4, newIndex, t3, t5;
    t1 = this._map;
    t2 = $.length(t1.get$_keys());
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout1(1, t2, t1);
    t4 = this._index;
    if (typeof t4 !== "number")
      return this.moveNext$0$bailout1(2, t2, t1, t4);
    newIndex = t4 + 1;
    for (t3 = t1.get$_keys(); newIndex < t2;) {
      if (typeof t3 !== "string" && (typeof t3 !== "object" || t3 === null || t3.constructor !== Array && !t3.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout1(3, t2, t1, t3, newIndex, $.CONSTANT3);
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t3.length)
        throw $.ioore(newIndex);
      t5 = t3[newIndex];
      if (!(t5 == null) && !(t5 === $.CONSTANT4)) {
        this._liblib0$_current = this._computeCurrentFromIndex$3(newIndex, t3, t1.get$_values());
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = t2;
    this._liblib0$_current = null;
    return false;
  },
  moveNext$0$bailout1: function(state0, t2, t1, t4, newIndex, t3) {
    switch (state0) {
      case 0:
        t1 = this._map;
        t2 = $.length(t1.get$_keys());
      case 1:
        state0 = 0;
        t4 = this._index;
      case 2:
        state0 = 0;
        newIndex = $.$$add(t4, 1);
      case 3:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t3 = $.getInterceptor$JSNumber(newIndex);
                if (!(t3.$lt(newIndex, t2) === true))
                  break L0;
                t4 = t1.get$_keys();
              case 3:
                state0 = 0;
                t4 = $.$$index(t4, newIndex);
                if (!(t4 == null) && !(t4 === $.CONSTANT4)) {
                  this._liblib0$_current = this._computeCurrentFromIndex$3(newIndex, t1.get$_keys(), t1.get$_values());
                  this._index = newIndex;
                  return true;
                }
                newIndex = t3.$add(newIndex, 1);
            }
        this._index = t2;
        this._liblib0$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$._HashMapImplKeyIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.$$index(keys, index);
  }
};

$$._HashMapImplValueIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.$$index(values, index);
  }
};

$$._HashMapImplIndexIterator = {"": "_HashMapImplIterator;_map,_index,_liblib0$_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return index;
  }
};

$$._DeletedKeySentinel = {"": "Object;"};

$$._KeyValuePair = {"": "Object;key>,value="};

$$._LinkedHashMapImpl = {"": "Object;_liblib0$_list,_map",
  $indexSet: function(key, value) {
    var t1, t3;
    if (this._map.containsKey$1(key) === true) {
      t1 = this._map;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.$$indexSet$bailout(1, key, value, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key].get$element().set$value(value);
    } else {
      this._liblib0$_list.addLast$1($._KeyValuePair$(key, value));
      t1 = this._map;
      t3 = this._liblib0$_list.lastEntry$0();
      if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
        return this.$$indexSet$bailout(2, key, null, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key] = t3;
    }
  },
  $$indexSet$bailout: function(state0, key, value, t1) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 1 || state0 === 0 && this._map.containsKey$1(key) === true)
          switch (state0) {
            case 0:
              t1 = this._map;
            case 1:
              state0 = 0;
              $.$$index(t1, key).get$element().set$value(value);
          }
        else
          switch (state0) {
            case 0:
              this._liblib0$_list.addLast$1($._KeyValuePair$(key, value));
              t1 = this._map;
            case 2:
              state0 = 0;
              $.$$indexSet(t1, key, this._liblib0$_list.lastEntry$0());
          }
    }
  },
  $index: function(key) {
    var t1 = this._map;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout0(1, key, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1 = t1[key];
    if (t1 == null)
      return;
    return t1.get$element().get$value();
  },
  $$index$bailout0: function(state0, key, t1) {
    t1 = $.$$index(t1, key);
    if (t1 == null)
      return;
    return t1.get$element().get$value();
  },
  remove$1: function(key) {
    var t1 = $.remove(this._map, key);
    if (t1 == null)
      return;
    t1.remove$0();
    return t1.get$element().get$value();
  },
  get$keys: function() {
    return $.MappedIterable$(this._liblib0$_list, new $._LinkedHashMapImpl_keys_anon());
  },
  get$values: function() {
    return $.MappedIterable$(this._liblib0$_list, new $._LinkedHashMapImpl_values_anon());
  },
  forEach$1: function(f) {
    this._liblib0$_list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
  },
  containsKey$1: function(key) {
    return this._map.containsKey$1(key);
  },
  get$length: function() {
    return $.length(this._map);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _LinkedHashMapImpl$0: function() {
    this._map = $.HashMap_HashMap();
    this._liblib0$_list = $.DoubleLinkedQueue$();
  },
  $isMap: function() {
    return true;
  }
};

$$.DoubleLinkedQueueEntry = {"": "Object;_previous=,_next=,_element",
  _link$2: function(p, n) {
    this._next = n;
    this._previous = p;
    p.set$_next(this);
    n.set$_previous(this);
  },
  prepend$1: function(e) {
    $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
  },
  remove$0: function() {
    var t1 = this._next;
    this._previous.set$_next(t1);
    t1 = this._previous;
    this._next.set$_previous(t1);
    this._next = null;
    this._previous = null;
    return this._element;
  },
  _asNonSentinelEntry$0: function() {
    return this;
  },
  previousEntry$0: function() {
    return this._previous._asNonSentinelEntry$0();
  },
  nextEntry$0: function() {
    return this._next._asNonSentinelEntry$0();
  },
  get$element: function() {
    return this._element;
  },
  DoubleLinkedQueueEntry$1: function(e) {
    this._element = e;
  }
};

$$._DoubleLinkedQueueEntrySentinel = {"": "DoubleLinkedQueueEntry;_previous,_next,_element",
  remove$0: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _asNonSentinelEntry$0: function() {
    return;
  },
  get$element: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _DoubleLinkedQueueEntrySentinel$0: function() {
    this._link$2(this, this);
  }
};

$$.DoubleLinkedQueue = {"": "Iterable;_sentinel",
  addLast$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  add$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      this._sentinel.prepend$1(t2);
    }
  },
  removeLast$0: function() {
    return this._sentinel._previous.remove$0();
  },
  removeFirst$0: function() {
    return this._sentinel._next.remove$0();
  },
  remove$1: function(o) {
    var entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel);) {
      if ($.$$eq(entry.get$element(), o) === true) {
        entry.remove$0();
        return;
      }
      entry = entry.get$_next();
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAllList(this, elements);
  },
  removeMatching$1: function(test) {
    var entry, next;
    entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel); entry = next) {
      next = entry.get$_next();
      if (test.call$1(entry.get$element()) === true)
        entry.remove$0();
    }
  },
  get$last: function() {
    return this._sentinel._previous.get$element();
  },
  lastEntry$0: function() {
    return this._sentinel.previousEntry$0();
  },
  get$isEmpty: function() {
    var t1 = this._sentinel;
    return t1._next === t1;
  },
  get$iterator: function() {
    return $._DoubleLinkedQueueIterator$(this._sentinel);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  DoubleLinkedQueue$0: function() {
    this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
  },
  $isCollection: function() {
    return true;
  }
};

$$._DoubleLinkedQueueIterator = {"": "Object;_sentinel,_currentEntry,_liblib0$_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._currentEntry;
    if (t1 == null)
      return false;
    this._currentEntry = t1.get$_next();
    t1 = this._currentEntry;
    t2 = this._sentinel;
    if (t1 == null ? t2 == null : t1 === t2) {
      this._currentEntry = null;
      this._liblib0$_current = null;
      this._sentinel = null;
      return false;
    }
    this._liblib0$_current = t1.get$element();
    return true;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$.HashSet = {"": "Collection;_backingMap",
  add$1: function(value) {
    this._backingMap.$indexSet(value, value);
  },
  remove$1: function(value) {
    var t1 = this._backingMap;
    if (t1.containsKey$1(value) !== true)
      return false;
    t1.remove$1(value);
    return true;
  },
  contains$1: function(value) {
    return this._backingMap.containsKey$1(value);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    this._backingMap.forEach$1(new $.HashSet_forEach_anon(f));
  },
  get$isEmpty: function() {
    return $.isEmpty(this._backingMap);
  },
  get$length: function() {
    return $.length(this._backingMap);
  },
  get$iterator: function() {
    return $._HashSetIterator$(this);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  $isSet: true,
  $isCollection: function() {
    return true;
  }
};

$$._HashSetIterator = {"": "Object;_keysIterator",
  get$current: function() {
    var result = this._keysIterator.get$current();
    if (result === $.CONSTANT4)
      throw $.$$throw($.StateError$("Concurrent modification."));
    return result;
  },
  moveNext$0: function() {
    var t1, result, t2;
    t1 = this._keysIterator;
    do {
      result = t1.moveNext$0();
      if (result === true)
        t2 = t1.get$current() == null || t1.get$current() === $.CONSTANT4;
      else
        t2 = false;
    } while (t2);
    return result;
  }
};

$$.MappedIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.MappedIterator$($.iterator(this._iterable), this._f);
  },
  get$length: function() {
    return $.length(this._iterable);
  },
  get$isEmpty: function() {
    return $.isEmpty(this._iterable);
  }
};

$$.MappedIterator = {"": "Iterator;_liblib$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib$_current = this._f$1(t1.get$current());
      return true;
    } else {
      this._liblib$_current = null;
      return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$.WhereIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.WhereIterator$($.iterator(this._iterable), this._f);
  }
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
};

$$.TakeIterable = {"": "Iterable;_iterable,_takeCount",
  get$iterator: function() {
    return $.TakeIterator$($.iterator(this._iterable), this._takeCount);
  },
  TakeIterable$2: function(_iterable, _takeCount) {
    var t1 = this._takeCount;
    if (!(typeof t1 === "number" && Math.floor(t1) === t1) || $.$$lt(t1, 0) === true)
      throw $.$$throw($.ArgumentError$(t1));
  }
};

$$.TakeIterator = {"": "Iterator;_iterator,_remaining",
  moveNext$0: function() {
    var t1 = this._remaining;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout3(1, t1);
    this._remaining = t1 - 1;
    t1 = this._remaining;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout3(2, t1);
    if (t1 >= 0)
      return this._iterator.moveNext$0();
    this._remaining = -1;
    return false;
  },
  moveNext$0$bailout3: function(state0, t1) {
    switch (state0) {
      case 0:
        t1 = this._remaining;
      case 1:
        state0 = 0;
        this._remaining = $.$$sub(t1, 1);
        t1 = this._remaining;
      case 2:
        state0 = 0;
        if ($.$$ge(t1, 0) === true)
          return this._iterator.moveNext$0();
        this._remaining = -1;
        return false;
    }
  },
  get$current: function() {
    var t1 = this._remaining;
    if (typeof t1 !== "number")
      return this.get$current$bailout(1, t1);
    if (t1 < 0)
      return;
    return this._iterator.get$current();
  },
  get$current$bailout: function(state0, t1) {
    if ($.$$lt(t1, 0) === true)
      return;
    return this._iterator.get$current();
  },
  TakeIterator$2: function(_iterator, _remaining) {
  }
};

$$.ListBase = {"": "Collection;",
  get$iterator: function() {
    return $.ListIterator$(this);
  },
  forEach$1: function(f) {
    var t1, i;
    for (t1 = $.getInterceptor$JSStringJSArray(this), i = 0; $.CONSTANT1.$lt(i, t1.get$length(this)); ++i)
      f.call$1(this.$index(i));
  },
  contains$1: function(value) {
    var t1, i;
    for (t1 = $.getInterceptor$JSStringJSArray(this), i = 0; $.CONSTANT1.$lt(i, t1.get$length(this)); ++i)
      if ($.$$eq(this.$index(i), value) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  indexOf$2: function(value, start) {
    var t1, i, t2;
    if (typeof start !== "number")
      return this.indexOf$2$bailout(1, value, start);
    t1 = $.getInterceptor$JSStringJSArray(this);
    i = start;
    while (true) {
      t2 = t1.get$length(this);
      if (typeof t2 !== "number")
        return this.indexOf$2$bailout(2, value, null, t2, i);
      if (!(i < t2))
        break;
      if ($.$$eq(this.$index(i), value) === true)
        return i;
      ++i;
    }
    return -1;
  },
  indexOf$2$bailout: function(state0, value, start, t2, i) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSStringJSArray(this);
        i = start;
      case 2:
        var t1, t4;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t2 = t1.get$length(this);
              case 2:
                state0 = 0;
                t4 = $.getInterceptor$JSNumber(i);
                if (!(t4.$lt(i, t2) === true))
                  break L0;
                if ($.$$eq(this.$index(i), value) === true)
                  return i;
                i = t4.$add(i, 1);
            }
        return -1;
    }
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout11(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout11(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout11: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  getRange$2: function(start, length) {
    var result, i;
    if (typeof start !== "number")
      return this.getRange$2$bailout(1, start, length);
    if (typeof length !== "number")
      return this.getRange$2$bailout(1, start, length);
    result = [];
    for (i = 0; i < length; ++i)
      result.push(this.$index(start + i));
    return result;
  },
  getRange$2$bailout: function(state0, start, length) {
    var result, t1, i;
    result = [];
    for (t1 = $.getInterceptor$JSNumber(start), i = 0; $.CONSTANT1.$lt(i, length); ++i)
      result.push(this.$index(t1.$add(start, i)));
    return result;
  },
  take$1: function(n) {
    return $.ListView$(this, 0, n);
  },
  toString$0: function() {
    return this.get$Collections().collectionToString$1(this);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$.FixedLengthListBase = {"": "ListBase;",
  set$length: function(newLength) {
    throw $.$$throw($.UnsupportedError$("Cannot change the length of a fixed-length list"));
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to a fixed-length list"));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to a fixed-length list"));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to a fixed-length list"));
  },
  remove$1: function(element) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from a fixed-length list"));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from a fixed-length list"));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from a fixed-length list"));
  },
  removeAt$1: function(index) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from a fixed-length list"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from a fixed-length list"));
  }
};

$$.UnmodifiableListBase = {"": "ListBase;",
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot modify an unmodifiable list"));
  },
  set$length: function(newLength) {
    throw $.$$throw($.UnsupportedError$("Cannot change the length of an unmodifiable list"));
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  remove$1: function(element) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  removeAt$1: function(index) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from an unmodifiable list"));
  }
};

$$.ListIterator = {"": "Object;_list,_liblib$_length,_liblib$_position,_liblib$_current",
  moveNext$0: function() {
    var t1, t3, t4, t5, t2;
    t1 = this._list;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.moveNext$0$bailout0(1, t1);
    t3 = $.getInterceptor$JSStringJSArray(t1);
    t4 = t1.length;
    t5 = this._liblib$_length;
    if (typeof t5 !== "number")
      return this.moveNext$0$bailout0(3, t1, t3, t4, t5);
    if (!(t4 === t5))
      throw $.$$throw($.ConcurrentModificationError$(t1));
    t2 = this._liblib$_position;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout0(4, t1, t3, null, t5, t2);
    ++t2;
    if (t2 < t5) {
      this._liblib$_position = t2;
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      this._liblib$_current = t1[t2];
      return true;
    }
    this._liblib$_current = null;
    return false;
  },
  moveNext$0$bailout0: function(state0, t1, t3, t4, t6, t2) {
    switch (state0) {
      case 0:
        t1 = this._list;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        t4 = t3.get$length(t1);
      case 2:
        state0 = 0;
        t6 = this._liblib$_length;
      case 3:
        state0 = 0;
        if ($.$$eq(t4, t6) !== true)
          throw $.$$throw($.ConcurrentModificationError$(t1));
        t2 = this._liblib$_position;
      case 4:
        state0 = 0;
        t2 = $.$$add(t2, 1);
        if ($.$$lt(t2, t6) === true) {
          this._liblib$_position = t2;
          this._liblib$_current = t3.$index(t1, t2);
          return true;
        }
        this._liblib$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$.EmptyList = {"": "FixedLengthListBase;",
  get$length: function() {
    return 0;
  },
  $index: function(index) {
    throw $.$$throw($.RangeError$value(index));
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.RangeError$value(index));
  },
  take$1: function(count) {
    return this;
  }
};

$$.SubListView = {"": "UnmodifiableListBase;",
  _absoluteIndex$1: function(relativeIndex) {
    var t1, t2, t3;
    t1 = $.getInterceptor(relativeIndex);
    if (relativeIndex == null)
      return $.length(this._list);
    if (t1.$lt(relativeIndex, 0) === true) {
      t1 = $.$$add($.length(this._list), relativeIndex);
      if ($.$$lt(t1, 0) === true)
        return 0;
      return t1;
    }
    t2 = this._list;
    t3 = $.getInterceptor$JSStringJSArray(t2);
    if (t1.$gt(relativeIndex, t3.get$length(t2)) === true)
      return t3.get$length(t2);
    return relativeIndex;
  },
  get$length: function() {
    var t1, t3;
    t1 = this._absoluteIndex$1(this._end);
    t3 = this._absoluteIndex$1(this._start);
    if (typeof t1 !== "number")
      return this.get$length$bailout(1, t1);
    if (typeof t3 !== "number")
      return this.get$length$bailout(2, t1, t3);
    t3 = t1 - t3;
    if (t3 >= 0)
      return t3;
    return 0;
  },
  get$length$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this._absoluteIndex$1(this._end);
      case 1:
        state0 = 0;
        t3 = this._absoluteIndex$1(this._start);
      case 2:
        state0 = 0;
        t3 = $.$$sub(t1, t3);
        if ($.$$ge(t3, 0) === true)
          return t3;
        return 0;
    }
  },
  _createListView$2: function(start, end) {
    var t1 = $.getInterceptor(end);
    if (!(end == null))
      if (start < 0) {
        if (t1.$le(end, start))
          return $.EmptyList$();
      } else if (t1.$ge(end, 0) && t1.$le(end, start))
        return $.EmptyList$();
    return $.ListView$(this._list, start, end);
  }
};

$$.ListView = {"": "SubListView;_list,_start,_end",
  $index: function(index) {
    var start, end, t3, t1;
    if (typeof index !== "number")
      return this.$$index$bailout7(1, index);
    start = this._absoluteIndex$1(this._start);
    if (typeof start !== "number")
      return this.$$index$bailout7(2, index, start);
    end = this._absoluteIndex$1(this._end);
    if (typeof end !== "number")
      return this.$$index$bailout7(3, index, start, end);
    t3 = end - start;
    if (index < 0 || index >= t3)
      throw $.$$throw($.RangeError$range(index, 0, t3));
    t1 = this._list;
    t3 = start + index;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout7(4, index, start, null, t1);
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  },
  $$index$bailout7: function(state0, index, start, end, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        start = this._absoluteIndex$1(this._start);
      case 2:
        state0 = 0;
        end = this._absoluteIndex$1(this._end);
      case 3:
        state0 = 0;
        t3 = $.$$sub(end, start);
        t1 = $.getInterceptor$JSNumber(index);
        if (t1.$lt(index, 0) === true || t1.$ge(index, t3) === true)
          throw $.$$throw($.RangeError$range(index, 0, t3));
        t1 = this._list;
      case 4:
        var t3;
        state0 = 0;
        return $.$$index(t1, $.$$add(start, index));
    }
  },
  take$1: function(count) {
    var t1, newEnd;
    if (!(typeof count === "number" && Math.floor(count) === count) || count < 0)
      throw $.$$throw($.ArgumentError$(count));
    t1 = this._start;
    if (typeof count !== "number")
      throw $.iae(count);
    newEnd = t1 + count;
    return this._createListView$2(t1, t1 < 0 && newEnd >= 0 ? null : newEnd);
  }
};

$$._Manager = {"": "Object;nextIsolateId=,currentManagerId=,nextManagerId=,currentContext=,rootContext=,topEventLoop>,fromCommandLine>,isWorker>,supportsWorkers,isolates>,mainManager>,managers>",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = !($.get$globalWorker() == null) && !($.get$IsolateNatives_thisScript() == null);
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true && $.isEmpty(this.isolates) === true && $.$$eq(this.topEventLoop.get$activeTimerCount(), 0) === true)
      this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id=,ports>,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.get$currentContext();
    $globalState.set$currentContext(this);
    this._setGlobals$0();
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.set$currentContext(old);
      if (!(old == null))
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    return $.$$index(this.ports, portId);
  },
  register$2: function(portId, port) {
    if (this.ports.containsKey$1(portId) === true)
      throw $.$$throw($.Exception_Exception("Registry: ports must be registered only once."));
    $.$$indexSet(this.ports, portId, port);
    $.$$indexSet($globalState.get$isolates(), this.id, this);
  },
  unregister$1: function(portId) {
    $.remove(this.ports, portId);
    if ($.isEmpty(this.ports) === true)
      $.remove($globalState.get$isolates(), this.id);
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId($.$$add(t2, 1));
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount=",
  enqueue$3: function(isolate, fn, msg) {
    $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if ($.isEmpty(t1) === true)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if (!($globalState.get$rootContext() == null) && $globalState.get$isolates().containsKey$1($globalState.get$rootContext().get$id()) === true && $globalState.get$fromCommandLine() === true && $.isEmpty($globalState.get$rootContext().get$ports()) === true)
      throw $.$$throw($.Exception_Exception("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var event = this.dequeue$0();
    if (event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if (!($.get$globalWindow() == null))
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0() === true;)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.get$isWorker() !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function() {
    return 0;
  },
  set$id: function(i) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  set$onmessage: function(f) {
    throw $.$$throw($.Exception_Exception("onmessage should not be set on MainManagerStub"));
  },
  postMessage$1: function(msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function() {
  }
};

$$._BaseSendPort = {"": "Object;_isolateId>",
  _checkReplyTo$1: function(replyTo) {
    if (!(replyTo == null) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_WorkerSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_BufferingSendPort))
      throw $.$$throw($.Exception_Exception("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $.Completer_Completer();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.get$future();
  },
  $isSendPort: true
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_receivePort>,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_NativeJsSendPort && $.$$eq(this._receivePort, other._receivePort) === true;
  },
  get$hashCode: function() {
    return this._receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId>,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  $eq: function(other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!other.$is_WorkerSendPort)
      t1 = $.$$eq(this._workerId, other._workerId) === true && $.$$eq(this._isolateId, other._isolateId) === true && $.$$eq(this._receivePortId, other._receivePortId) === true;
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function() {
    return $.$$xor($.$$xor($.$$shl(this._workerId, 16), $.$$shl(this._isolateId, 8)), this._receivePortId);
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$.ReceivePortImpl = {"": "Object;_id>,_callback>",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._callback = onMessage;
  },
  close$0: function() {
    this._callback = null;
    $globalState.get$currentContext().unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $globalState.get$currentContext().get$id());
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports>,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    if (!($.$$index(this._visited, list) == null))
      return;
    $.$$indexSet(this._visited, list, true);
    $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    if (!($.$$index(this._visited, map) == null))
      return;
    $.$$indexSet(this._visited, map, true);
    $.forEach(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (!!port.$is_BufferingSendPort && port._port == null)
      this.ports.push(port.get$_futurePort());
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(x) {
    var t1, managerId, isolateId, receivePortId, receivePort;
    t1 = $.getInterceptor$JSStringJSArray(x);
    managerId = t1.$index(x, 1);
    isolateId = t1.$index(x, 2);
    receivePortId = t1.$index(x, 3);
    if ($.$$eq(managerId, $globalState.get$currentManagerId()) === true) {
      t1 = $.$$index($globalState.get$isolates(), isolateId);
      if (t1 == null)
        return;
      receivePort = t1.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(object) {
    return object['__MessageTraverser__attached_info__'];
  },
  $indexSet: function(object, info) {
    $.add(this.tagged, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function() {
    this.tagged = $.List_List(0);
  },
  cleanup$0: function() {
    var t1, i;
    t1 = $.length(this.tagged);
    if (typeof t1 !== "number")
      return this.cleanup$0$bailout(1, t1);
    i = 0;
    for (; i < t1; ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  },
  cleanup$0$bailout: function(state0, t1) {
    var i = 0;
    for (; $.CONSTANT1.$lt(i, t1); ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(object) {
    return;
  },
  $indexSet: function(object, info) {
  },
  reset$0: function() {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    this._visited.reset$0();
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.$isList()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && x.$isMap())
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPortSync)
      return this.visitSendPortSync$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, len, copy, i;
    if (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior())
      return this.visitList$1$bailout(1, list);
    t1 = $.$$index(this._visited, list);
    if (!(t1 == null))
      return t1;
    len = list.length;
    copy = $.List_List(len);
    $.$$indexSet(this._visited, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  },
  visitList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.$$index(this._visited, list);
        if (!(t1 == null))
          return t1;
        t1 = $.getInterceptor$JSStringJSArray(list);
        len = t1.get$length(list);
      case 2:
        var copy, i, t2;
        state0 = 0;
        copy = $.List_List(len);
        $.$$indexSet(this._visited, list, copy);
        for (i = 0; $.CONSTANT1.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= copy.length)
            throw $.ioore(i);
          copy[i] = t2;
        }
        return copy;
    }
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t1.copy_0 = $.$$index(this._visited, map);
    t2 = t1.copy_0;
    if (!(t2 == null))
      return t2;
    t1.copy_0 = $.Map_Map();
    $.$$indexSet(this._visited, map, t1.copy_0);
    map.forEach$1(new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, id;
    t1 = $.$$index(this._visited, list);
    if (!(t1 == null))
      return ["ref", t1];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, id;
    t1 = $.$$index(this._visited, map);
    if (!(t1 == null))
      return ["ref", t1];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, map, id);
    return ["map", id, this._serializeList$1($.toList(map.get$keys())), this._serializeList$1($.toList(map.get$values()))];
  },
  _serializeList$1: function(list) {
    var len, result, i, t1;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSStringJSArray(list);
        len = t1.get$length(list);
      case 2:
        var result, i, t2;
        state0 = 0;
        result = $.List_List(len);
        for (i = 0; $.CONSTANT1.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap_HashMap();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.$$index(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var t1 = $.$$index(x, 1);
    return $.$$index(this._deserialized, t1);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$JSStringJSArray(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.$isJavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    $.$$indexSet(this._deserialized, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id, t2, len) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(x);
        id = t1.$index(x, 1);
        dartList = t1.$index(x, 2);
      case 1:
        state0 = 0;
        $.$$indexSet(this._deserialized, id, dartList);
        t2 = $.getInterceptor$JSStringJSArray(dartList);
        len = t2.get$length(dartList);
      case 2:
        var t1, i;
        state0 = 0;
        for (i = 0; $.CONSTANT1.$lt(i, len); ++i)
          t2.$indexSet(dartList, i, this._deserializeHelper$1(t2.$index(dartList, i)));
        return dartList;
    }
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, keys, values, len, i, key;
    result = $.Map_Map();
    t1 = $.getInterceptor$JSStringJSArray(x);
    id = t1.$index(x, 1);
    $.$$indexSet(this._deserialized, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, null, result, keys, null, values);
    len = keys.length;
    for (t1 = $.getInterceptor$JSArray(result), i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      t1.$indexSet(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values, t3, len) {
    switch (state0) {
      case 0:
        result = $.Map_Map();
        t1 = $.getInterceptor$JSStringJSArray(x);
        id = t1.$index(x, 1);
        $.$$indexSet(this._deserialized, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(keys);
        len = t3.get$length(keys);
      case 3:
        var id, t2, i;
        state0 = 0;
        for (t1 = $.getInterceptor$JSStringJSArray(values), t2 = $.getInterceptor$JSArray(result), i = 0; $.CONSTANT1.$lt(i, len); ++i)
          t2.$indexSet(result, this._deserializeHelper$1(t3.$index(keys, i)), this._deserializeHelper$1(t1.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle<",
  cancel$0: function() {
    if (!($.get$globalThis().setTimeout == null)) {
      if (this._inEventLoop === true)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.get$topEventLoop();
      t1.set$activeTimerCount($.$$sub(t1.get$activeTimerCount(), 1));
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if ($.$$eq(milliseconds, 0) === true)
      t1 = $.hasTimer() !== true || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), new $.anon(this, callback), "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer() === true) {
      t1 = $._globalState().get$topEventLoop();
      t1.set$activeTimerCount($.$$add(t1.get$activeTimerCount(), 1));
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace>,cause>",
  _writeOn$1: function(buffer) {
    var message, t1, exception, t2;
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, "'");
    message = null;
    try {
      message = $.toString(this.error);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    t1.add$1(buffer, message);
    t1.add$1(buffer, "'\n");
    t2 = this.stackTrace;
    if (!(t2 == null)) {
      t1.add$1(buffer, "Stack trace:\n");
      t1.add$1(buffer, $.toString(t2));
      t1.add$1(buffer, "\n");
    }
  },
  toString$0: function() {
    var buffer, t1, cause;
    buffer = $.StringBuffer_StringBuffer("");
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, "AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; !(cause == null);) {
      t1.add$1(buffer, "Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return t1.toString$0(buffer);
  },
  throwDelayed$0: function() {
    var reportError, exception;
    reportError = new $.AsyncError_throwDelayed_reportError(this);
    try {
      $.Timer_Timer(0, new $.AsyncError_throwDelayed_anon(this, reportError));
    } catch (exception) {
      $.unwrapException(exception);
      reportError.call$0();
    }

  },
  $isAsyncError: true
};

$$._CompleterImpl = {"": "Object;future>,_isComplete>",
  complete$1: function(value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future>,_nextListener=",
  _sendValue$1: function(value) {
    this.future._setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state,_resultOrListeners>",
  get$_isComplete: function() {
    return $.$$eq(this._state, 0) !== true;
  },
  get$_hasValue: function() {
    return $.$$eq(this._state, 1);
  },
  get$_hasError: function() {
    return $.$$eq($.$$and(this._state, 2), 0) !== true;
  },
  get$_hasUnhandledError: function() {
    return $.$$eq($.$$and(this._state, 4), 0) !== true;
  },
  _clearUnhandledError$0: function() {
    this._state = $.$$and(this._state, 4294967291);
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (this.get$_isComplete() !== true) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError() === true) {
      if (!(onError == null))
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue() === true)
      return $._FutureWrapper$(this);
    if (this.get$_isComplete() !== true) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_Timer(0, new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._clearUnhandledError$0();
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_Timer(0, new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  get$_handleError: function() {
    return new $.BoundClosure2(this, "_handleError$2");
  },
  _setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; !(listeners == null); listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_setValue: function() {
    return new $.BoundClosure(this, "_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (!(listeners0 == null)) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._state = $.$$or(this._state, 4);
    $.Timer_Timer(0, new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; !(current == null); prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (this.get$_isComplete() !== true)
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue() === true)
      future._setValue$1(this._resultOrListeners);
    else {
      this._clearUnhandledError$0();
      future._setError$1(this._resultOrListeners);
    }
  },
  _asListener$0: function() {
    return $._FutureListener__FutureListener$wrap(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener=",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.$isFuture)
      if (!!result.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else
      this._setValue$1(result);
  }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (!(this._test == null)) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error.get$error());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  where$1: function(test) {
    return $.WhereStream$(this, test);
  },
  contains$1: function(match) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_contains_anon(t1, match, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_contains_anon0(future), t3, true);
    return future;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  get$length: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  },
  get$isEmpty: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_isEmpty_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_isEmpty_anon0(future), t3, true);
    return future;
  },
  toList$0: function() {
    var result, future, t1, t2;
    result = [];
    future = $._FutureImpl$();
    t1 = new $.Stream_toList_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toList_anon0(result, future), t2, true);
    return future;
  },
  toSet$0: function() {
    var result, future, t1, t2;
    result = $.Set_Set();
    future = $._FutureImpl$();
    t1 = new $.Stream_toSet_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toSet_anon0(result, future), t2, true);
    return future;
  },
  take$1: function(count) {
    return $.TakeStream$(this, count);
  },
  get$last: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.result_0 = null;
    t1.foundResult_1 = false;
    t2 = new $.Stream_last_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_last_anon0(t1, future), t3, true);
    return future;
  }
};

$$.StreamSubscription = {"": "Object;"};

$$._ForwardingStream = {"": "Stream;",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    return $._ForwardingStreamSubscription$(this, onData, onError, onDone, true === unsubscribeOnError);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  _handleData$2: function(data, sink) {
    sink._sendData$1(data);
  },
  get$_handleData: function() {
    return new $.BoundClosure2(this, "_handleData$2");
  },
  _handleError$2: function(error, sink) {
    sink._sendError$1(error);
  },
  get$_handleError: function() {
    return new $.BoundClosure2(this, "_handleError$2");
  },
  _handleDone$1: function(sink) {
    sink._sendDone$0();
  },
  get$_handleDone: function() {
    return new $.BoundClosure(this, "_handleDone$1");
  }
};

$$._ForwardingStreamSubscription = {"": "Object;_stream,_liblib3$_onData,_onError,_onDone,_subscription",
  _liblib3$_onData$1: function(arg0) {
    return this._liblib3$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  cancel$0: function() {
    var t1 = this._subscription;
    if (t1 == null)
      throw $.$$throw($.StateError$("Subscription has been unsubscribed"));
    t1.cancel$0();
    this._subscription = null;
  },
  _sendData$1: function(data) {
    this._liblib3$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
  },
  _sendDone$0: function() {
    var t1 = this._subscription;
    if (!(t1 == null)) {
      t1.cancel$0();
      this._subscription = null;
    }
    this._onDone$0();
  },
  _handleData$1: function(data) {
    this._stream._handleData$2(data, this);
  },
  get$_handleData: function() {
    return new $.BoundClosure(this, "_handleData$1");
  },
  _handleError$1: function(error) {
    this._stream._handleError$2(error, this);
  },
  get$_handleError: function() {
    return new $.BoundClosure(this, "_handleError$1");
  },
  _handleDone$0: function() {
    this._stream._handleDone$1(this);
  },
  get$_handleDone: function() {
    return new $.BoundClosure3(this, "_handleDone$0");
  },
  _ForwardingStreamSubscription$5: function(_stream, _onData, _onError, _onDone, unsubscribeOnError) {
    var t1, t2, t3;
    t1 = this._stream._liblib3$_source;
    t2 = this.get$_handleData();
    t3 = this.get$_handleError();
    this._subscription = t1.listen$4$onDone$onError$unsubscribeOnError(t2, this.get$_handleDone(), t3, unsubscribeOnError);
  }
};

$$.WhereStream = {"": "_ForwardingStream;_test,_liblib3$_source",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var satisfies, e, s, exception, t1;
    satisfies = null;
    try {
      satisfies = this._test$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      sink._sendError$1($._asyncError(e, s, null));
      return;
    }

    if (satisfies === true)
      sink._sendData$1(inputEvent);
  },
  get$_handleData: function() {
    return new $.BoundClosure2(this, "_handleData$2");
  }
};

$$.TakeStream = {"": "_ForwardingStream;_liblib3$_remaining,_liblib3$_source",
  _handleData$2: function(inputEvent, sink) {
    if ($.$$gt(this._liblib3$_remaining, 0) === true) {
      sink._sendData$1(inputEvent);
      this._liblib3$_remaining = $.$$sub(this._liblib3$_remaining, 1);
      if ($.$$eq(this._liblib3$_remaining, 0) === true)
        sink._sendDone$0();
    }
  },
  get$_handleData: function() {
    return new $.BoundClosure2(this, "_handleData$2");
  },
  TakeStream$2: function(source, count) {
    if (!(typeof count === "number" && Math.floor(count) === count))
      throw $.$$throw($.ArgumentError$(count));
  }
};

$$.ListItem = {"": "Object;rating01=,rating02=,_liblib6$_label",
  get$label: function() {
    return this._liblib6$_label;
  },
  ListItem$1: function(label) {
    var rnd = $.Random_Random(null);
    this._liblib6$_label = label;
    this.rating01 = rnd.nextInt$1(10);
    this.rating02 = rnd.nextInt$1(10);
  }
};

$$._ChildrenElementList = {"": "Object;_liblib2$_element,_childElements",
  toList$0: function() {
    var t1, t3, output, len, i, t2;
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toList$0$bailout(1, t1);
    t3 = t1.length;
    output = $.List_List$fixedLength(t3, null);
    for (len = t1.length, i = 0; i < len; ++i) {
      t2 = t1[i];
      if (i >= t3)
        throw $.ioore(i);
      output[i] = t2;
    }
    return output;
  },
  toList$0$bailout: function(state0, t1, t3, len, output) {
    switch (state0) {
      case 0:
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        output = $.List_List$fixedLength(t3.get$length(t1), null);
        len = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT1.$lt(i, len); ++i) {
          t2 = t3.$index(t1, i);
          if (i >= output.length)
            throw $.ioore(i);
          output[i] = t2;
        }
        return output;
    }
  },
  toSet$0: function() {
    var output, t1, len, t3, i;
    output = $.Set_Set();
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toSet$0$bailout(1, output, t1);
    len = t1.length;
    t3 = $.getInterceptor$JSArray(output);
    i = 0;
    for (; i < len; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      t3.add$1(output, t1[i]);
    }
    return output;
  },
  toSet$0$bailout: function(state0, output, t1, len, t3) {
    switch (state0) {
      case 0:
        output = $.Set_Set();
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        len = t3.get$length(t1);
      case 2:
        var t5, i;
        state0 = 0;
        t5 = $.getInterceptor$JSArray(output);
        i = 0;
        for (; $.CONSTANT1.$lt(i, len); ++i)
          t5.add$1(output, t3.$index(t1, i));
        return output;
    }
  },
  contains$1: function(element) {
    return $.contains0(this._childElements, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this._childElements); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  get$isEmpty: function() {
    return this._liblib2$_element.firstElementChild == null;
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  get$length: function() {
    return $.length(this._childElements);
  },
  $index: function(index) {
    var t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout3(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout3: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $indexSet: function(index, value) {
    var t1, t2;
    t1 = this._liblib2$_element;
    t2 = this._childElements;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.$$indexSet$bailout1(1, index, value, t1, t2);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t2.length)
      throw $.ioore(index);
    t1.$$dom_replaceChild$2(value, t2[index]);
  },
  $$indexSet$bailout1: function(state0, index, value, t1, t2) {
    t1.$$dom_replaceChild$2(value, $.$$index(t2, index));
  },
  set$length: function(newLength) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  add$1: function(value) {
    this._liblib2$_element.$$dom_appendChild$1(value);
    return value;
  },
  addLast$1: function(value) {
    this._liblib2$_element.$$dom_appendChild$1(value);
    return value;
  },
  get$iterator: function() {
    return $.iterator(this.toList$0());
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable), t2 = this._liblib2$_element; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  remove$1: function(object) {
    if (typeof object === "object" && object !== null && object.$isElement())
      if (object.parentNode === this)
        this._liblib2$_element.$$dom_removeChild$1(object);
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  removeAt$1: function(index) {
    var result = this.$index(index);
    if (!(result == null))
      this._liblib2$_element.$$dom_removeChild$1(result);
    return result;
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      this._liblib2$_element.$$dom_removeChild$1(t1);
    return t1;
  },
  get$last: function() {
    var result = this._liblib2$_element.lastElementChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._FrozenElementList = {"": "Object;_nodeList",
  contains$1: function(element) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  get$isEmpty: function() {
    return $.isEmpty(this._nodeList);
  },
  get$length: function() {
    return $.length(this._nodeList);
  },
  $index: function(index) {
    var t1 = this._nodeList;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout6(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout6: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  set$length: function(newLength) {
    $.length0(this._nodeList, newLength);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$iterator: function() {
    return $._FrozenElementListIterator$(this);
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
  },
  indexOf$2: function(element, start) {
    return $.indexOf(this._nodeList, element, start);
  },
  removeAt$1: function(index) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  remove$1: function(element) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$last: function() {
    return $.last(this._nodeList);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._FrozenElementListIterator = {"": "Object;_liblib2$_list,_liblib2$_index,_current",
  moveNext$0: function() {
    var t1, t2, t3, t4;
    t1 = this._liblib2$_index;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout2(1, t1);
    ++t1;
    t2 = this._liblib2$_list;
    t3 = $.getInterceptor$JSStringJSArray(t2);
    t4 = t3.get$length(t2);
    if (typeof t4 !== "number")
      return this.moveNext$0$bailout2(2, t1, t2, t4, t3);
    if (t1 < t4) {
      this._current = t2.$index(t1);
      this._liblib2$_index = t1;
      return true;
    }
    this._liblib2$_index = t3.get$length(t2);
    this._current = null;
    return false;
  },
  moveNext$0$bailout2: function(state0, t1, t2, t4, t3) {
    switch (state0) {
      case 0:
        t1 = this._liblib2$_index;
      case 1:
        state0 = 0;
        t1 = $.$$add(t1, 1);
        t2 = this._liblib2$_list;
        t3 = $.getInterceptor$JSStringJSArray(t2);
        t4 = t3.get$length(t2);
      case 2:
        state0 = 0;
        if ($.$$lt(t1, t4) === true) {
          this._current = t2.$index(t1);
          this._liblib2$_index = t1;
          return true;
        }
        this._liblib2$_index = t3.get$length(t2);
        this._current = null;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$._ChildNodeListLazy = {"": "Object;_this",
  get$last: function() {
    var result = this._this.lastChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  add$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addLast$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable), t2 = this._this; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      this._this.$$dom_removeChild$1(t1);
    return t1;
  },
  removeAt$1: function(index) {
    var result = this.$index(index);
    if (!(result == null))
      this._this.$$dom_removeChild$1(result);
    return result;
  },
  remove$1: function(object) {
    if (!(typeof object === "object" && object !== null && object.$isNode()))
      return;
    if (!(this === object.parentNode))
      return;
    this._this.$$dom_removeChild$1(object);
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  $indexSet: function(index, value) {
    this._this.$$dom_replaceChild$2(value, this.$index(index));
  },
  get$iterator: function() {
    return $.iterator(this._this.childNodes);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  get$length: function() {
    return $.length(this._this.childNodes);
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
  },
  $index: function(index) {
    var t1 = this._this.childNodes;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout4(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout4: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._EventStream = {"": "Stream;_target,_eventType,_useCapture",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (!(t1 == null))
      this._target.$$dom_removeEventListener$3(this._eventType, t1, this._useCapture);
    this._target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._target == null;
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    if (!(this._onData == null) && this.get$_paused() !== true)
      this._target.$$dom_addEventListener$3(this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  get$top: function() {
    return $._DOMWindowCrossFrame__createSafe(this._window.top);
  },
  close$0: function() {
    return this._window.close();
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout(1, t1);
    ++t1;
    t2 = this._length;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(2, t1, t2);
    if (t1 < t2) {
      t2 = this._array;
      if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, t1, t2);
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t2.length)
        throw $.ioore(t1);
      this._current = t2[t1];
      this._position = t1;
      return true;
    }
    this._current = null;
    this._position = t2;
    return false;
  },
  moveNext$0$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        t1 = $.$$add(t1, 1);
        t2 = this._length;
      case 2:
        state0 = 0;
      case 3:
        if (state0 === 3 || state0 === 0 && $.$$lt(t1, t2) === true)
          switch (state0) {
            case 0:
              t2 = this._array;
            case 3:
              state0 = 0;
              this._current = $.$$index(t2, t1);
              this._position = t1;
              return true;
          }
        this._current = null;
        this._position = t2;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$.FilteredElementList = {"": "Object;_node,_childNodes",
  get$_filtered: function() {
    return $.List_List$from($.where(this._childNodes, new $.FilteredElementList__filtered_anon()));
  },
  forEach$1: function(f) {
    $.forEach(this.get$_filtered(), f);
  },
  $indexSet: function(index, value) {
    this.$index(index).replaceWith$1(value);
  },
  set$length: function(newLength) {
    var t1, t2;
    t1 = $.length(this);
    t2 = $.getInterceptor$JSNumber(newLength);
    if (t2.$ge(newLength, t1) === true)
      return;
    else if (t2.$lt(newLength, 0) === true)
      throw $.$$throw($.ArgumentError$("Invalid list length"));
    this.removeRange$2(newLength, $.$$sub(t1, newLength));
  },
  add$1: function(value) {
    $.add(this._childNodes, value);
  },
  addAll$1: function(iterable) {
    var t1, t2, t3;
    for (t1 = $.iterator(iterable), t2 = this._childNodes, t3 = $.getInterceptor$JSArray(t2); t1.moveNext$0() === true;)
      t3.add$1(t2, t1.get$current());
  },
  addLast$1: function(value) {
    $.add(this._childNodes, value);
  },
  contains$1: function(element) {
    return typeof element === "object" && element !== null && element.$isElement() && $.contains0(this._childNodes, element) === true;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  removeRange$2: function(start, rangeLength) {
    $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $.FilteredElementList_removeRange_anon());
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      t1.remove$0();
    return t1;
  },
  where$1: function(f) {
    return $.where(this.get$_filtered(), f);
  },
  removeAt$1: function(index) {
    var result = this.$index(index);
    result.remove$0();
    return result;
  },
  remove$1: function(element) {
    var t1, i, t2, indexElement;
    if (!(typeof element === "object" && element !== null && element.$isElement()))
      return;
    t1 = $.getInterceptor$JSStringJSArray(this);
    i = 0;
    while (true) {
      t2 = t1.get$length(this);
      if (typeof t2 !== "number")
        return this.remove$1$bailout0(1, element, t2, i);
      if (!(i < t2))
        break;
      indexElement = this.$index(i);
      if (indexElement === element) {
        indexElement.remove$0();
        return;
      }
      ++i;
    }
  },
  remove$1$bailout0: function(state0, element, t2, i) {
    switch (state0) {
      case 0:
        if (!(typeof element === "object" && element !== null && element.$isElement()))
          return;
        t1 = $.getInterceptor$JSStringJSArray(this);
        i = 0;
      case 1:
        var t1, indexElement;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t2 = t1.get$length(this);
              case 1:
                state0 = 0;
                if (!$.CONSTANT1.$lt(i, t2))
                  break L0;
                indexElement = this.$index(i);
                if (indexElement === element) {
                  indexElement.remove$0();
                  return;
                }
                ++i;
            }
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.isEmpty(this.get$_filtered());
  },
  get$length: function() {
    return $.length(this.get$_filtered());
  },
  $index: function(index) {
    var t1 = this.get$_filtered();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout5(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout5: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  get$iterator: function() {
    return $.iterator(this.get$_filtered());
  },
  getRange$2: function(start, rangeLength) {
    return $.getRange(this.get$_filtered(), start, rangeLength);
  },
  indexOf$2: function(element, start) {
    return $.indexOf(this.get$_filtered(), element, start);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  get$last: function() {
    return $.last(this.get$_filtered());
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._Random = {"": "Object;",
  nextInt$1: function(max) {
    if (max < 0)
      throw $.$$throw($.ArgumentError$("negative max: " + $.S(max)));
    if (max > 4294967295)
      max = 4294967295;
    return (Math.random() * max) >>> 0;
  }
};

$$.BaseEaser = {"": "Object;",
  ease$1: function(fraction) {
    var t1, easeOutFraction, t2, t3;
    t1 = this._easeInFraction;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    easeOutFraction = 1 - t1;
    t2 = $.getInterceptor$JSNumber(fraction);
    t1 = t2.$le(fraction, t1) === true && $.$$gt(this._easeInFraction, 0) === true;
    t3 = this._easeInFraction;
    if (t1)
      return $.$$mul(t3, this._easeIn$1(t2.$div(fraction, t3)));
    else {
      t1 = this._easeOut$1($.$$div(t2.$sub(fraction, t3), easeOutFraction));
      if (typeof t1 !== "number")
        throw $.iae(t1);
      return $.$$add(t3, easeOutFraction * t1);
    }
  },
  _easeIn$1: function(fraction) {
    return fraction;
  },
  _easeOut$1: function(fraction) {
    return fraction;
  },
  BaseEaser$1$easeInFraction: function(easeInFraction) {
    this._easeInFraction = easeInFraction;
  }
};

$$.Sine = {"": "BaseEaser;_easeInFraction",
  _easeIn$1: function(fraction) {
    return 1 - Math.cos($.checkNum($.$$mul($.$$mul(fraction, 3.141592653589793), 0.5)));
  },
  _easeOut$1: function(fraction) {
    return Math.sin($.checkNum($.$$mul($.$$mul(fraction, 3.141592653589793), 0.5)));
  }
};

$$.CollectionEvent = {"": "FrameworkEvent;_ident,_type,_relatedObject,_currentTarget"};

$$.FrameworkEvent = {"": "Object;_ident,_type,_relatedObject,_currentTarget",
  get$type: function() {
    return this._type;
  },
  get$relatedObject: function() {
    return this._relatedObject;
  },
  get$currentTarget: function() {
    return this._currentTarget;
  },
  set$currentTarget: function(value) {
    this._currentTarget = value;
    return value;
  },
  FrameworkEvent$construct$3$relatedObject: function(ident, type, relatedObject) {
    this._ident = ident;
    this._type = type;
    this._relatedObject = relatedObject;
  }
};

$$.FrameworkEventDispatcher = {"": "Object;_dispatcher,_listenerValuePairs",
  hasEventListener$2: function(type, eventHandler) {
    var t1, i, valuePair;
    t1 = this._listenerValuePairs;
    i = t1.length;
    for (; i > 0;) {
      --i;
      if (i >= t1.length)
        throw $.ioore(i);
      valuePair = t1[i];
      if ($.$$eq(valuePair.get$type(), type) === true && $.FunctionEqualityUtil_equals(valuePair.get$eventHandler(), eventHandler) === true)
        return true;
    }
    return false;
  },
  addEventListener$2: function(type, eventHandler) {
    if (this.hasEventListener$2(type, eventHandler) !== true)
      this._listenerValuePairs.push($.FrameworkEventListenerValuePair$(type, eventHandler));
  },
  get$addEventListener: function() {
    return new $.BoundClosure2(this, "addEventListener$2");
  },
  removeEventListener$2: function(type, eventHandler) {
    var t1, i, t2, t3, valuePair;
    t1 = this._listenerValuePairs;
    i = t1.length;
    for (t2 = $.getInterceptor(eventHandler), t3 = $.getInterceptor(type); i > 0;) {
      --i;
      if (i >= t1.length)
        throw $.ioore(i);
      valuePair = t1[i];
      if (t3.$eq(type, valuePair.get$type()) === true && t2.$eq(eventHandler, valuePair.get$eventHandler()) === true)
        $.CONSTANT.removeAt$1(t1, i);
    }
  },
  get$removeEventListener: function() {
    return new $.BoundClosure2(this, "removeEventListener$2");
  },
  dispatch$1: function(event) {
    var t1, i, valuePair;
    t1 = this._listenerValuePairs;
    i = t1.length;
    event.set$currentTarget(this._dispatcher);
    for (; i > 0;) {
      --i;
      if (i >= t1.length)
        throw $.ioore(i);
      valuePair = t1[i];
      if ($.$$eq(event.get$type(), valuePair.get$type()) === true)
        valuePair.eventHandler$1(event);
    }
  },
  get$dispatch: function() {
    return new $.BoundClosure(this, "dispatch$1");
  },
  FrameworkEventDispatcher$1$dispatcher: function(dispatcher) {
    if (dispatcher == null)
      this._dispatcher = this;
    else
      this._dispatcher = dispatcher;
  }
};

$$.FrameworkEventListenerValuePair = {"": "Object;_type,_eventHandler",
  get$type: function() {
    return this._type;
  },
  get$eventHandler: function() {
    return this._eventHandler;
  },
  eventHandler$1: function(arg0) {
    return this.get$eventHandler().call$1(arg0);
  },
  FrameworkEventListenerValuePair$2: function(type, eventHandler) {
    this._type = type;
    this._eventHandler = eventHandler;
  }
};

$$.ClassFactory = {"": "Object;_constructorMethod,_liblib5$_library,_className",
  _constructorMethod$0: function() {
    return this._constructorMethod.call$0();
  },
  immediateIntance$0: function() {
    return this._constructorMethod$0();
  },
  ClassFactory$3$className$constructorMethod$library: function(className, constructorMethod, library) {
    this._liblib5$_library = library;
    this._className = className;
    this._constructorMethod = constructorMethod;
  }
};

$$.UpdateManager = {"": "Object;handlers",
  $gt: function(handler) {
    var t1, i, timeoutHandler;
    t1 = this.handlers;
    i = t1.length;
    for (; i > 0;) {
      --i;
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.FunctionEqualityUtil_equals(handler, t1[i]) === true)
        return;
    }
    timeoutHandler = $.TimeoutHandler$();
    timeoutHandler._handler = handler;
    timeoutHandler._beforeHandler = this.get$_removeHandler();
    t1.push(handler);
    $.Timer_Timer(20, timeoutHandler.get$_execute());
  },
  _removeHandler$1: function(handler) {
    var t1, i, t2, t3;
    t1 = this.handlers;
    i = t1.length;
    for (t2 = $.getInterceptor(handler); i > 0;) {
      t3 = t2.toString$0(handler);
      --i;
      if (i >= t1.length)
        throw $.ioore(i);
      if ($.$$eq(t3, $.toString(t1[i])) === true) {
        $.CONSTANT.removeAt$1(t1, i);
        return;
      }
    }
  },
  get$_removeHandler: function() {
    return new $.BoundClosure(this, "_removeHandler$1");
  }
};

$$.TimeoutHandler = {"": "Object;_handler,_beforeHandler",
  _handler$0: function() {
    return this._handler.call$0();
  },
  _beforeHandler$1: function(arg0) {
    return this._beforeHandler.call$1(arg0);
  },
  _execute$1: function(timer) {
    this._beforeHandler$1(this._handler);
    this._handler$0();
  },
  get$_execute: function() {
    return new $.BoundClosure(this, "_execute$1");
  }
};

$$.ListCollection = {"": "FrameworkEventDispatcher;_source>,_dispatcher,_listenerValuePairs",
  get$length: function() {
    return $.length(this._source);
  },
  $index: function(index) {
    var t1 = this._source;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $add: function(item) {
    return this.addItem$1(item);
  },
  $sub: function(item) {
    return this.removeItem$1(item);
  },
  $and: function(collection) {
    return this.concat$1(collection);
  },
  $or: function(collection) {
    return this;
  },
  addItem$1: function(item) {
    $.Object$();
    $.addLast(this._source, item);
    this.dispatch$1($.CollectionEvent_CollectionEvent($.CollectionEvent_COLLECTION_CHANGED, item));
    return $.length(this._source);
  },
  removeItem$1: function(item) {
    var t1, i;
    t1 = $.length(this._source);
    if (typeof t1 !== "number")
      return this.removeItem$1$bailout(1, item, t1);
    for (i = t1; i > 0;) {
      --i;
      if ($.$$eq($.$$index(this._source, i), item) === true) {
        $.removeAt(this._source, i);
        this.dispatch$1($.CollectionEvent_CollectionEvent($.CollectionEvent_COLLECTION_CHANGED, item));
        return $.length(this._source);
      }
    }
    return;
  },
  removeItem$1$bailout: function(state0, item, t1) {
    var i, t2;
    for (i = t1; t1 = $.getInterceptor$JSNumber(i), t1.$gt(i, 0) === true;) {
      t2 = this._source;
      i = t1.$sub(i, 1);
      if ($.$$eq($.$$index(t2, i), item) === true) {
        $.removeAt(this._source, i);
        this.dispatch$1($.CollectionEvent_CollectionEvent($.CollectionEvent_COLLECTION_CHANGED, item));
        return $.length(this._source);
      }
    }
    return;
  },
  concat$1: function(collection) {
    var newSource = [];
    $.CONSTANT.addAll$1(newSource, this._source);
    $.CONSTANT.addAll$1(newSource, collection.get$_source());
    return $.ListCollection$(newSource);
  },
  ListCollection$1$source: function(source) {
    this._source = source == null ? [] : source;
  }
};

$$.Button = {"": "UIWrapper;_liblib4$_label,_eventDispatcher,_isLayoutUpdateRequired,_graphics,_includeInLayout,_width,_percentWidth,_height,_percentHeight,_paddingLeft,_paddingRight,_paddingTop,_paddingBottom,_layout,_addLaterElements,_later,_isInitialized,_owner,_children,_elementId,_control",
  get$label: function() {
    return this._liblib4$_label;
  },
  set$label: function(value) {
    if ($.$$eq(value, this._liblib4$_label) !== true) {
      this._liblib4$_label = value;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("labelChanged", null));
      $.$$gt(this.get$later(), this.get$_commitLabel());
    }
  },
  _createChildren$0: function() {
    if (this._control == null) {
      var element = $.ButtonElement_ButtonElement();
      element.get$onClick().listen$1(new $.Button__createChildren_anon(this));
      this._setControl$1(element);
    }
    $.UIWrapper.prototype._createChildren$0.call(this);
  },
  _commitLabel$0: function() {
    var t1, t3;
    t1 = this._control;
    if (!(t1 == null))
      $.callTypeCast(t1, "$isButtonElement").set$text(this._liblib4$_label);
    else {
      t1 = this.get$later();
      t3 = this.get$_commitLabel();
      if (typeof t1 !== "number")
        return this._commitLabel$0$bailout(1, t1);
      if (typeof t3 !== "number")
        return this._commitLabel$0$bailout(2, t1, t3);
    }
  },
  _commitLabel$0$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this._control;
      default:
        if (state0 === 0 && !(t1 == null))
          $.callTypeCast(t1, "$isButtonElement").set$text(this._liblib4$_label);
        else
          switch (state0) {
            case 0:
              t1 = this.get$later();
            case 1:
              state0 = 0;
              t3 = this.get$_commitLabel();
            case 2:
              state0 = 0;
              $.$$gt(t1, t3);
          }
    }
  },
  get$_commitLabel: function() {
    return new $.BoundClosure3(this, "_commitLabel$0");
  }
};

$$.ComboBox = {"": "ListWrapper;_isElementUpdateRequired,_isScrollPolicyInvalid,_dataProvider,_horizontalScrollPolicy,_verticalScrollPolicy,_labelFunction,_selectedIndex,_selectedItem,_eventDispatcher,_isLayoutUpdateRequired,_graphics,_includeInLayout,_width,_percentWidth,_height,_percentHeight,_paddingLeft,_paddingRight,_paddingTop,_paddingBottom,_layout,_addLaterElements,_later,_isInitialized,_owner,_children,_elementId,_control",
  _createChildren$0: function() {
    $.UIWrapper.prototype._createChildren$0.call(this);
    this._setControl$1($.SelectElement_SelectElement());
    this._control.get$onChange().listen$1(this.get$control_changeHandler());
  },
  _createElement$2: function(item, index) {
    var itemToString = !(this._labelFunction == null) ? this._labelFunction$1(item) : $.toString(item);
    $.add(this._control.get$children(), $.OptionElement_OptionElement(itemToString, $.CONSTANT1.toString$0(index), $, $));
  },
  _updateSelection$0: function() {
    $.callTypeCast(this._control, "$isSelectElement").set$selectedIndex(this._selectedIndex);
  },
  get$_updateSelection: function() {
    return new $.BoundClosure3(this, "_updateSelection$0");
  },
  control_changeHandler$1: function(event) {
    if ($.$$gt($.length(this._control.get$selectedOptions()), 0) === true) {
      this.set$selectedIndex(this._control.get$selectedIndex());
      this.set$selectedItem($.$$index(this._dataProvider, this._control.get$selectedIndex()));
    } else {
      this.set$selectedIndex(-1);
      this.set$selectedItem(null);
    }
  },
  get$control_changeHandler: function() {
    return new $.BoundClosure(this, "control_changeHandler$1");
  }
};

$$.HGroup = {"": "Group;_eventDispatcher,_isLayoutUpdateRequired,_graphics,_includeInLayout,_width,_percentWidth,_height,_percentHeight,_paddingLeft,_paddingRight,_paddingTop,_paddingBottom,_layout,_addLaterElements,_later,_isInitialized,_owner,_children,_elementId,_control",
  HGroup$1$elementId: function(elementId) {
    this._layout = $.HorizontalLayout$();
  }
};

$$.Graphics = {"": "UIWrapper;_context,_eventDispatcher,_isLayoutUpdateRequired,_graphics,_includeInLayout,_width,_percentWidth,_height,_percentHeight,_paddingLeft,_paddingRight,_paddingTop,_paddingBottom,_layout,_addLaterElements,_later,_isInitialized,_owner,_children,_elementId,_control",
  get$context: function() {
    return this._context;
  },
  _createChildren$0: function() {
    var t1, t2;
    $.UIWrapper.prototype._createChildren$0.call(this);
    t1 = this._owner;
    t2 = t1.get$_width();
    this._setControl$1($.CanvasElement_CanvasElement(t1.get$_height(), t2));
    this._control.get$style().set$position("absolute");
    this._control.get$style().set$left("0px");
    this._control.get$style().set$top("0px");
    this._context = this._control.getContext$1("2d");
  },
  _updateLayout$0: function() {
    if ($.$$gt(this._width, 0) === true && $.$$gt(this._height, 0) === true) {
      var t1 = this._control;
      if (!(t1 == null)) {
        $.callTypeCast(t1, "$isCanvasElement");
        t1.set$width(this._width);
        t1.set$height(this._height);
      }
      $.UIWrapper.prototype._updateLayout$0.call(this);
    }
  },
  Graphics$1$elementId: function(elementId) {
    this._includeInLayout = false;
  }
};

$$.Group = {"": "UIWrapper;_eventDispatcher,_isLayoutUpdateRequired,_graphics,_includeInLayout,_width,_percentWidth,_height,_percentHeight,_paddingLeft,_paddingRight,_paddingTop,_paddingBottom,_layout,_addLaterElements,_later,_isInitialized,_owner,_children,_elementId,_control",
  _createChildren$0: function() {
    if (this._control == null)
      this._setControl$1($.DivElement_DivElement());
    $.UIWrapper.prototype._createChildren$0.call(this);
  }
};

$$.ItemRenderer = {"": "UIWrapper;",
  get$data: function() {
    return this._data;
  },
  set$data: function(value) {
    if ($.$$eq(value, this._data) !== true) {
      this._data = value;
      this._invalidateData$0();
    }
  },
  set$state: function(value) {
    if ($.$$eq(value, this._liblib4$_state) !== true) {
      this._liblib4$_state = value;
      this._updateAfterInteraction$0();
    }
  },
  get$selected: function() {
    return this._selected;
  },
  set$selected: function(value) {
    if ($.$$eq(value, this._selected) !== true) {
      this._selected = value;
      this._isSelectionInvalid = true;
      this._updateAfterInteraction$0();
    }
  },
  createChildren$0: function() {
  },
  invalidateData$0: function() {
  },
  updateLayout$0: function() {
  },
  updateAfterInteraction$0: function() {
  },
  _createChildren$0: function() {
    $.UIWrapper.prototype._createChildren$0.call(this);
    this._setControl$1($.DivElement_DivElement());
    this._selectIndicator = $.Graphics$(null);
    this.add$2$prepend(this._selectIndicator, true);
    this._control.get$style().set$overflow("hidden");
    this.createChildren$0();
  },
  _invalidateData$0: function() {
    this.invalidateData$0();
  },
  _updateLayout$0: function() {
    $.UIWrapper.prototype._updateLayout$0.call(this);
    $.$$gt(this.get$later(), this.get$_updateAfterInteraction());
    this.updateLayout$0();
  },
  _updateAfterInteraction$0: function() {
    var t1, t3;
    t1 = this._selectIndicator;
    if (!(t1 == null) && !(t1.get$context() == null))
      if (this._selected === true) {
        if (this._isSelectionInvalid) {
          this._isSelectionInvalid = false;
          this._fraction = 0;
          t1 = this.get$later();
          t3 = this.get$_applySelectionAlpha();
          if (typeof t1 !== "number")
            return this._updateAfterInteraction$0$bailout(1, t1);
          if (typeof t3 !== "number")
            return this._updateAfterInteraction$0$bailout(2, t1, t3);
        }
      } else {
        t1 = this._liblib4$_state;
        if (typeof t1 !== "string")
          return this._updateAfterInteraction$0$bailout(3, t1);
        t3 = this._selectIndicator;
        if (!(t1 === "mouseout")) {
          t3.get$context().clearRect$4(0, 0, this._width, this._height);
          this._selectIndicator.get$context().beginPath$0();
          this._selectIndicator.get$context().set$globalAlpha(0.5);
          this._selectIndicator.get$context().set$fillStyle("#80bbee");
          this._selectIndicator.get$context().fillRect$4(0, 0, this._width, this._height);
          this._selectIndicator.get$context().closePath$0();
        } else
          t3.get$context().clearRect$4(0, 0, this._width, this._height);
      }
    else {
      t1 = this.get$later();
      t3 = this.get$_updateAfterInteraction();
      if (typeof t1 !== "number")
        return this._updateAfterInteraction$0$bailout(4, t1);
      if (typeof t3 !== "number")
        return this._updateAfterInteraction$0$bailout(5, t1, t3);
    }
    this.updateAfterInteraction$0();
  },
  _updateAfterInteraction$0$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this._selectIndicator;
      default:
        if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && !(t1 == null) && !(t1.get$context() == null))
          switch (state0) {
            case 0:
            default:
              if (state0 === 2 || state0 === 1 || state0 === 0 && this._selected === true)
                switch (state0) {
                  case 0:
                  default:
                    if (state0 === 2 || state0 === 1 || state0 === 0 && this._isSelectionInvalid)
                      switch (state0) {
                        case 0:
                          this._isSelectionInvalid = false;
                          this._fraction = 0;
                          t1 = this.get$later();
                        case 1:
                          state0 = 0;
                          t3 = this.get$_applySelectionAlpha();
                        case 2:
                          state0 = 0;
                          $.$$gt(t1, t3);
                      }
                }
              else
                switch (state0) {
                  case 0:
                    t1 = this._liblib4$_state;
                  case 3:
                    state0 = 0;
                    t1 = $.$$eq(t1, "mouseout");
                    t3 = this._selectIndicator;
                    if (t1 !== true) {
                      t3.get$context().clearRect$4(0, 0, this._width, this._height);
                      this._selectIndicator.get$context().beginPath$0();
                      this._selectIndicator.get$context().set$globalAlpha(0.5);
                      this._selectIndicator.get$context().set$fillStyle("#80bbee");
                      this._selectIndicator.get$context().fillRect$4(0, 0, this._width, this._height);
                      this._selectIndicator.get$context().closePath$0();
                    } else
                      t3.get$context().clearRect$4(0, 0, this._width, this._height);
                }
          }
        else
          switch (state0) {
            case 0:
              t1 = this.get$later();
            case 4:
              state0 = 0;
              t3 = this.get$_updateAfterInteraction();
            case 5:
              state0 = 0;
              $.$$gt(t1, t3);
          }
        this.updateAfterInteraction$0();
    }
  },
  get$_updateAfterInteraction: function() {
    return new $.BoundClosure3(this, "_updateAfterInteraction$0");
  },
  _applySelectionAlpha$0: function() {
    var t1, easer, currentFraction, t3;
    if (this._selected === true) {
      t1 = this._fraction;
      if (typeof t1 !== "number")
        return this._applySelectionAlpha$0$bailout(1, t1);
      this._fraction = t1 + 0.025;
      easer = $.Sine$(0.5);
      t1 = this._fraction;
      if (typeof t1 !== "number")
        return this._applySelectionAlpha$0$bailout(2, t1, easer);
      if (t1 > 1)
        t1 = 1;
      currentFraction = easer.ease$1(t1);
      this._selectIndicator.get$context().clearRect$4(0, 0, this._width, this._height);
      this._selectIndicator.get$context().beginPath$0();
      this._selectIndicator.get$context().set$globalAlpha(currentFraction);
      this._selectIndicator.get$context().set$fillStyle("#80bbee");
      this._selectIndicator.get$context().fillRect$4(0, 0, this._width, this._height);
      this._selectIndicator.get$context().closePath$0();
      t1 = this._fraction;
      if (typeof t1 !== "number")
        return this._applySelectionAlpha$0$bailout(4, t1);
      if (t1 < 1) {
        t1 = this.get$later();
        t3 = this.get$_applySelectionAlpha();
        if (typeof t1 !== "number")
          return this._applySelectionAlpha$0$bailout(5, t1);
        if (typeof t3 !== "number")
          return this._applySelectionAlpha$0$bailout(6, t1, null, t3);
      }
    }
  },
  _applySelectionAlpha$0$bailout: function(state0, t1, easer, t3) {
    switch (state0) {
      case 0:
      default:
        var currentFraction;
        if (state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && this._selected === true)
          switch (state0) {
            case 0:
              t1 = this._fraction;
            case 1:
              state0 = 0;
              this._fraction = $.$$add(t1, 0.025);
              easer = $.Sine$(0.5);
              t1 = this._fraction;
            case 2:
              state0 = 0;
            case 3:
              if (state0 === 0 && $.$$gt(t1, 1) === true)
                t1 = 1;
              else
                switch (state0) {
                  case 0:
                    t1 = this._fraction;
                  case 3:
                    state0 = 0;
                }
              currentFraction = easer.ease$1(t1);
              this._selectIndicator.get$context().clearRect$4(0, 0, this._width, this._height);
              this._selectIndicator.get$context().beginPath$0();
              this._selectIndicator.get$context().set$globalAlpha(currentFraction);
              this._selectIndicator.get$context().set$fillStyle("#80bbee");
              this._selectIndicator.get$context().fillRect$4(0, 0, this._width, this._height);
              this._selectIndicator.get$context().closePath$0();
              t1 = this._fraction;
            case 4:
              state0 = 0;
            default:
              if (state0 === 6 || state0 === 5 || state0 === 0 && $.$$lt(t1, 1) === true)
                switch (state0) {
                  case 0:
                    t1 = this.get$later();
                  case 5:
                    state0 = 0;
                    t3 = this.get$_applySelectionAlpha();
                  case 6:
                    state0 = 0;
                    $.$$gt(t1, t3);
                }
          }
    }
  },
  get$_applySelectionAlpha: function() {
    return new $.BoundClosure3(this, "_applySelectionAlpha$0");
  }
};

$$.ListRenderer = {"": "ListWrapper;_itemRenderers,_scrollTarget,_itemRendererFactory,_colWidth,_colPercentWidth,_rowHeight,_rowPercentHeight,_isElementUpdateRequired,_isScrollPolicyInvalid,_dataProvider,_horizontalScrollPolicy,_verticalScrollPolicy,_labelFunction,_selectedIndex,_selectedItem,_eventDispatcher,_isLayoutUpdateRequired,_graphics,_includeInLayout,_width,_percentWidth,_height,_percentHeight,_paddingLeft,_paddingRight,_paddingTop,_paddingBottom,_layout,_addLaterElements,_later,_isInitialized,_owner,_children,_elementId,_control",
  set$itemRendererFactory: function(value) {
    if ($.$$eq(value, this._itemRendererFactory) !== true) {
      this._itemRendererFactory = value;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("itemRendererFactoryChanged", null));
      $.$$gt(this.get$later(), this.get$_commitProperties());
    }
  },
  set$colPercentWidth: function(value) {
    if ($.$$eq(value, this._colPercentWidth) !== true) {
      this._colPercentWidth = value;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("colPercentWidthChanged", null));
      $.$$gt(this.get$later(), this.get$_commitProperties());
    }
  },
  set$rowHeight: function(value) {
    if ($.$$eq(value, this._rowHeight) !== true) {
      this._rowHeight = value;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("rowHeightChanged", null));
      $.$$gt(this.get$later(), this.get$_commitProperties());
    }
  },
  _createChildren$0: function() {
    var container = $.DivElement_DivElement();
    this._scrollTarget = $.Group$(null);
    this._scrollTarget.set$includeInLayout(false);
    this.add$1(this._scrollTarget);
    this._setControl$1(container);
    container.get$style().set$border("1px solid #808080");
    container.get$style().set$backgroundColor("#ffffff");
    container.get$onScroll().listen$1(this.get$container_scrollHandler());
    $.UIWrapper.prototype._createChildren$0.call(this);
  },
  _removeAllElements$0: function() {
    var t1 = this._itemRenderers;
    if (!(t1 == null))
      $.removeAll(t1, t1);
    this.removeAll$0();
  },
  _createElement$2: function(item, index) {
    var renderer, t1;
    if (this._itemRenderers == null)
      this._itemRenderers = $.List_List(0);
    renderer = this._itemRendererFactory.immediateIntance$0();
    t1 = this._colWidth;
    if (t1 > 0)
      renderer.set$width(t1);
    else
      renderer.set$percentWidth(this._colPercentWidth);
    t1 = this._rowHeight;
    if (typeof t1 !== "number")
      return this._createElement$2$bailout(1, renderer, t1);
    if (t1 > 0)
      renderer.set$height(t1);
    else
      renderer.set$percentHeight(this.get$_colPercentHeight());
    $.add(this._itemRenderers, renderer);
    $.$$indexSet(renderer, "controlChanged", this.get$_itemRenderer_controlChangedHandler());
    this.add$1(renderer);
  },
  _createElement$2$bailout: function(state0, renderer, t1) {
    if ($.$$gt(t1, 0) === true)
      renderer.set$height(this._rowHeight);
    else
      renderer.set$percentHeight(this.get$_colPercentHeight());
    $.add(this._itemRenderers, renderer);
    $.$$indexSet(renderer, "controlChanged", this.get$_itemRenderer_controlChangedHandler());
    this.add$1(renderer);
  },
  _getPageItemSize$0: function() {
    var t1 = this._dataProvider;
    if (t1 == null || $.$$eq($.length(t1), 0) === true)
      return $.UIWrapper.prototype._getPageItemSize$0.call(this);
    return this._rowHeight;
  },
  _getPageOffset$0: function() {
    return this._control.get$scrollTop();
  },
  _getPageSize$0: function() {
    return $.$$mul($.length(this._dataProvider), this._rowHeight);
  },
  _updateElements$0: function() {
    var t1, t3, t5, elementsRequired, existingLen, len, i;
    if (!(this._itemRendererFactory == null)) {
      if (this._colWidth <= 0) {
        t1 = this._colPercentWidth;
        if (typeof t1 !== "number")
          return this._updateElements$0$bailout(1, t1);
        t1 = t1 > 0;
      } else
        t1 = true;
      if (t1) {
        t1 = this._rowHeight;
        if (typeof t1 !== "number")
          return this._updateElements$0$bailout(2, t1);
        t1 = t1 > 0 || this._rowPercentHeight > 0;
      } else
        t1 = false;
    } else
      t1 = false;
    if (t1) {
      t1 = this._height;
      t3 = this._rowHeight;
      if (typeof t1 !== "number")
        return this._updateElements$0$bailout(3, t1);
      if (typeof t3 !== "number")
        return this._updateElements$0$bailout(4, t1, t3);
      t5 = $.CONSTANT5.toInt$0(t1 / t3);
      if (typeof t5 !== "number")
        return this._updateElements$0$bailout(5, null, null, t5);
      elementsRequired = $.min(t5 + 2, $.length(this._dataProvider));
      t1 = this._itemRenderers;
      if (!(t1 == null)) {
        t1 = $.length(t1);
        if (typeof t1 !== "number")
          return this._updateElements$0$bailout(6, t1, null, null, elementsRequired);
        existingLen = t1;
      } else
        existingLen = 0;
      len = elementsRequired - existingLen;
      for (i = 0; i < len; ++i)
        this._createElement$2(null, -1);
      t1 = this._width;
      this._scrollTarget.set$width(t1);
      t1 = $.length(this._dataProvider);
      t3 = this._rowHeight;
      if (typeof t1 !== "number")
        return this._updateElements$0$bailout(7, t1, null, null, null, len);
      if (typeof t3 !== "number")
        return this._updateElements$0$bailout(8, t1, t3, null, null, len);
      this._scrollTarget.set$height(t1 * t3);
      if (len > 0) {
        this._updateVisibleItemRenderers$0();
        $.UIWrapper.prototype._updateLayout$0.call(this);
        this._updateElements$0();
      }
    }
  },
  _updateElements$0$bailout: function(state0, t1, t3, t5, elementsRequired, len) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && !(this._itemRendererFactory == null))
          switch (state0) {
            case 0:
            case 1:
              if (state0 === 1 || state0 === 0 && this._colWidth <= 0)
                switch (state0) {
                  case 0:
                    t1 = this._colPercentWidth;
                  case 1:
                    state0 = 0;
                    t3 = $.$$gt(t1, 0) === true;
                    t1 = t3;
                }
              else
                t1 = true;
            case 2:
              if (state0 === 2 || state0 === 0 && t1)
                switch (state0) {
                  case 0:
                    t1 = this._rowHeight;
                  case 2:
                    state0 = 0;
                    t1 = $.$$gt(t1, 0) === true || this._rowPercentHeight > 0;
                }
              else
                t1 = false;
          }
        else
          t1 = false;
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
        var existingLen, i;
        if (state0 === 8 || state0 === 7 || state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 0 && t1)
          switch (state0) {
            case 0:
              t1 = this._height;
            case 3:
              state0 = 0;
              t3 = this._rowHeight;
            case 4:
              state0 = 0;
              t5 = $.toInt($.$$div(t1, t3));
            case 5:
              state0 = 0;
              elementsRequired = $.min($.$$add(t5, 2), $.length(this._dataProvider));
              t1 = this._itemRenderers;
            case 6:
              if (state0 === 6 || state0 === 0 && !(t1 == null))
                switch (state0) {
                  case 0:
                    t1 = $.length(t1);
                  case 6:
                    state0 = 0;
                    existingLen = t1;
                }
              else
                existingLen = 0;
              if (typeof existingLen !== "number")
                throw $.iae(existingLen);
              len = elementsRequired - existingLen;
              for (i = 0; i < len; ++i)
                this._createElement$2(null, -1);
              t1 = this._width;
              this._scrollTarget.set$width(t1);
              t1 = $.length(this._dataProvider);
            case 7:
              state0 = 0;
              t3 = this._rowHeight;
            case 8:
              state0 = 0;
              t3 = $.$$mul(t1, t3);
              this._scrollTarget.set$height(t3);
              if (len > 0) {
                this._updateVisibleItemRenderers$0();
                $.UIWrapper.prototype._updateLayout$0.call(this);
                this._updateElements$0();
              }
          }
    }
  },
  _updateLayout$0: function() {
    $.UIWrapper.prototype._updateLayout$0.call(this);
    this._updateElements$0();
  },
  _updateVisibleItemRenderers$0: function() {
    var t1, t3, t5, i, rendererIndex, rendererIndex0, t2, data;
    t1 = $.length(this._dataProvider);
    if (typeof t1 !== "number")
      return this._updateVisibleItemRenderers$0$bailout(1, t1);
    t3 = $.toInt($.$$div(this._control.get$scrollTop(), this._getPageItemSize$0()));
    if (typeof t3 !== "number")
      return this._updateVisibleItemRenderers$0$bailout(2, t1, t3);
    t5 = $.length(this._itemRenderers);
    if (typeof t5 !== "number")
      throw $.iae(t5);
    t5 = t3 + t5;
    for (i = t3, rendererIndex = 0; i < t5; ++i, rendererIndex = rendererIndex0) {
      rendererIndex0 = rendererIndex + 1;
      t2 = $.$$index(this._itemRenderers, rendererIndex);
      if (i < t1) {
        data = $.$$index(this._dataProvider, i);
        t2.set$includeInLayout(true);
        t2.get$_control().set$hidden(false);
        t2.set$selected(i === this._selectedIndex);
      } else {
        t2.set$includeInLayout(false);
        t2.get$_control().set$hidden(true);
        t2.set$selected(false);
        data = null;
      }
      t2.set$data(!(this._labelFunction == null) && !(data == null) ? this._labelFunction$1(data) : data);
      t2.invalidateData$0();
    }
  },
  _updateVisibleItemRenderers$0$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = $.length(this._dataProvider);
      case 1:
        state0 = 0;
        t3 = $.toInt($.$$div(this._control.get$scrollTop(), this._getPageItemSize$0()));
      case 2:
        var t5, i, rendererIndex, t2, rendererIndex0, data;
        state0 = 0;
        t5 = $.$$add(t3, $.length(this._itemRenderers));
        for (i = t3, rendererIndex = 0; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, t5) === true; i = t2.$add(i, 1), rendererIndex = rendererIndex0) {
          rendererIndex0 = rendererIndex + 1;
          t3 = $.$$index(this._itemRenderers, rendererIndex);
          if (t2.$lt(i, t1) === true) {
            data = $.$$index(this._dataProvider, i);
            t3.set$includeInLayout(true);
            t3.get$_control().set$hidden(false);
            t3.set$selected(t2.$eq(i, this._selectedIndex));
          } else {
            t3.set$includeInLayout(false);
            t3.get$_control().set$hidden(true);
            t3.set$selected(false);
            data = null;
          }
          t3.set$data(!(this._labelFunction == null) && !(data == null) ? this._labelFunction$1(data) : data);
          t3.invalidateData$0();
        }
    }
  },
  _handleMouseInteraction$1: function(event) {
    var t1, t2, t4, i, newSelectedItem, t3;
    t1 = event.get$currentTarget();
    $.callTypeCast(t1, "$isElement");
    t2 = $.toInt($.$$div(this._control.get$scrollTop(), this._getPageItemSize$0()));
    if (typeof t2 !== "number")
      return this._handleMouseInteraction$1$bailout(1, event, t2, t1);
    t4 = $.length(this._itemRenderers);
    if (typeof t4 !== "number")
      return this._handleMouseInteraction$1$bailout(2, event, t2, t1, t4);
    for (i = t4, newSelectedItem = null; i > 0;) {
      --i;
      t3 = $.$$index(this._itemRenderers, i);
      if ($.$$eq(event.get$type(), "mousedown") === true)
        if ($.$$eq(t3.get$control(), t1) === true) {
          this.set$selectedIndex(t2 + i);
          newSelectedItem = $.$$index(this._dataProvider, this.get$selectedIndex());
          t3.set$selected(true);
        } else
          t3.set$selected(false);
      else if ($.$$eq(t3.get$control(), t1) === true)
        t3.set$state(event.get$type());
      else
        t3.set$state("mouseout");
    }
    this.set$selectedItem(newSelectedItem);
  },
  _handleMouseInteraction$1$bailout: function(state0, event, t2, t1, t4) {
    switch (state0) {
      case 0:
        t1 = event.get$currentTarget();
        $.callTypeCast(t1, "$isElement");
        t2 = $.toInt($.$$div(this._control.get$scrollTop(), this._getPageItemSize$0()));
      case 1:
        state0 = 0;
        t4 = $.length(this._itemRenderers);
      case 2:
        var t3, i, newSelectedItem, t5;
        state0 = 0;
        for (t3 = $.getInterceptor$JSNumber(t2), i = t4, newSelectedItem = null; t4 = $.getInterceptor$JSNumber(i), t4.$gt(i, 0) === true;) {
          t5 = this._itemRenderers;
          i = t4.$sub(i, 1);
          t5 = $.$$index(t5, i);
          if ($.$$eq(event.get$type(), "mousedown") === true)
            if ($.$$eq(t5.get$control(), t1) === true) {
              this.set$selectedIndex(t3.$add(t2, i));
              newSelectedItem = $.$$index(this._dataProvider, this.get$selectedIndex());
              t5.set$selected(true);
            } else
              t5.set$selected(false);
          else if ($.$$eq(t5.get$control(), t1) === true)
            t5.set$state(event.get$type());
          else
            t5.set$state("mouseout");
        }
        this.set$selectedItem(newSelectedItem);
    }
  },
  get$_handleMouseInteraction: function() {
    return new $.BoundClosure(this, "_handleMouseInteraction$1");
  },
  container_scrollHandler$1: function(event) {
    this._updateVisibleItemRenderers$0();
    $.UIWrapper.prototype._updateLayout$0.call(this);
    this._updateElements$0();
  },
  get$container_scrollHandler: function() {
    return new $.BoundClosure(this, "container_scrollHandler$1");
  },
  _itemRenderer_controlChangedHandler$1: function(event) {
    var renderer = $.callTypeCast(event.get$relatedObject(), "$isDivElement");
    renderer.get$onMouseOver().listen$1(this.get$_handleMouseInteraction());
    renderer.get$onMouseOut().listen$1(this.get$_handleMouseInteraction());
    renderer.get$onMouseDown().listen$1(this.get$_handleMouseInteraction());
    renderer.get$onMouseUp().listen$1(this.get$_handleMouseInteraction());
  },
  get$_itemRenderer_controlChangedHandler: function() {
    return new $.BoundClosure(this, "_itemRenderer_controlChangedHandler$1");
  },
  ListRenderer$0: function() {
    var defaultLayout = $.VerticalLayout$();
    defaultLayout.set$useVirtualLayout(true);
    defaultLayout.set$gap(0);
    this._layout = defaultLayout;
    this._verticalScrollPolicy = $.ScrollPolicy_AUTO();
  }
};

$$.ListWrapper = {"": "UIWrapper;",
  get$dataProvider: function() {
    return this._dataProvider;
  },
  set$dataProvider: function(value) {
    var t1 = this._dataProvider;
    if (!(t1 == null))
      t1.removeEventListener$2($.CollectionEvent_COLLECTION_CHANGED, this.get$_dataProvider_collectionChangedHandler());
    this._dataProvider = value;
    this._isElementUpdateRequired = true;
    if (!(value == null))
      value.addEventListener$2($.CollectionEvent_COLLECTION_CHANGED, this.get$_dataProvider_collectionChangedHandler());
    $.$$gt(this.get$later(), this.get$_commitProperties());
  },
  _labelFunction$1: function(arg0) {
    return this._labelFunction.call$1(arg0);
  },
  set$labelFunction: function(value) {
    this._labelFunction = value;
  },
  get$selectedIndex: function() {
    return this._selectedIndex;
  },
  set$selectedIndex: function(value) {
    if ($.$$eq(value, this._selectedIndex) !== true) {
      this._selectedIndex = value;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("selectedIndexChanged", value));
      $.$$gt(this.get$later(), this.get$_updateSelection());
    }
  },
  set$selectedItem: function(value) {
    if ($.$$eq(value, this._selectedItem) !== true) {
      this._selectedItem = value;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("selectedItemChanged", value));
      $.$$gt(this.get$later(), this.get$_updateSelection());
    }
  },
  $add: function(item) {
    if (this._dataProvider == null)
      this.set$dataProvider($.ListCollection$(null));
    return this._dataProvider.addItem$1(item);
  },
  $sub: function(item) {
    if (this._dataProvider == null)
      this.set$dataProvider($.ListCollection$(null));
    return this._dataProvider.removeItem$1(item);
  },
  _setControl$1: function(element) {
    $.UIWrapper.prototype._setControl$1.call(this, element);
    this._isElementUpdateRequired = true;
    this._isScrollPolicyInvalid = true;
  },
  _commitProperties$0: function() {
    $.UIWrapper.prototype._commitProperties$0.call(this);
    if (!(this._control == null)) {
      if (this._isElementUpdateRequired) {
        this._isElementUpdateRequired = false;
        this._updateElements$0();
      }
      if (this._isScrollPolicyInvalid) {
        this._isScrollPolicyInvalid = false;
        this._updateScrollPolicy$0();
      }
    }
  },
  get$_commitProperties: function() {
    return new $.BoundClosure3(this, "_commitProperties$0");
  },
  _removeAllElements$0: function() {
    for (; $.$$gt($.length(this._control.get$children()), 0) === true;)
      $.removeLast(this._control.get$children());
  },
  _updateElements$0: function() {
    var t1, i;
    t1 = $.length(this._dataProvider);
    if (typeof t1 !== "number")
      return this._updateElements$0$bailout0(1, t1);
    this._removeAllElements$0();
    for (i = 0; i < t1; ++i)
      this._createElement$2($.$$index(this._dataProvider, i), i);
    this._updateSelection$0();
  },
  _updateElements$0$bailout0: function(state0, t1) {
    var i;
    this._removeAllElements$0();
    for (i = 0; $.CONSTANT1.$lt(i, t1); ++i)
      this._createElement$2($.$$index(this._dataProvider, i), i);
    this._updateSelection$0();
  },
  _updateSelection$0: function() {
  },
  get$_updateSelection: function() {
    return new $.BoundClosure3(this, "_updateSelection$0");
  },
  _createElement$2: function(item, index) {
  },
  _updateScrollPolicy$0: function() {
    var t1, t2;
    this._control.get$style().set$overflow("visible");
    t1 = this._horizontalScrollPolicy;
    t2 = $.getInterceptor(t1);
    if (t2.$eq(t1, "none") === true)
      this._control.get$style().set$overflowX("hidden");
    else {
      t1 = t2.$eq(t1, "auto");
      t2 = this._control;
      if (t1 === true)
        t2.get$style().set$overflowX("auto");
      else
        t2.get$style().set$overflowX("scroll");
    }
    if ($.$$eq(this._verticalScrollPolicy, "none") === true)
      this._control.get$style().set$overflowY("hidden");
    else {
      t1 = $.$$eq(this._verticalScrollPolicy, "auto");
      t2 = this._control;
      if (t1 === true)
        t2.get$style().set$overflowY("auto");
      else
        t2.get$style().set$overflowY("scroll");
    }
  },
  _dataProvider_collectionChangedHandler$1: function(event) {
    this._isElementUpdateRequired = true;
    $.$$gt(this.get$later(), this.get$_commitProperties());
  },
  get$_dataProvider_collectionChangedHandler: function() {
    return new $.BoundClosure(this, "_dataProvider_collectionChangedHandler$1");
  }
};

$$.RichText = {"": "UIWrapper;_text,_eventDispatcher,_isLayoutUpdateRequired,_graphics,_includeInLayout,_width,_percentWidth,_height,_percentHeight,_paddingLeft,_paddingRight,_paddingTop,_paddingBottom,_layout,_addLaterElements,_later,_isInitialized,_owner,_children,_elementId,_control",
  set$text: function(value) {
    if ($.$$eq(value, this._text) !== true) {
      this._text = value;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("textChanged", null));
      $.$$gt(this.get$later(), this.get$_commitText());
    }
  },
  _createChildren$0: function() {
    $.UIWrapper.prototype._createChildren$0.call(this);
    this._setControl$1($.SpanElement_SpanElement());
    this._control.get$style().set$overflow("hidden");
  },
  _commitText$0: function() {
    var t1, t3;
    t1 = this._control;
    if (!(t1 == null))
      $.callTypeCast(t1, "$isSpanElement").set$text(this._text);
    else {
      t1 = this.get$later();
      t3 = this.get$_commitText();
      if (typeof t1 !== "number")
        return this._commitText$0$bailout(1, t1);
      if (typeof t3 !== "number")
        return this._commitText$0$bailout(2, t1, t3);
    }
  },
  _commitText$0$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this._control;
      default:
        if (state0 === 0 && !(t1 == null))
          $.callTypeCast(t1, "$isSpanElement").set$text(this._text);
        else
          switch (state0) {
            case 0:
              t1 = this.get$later();
            case 1:
              state0 = 0;
              t3 = this.get$_commitText();
            case 2:
              state0 = 0;
              $.$$gt(t1, t3);
          }
    }
  },
  get$_commitText: function() {
    return new $.BoundClosure3(this, "_commitText$0");
  }
};

$$.UIWrapper = {"": "Object;_isLayoutUpdateRequired<,_width=,_height=,_owner<,_control>",
  get$addEventListener: function() {
    return this._eventDispatcher.get$addEventListener();
  },
  addEventListener$2: function(arg0, arg1) {
    return this.get$addEventListener().call$2(arg0, arg1);
  },
  addEventListener$2: function(arg0, arg1) {
    return this.get$addEventListener().call$2(arg0, arg1);
  },
  get$removeEventListener: function() {
    return this._eventDispatcher.get$removeEventListener();
  },
  removeEventListener$2: function(arg0, arg1) {
    return this.get$removeEventListener().call$2(arg0, arg1);
  },
  get$dispatch: function() {
    return this._eventDispatcher.get$dispatch();
  },
  dispatch$1: function(arg0) {
    return this.get$dispatch().call$1(arg0);
  },
  dispatch$1: function(arg0) {
    return this.get$dispatch().call$1(arg0);
  },
  dispatch$1: function(arg0) {
    return this.get$dispatch().call$1(arg0);
  },
  dispatch$1: function(arg0) {
    return this.get$dispatch().call$1(arg0);
  },
  dispatch$1: function(arg0) {
    return this.get$dispatch().call$1(arg0);
  },
  dispatch$1: function(arg0) {
    return this.get$dispatch().call$1(arg0);
  },
  get$includeInLayout: function() {
    return this._includeInLayout;
  },
  set$includeInLayout: function(value) {
    var t1;
    if ($.$$eq(value, this._includeInLayout) !== true) {
      this._includeInLayout = value;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("includeInLayoutChanged", null));
      t1 = this._owner;
      if (!(t1 == null)) {
        t1.set$_isLayoutUpdateRequired(true);
        $.$$gt(this.get$later(), this._owner.get$_commitProperties());
      }
      $.$$gt(this.get$later(), this.get$_commitProperties());
    }
  },
  get$width: function() {
    return this._width;
  },
  set$width: function(value) {
    var t1, t3;
    if ($.$$eq(value, this._width) !== true) {
      this._width = value;
      this._isLayoutUpdateRequired = true;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("widthChanged", null));
      t1 = this.get$later();
      t3 = this.get$_commitProperties();
      if (typeof t1 !== "number")
        return this.set$width$bailout(1, t1);
      if (typeof t3 !== "number")
        return this.set$width$bailout(2, t1, t3);
    }
  },
  set$width$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && $.$$eq(value, this._width) !== true)
          switch (state0) {
            case 0:
              this._width = value;
              this._isLayoutUpdateRequired = true;
              this.dispatch$1($.FrameworkEvent_FrameworkEvent("widthChanged", null));
              t1 = this.get$later();
            case 1:
              state0 = 0;
              t3 = this.get$_commitProperties();
            case 2:
              state0 = 0;
              $.$$gt(t1, t3);
          }
    }
  },
  get$percentWidth: function() {
    return this._percentWidth;
  },
  set$percentWidth: function(value) {
    if ($.$$eq(value, this._percentWidth) !== true) {
      this._percentWidth = value;
      this._isLayoutUpdateRequired = true;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("percentWidthChanged", null));
      $.$$gt(this.get$later(), this.get$_commitProperties());
    }
  },
  get$height: function() {
    return this._height;
  },
  set$height: function(value) {
    var t1, t3;
    if ($.$$eq(value, this._height) !== true) {
      this._height = value;
      this._isLayoutUpdateRequired = true;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("heightChanged", null));
      t1 = this.get$later();
      t3 = this.get$_commitProperties();
      if (typeof t1 !== "number")
        return this.set$height$bailout(1, t1);
      if (typeof t3 !== "number")
        return this.set$height$bailout(2, t1, t3);
    }
  },
  set$height$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && $.$$eq(value, this._height) !== true)
          switch (state0) {
            case 0:
              this._height = value;
              this._isLayoutUpdateRequired = true;
              this.dispatch$1($.FrameworkEvent_FrameworkEvent("heightChanged", null));
              t1 = this.get$later();
            case 1:
              state0 = 0;
              t3 = this.get$_commitProperties();
            case 2:
              state0 = 0;
              $.$$gt(t1, t3);
          }
    }
  },
  get$percentHeight: function() {
    return this._percentHeight;
  },
  set$percentHeight: function(value) {
    if ($.$$eq(value, this._percentHeight) !== true) {
      this._percentHeight = value;
      this._isLayoutUpdateRequired = true;
      this.dispatch$1($.FrameworkEvent_FrameworkEvent("percentHeightChanged", null));
      $.$$gt(this.get$later(), this.get$_commitProperties());
    }
  },
  get$later: function() {
    return this._later;
  },
  get$children: function() {
    return this._children;
  },
  get$control: function() {
    return this._control;
  },
  $indexSet: function(type, eventHandler) {
    return this.addEventListener$2(type, eventHandler);
  },
  invalidateProperties$0: function() {
    this._isLayoutUpdateRequired = true;
    $.$$gt(this.get$later(), this.get$_commitProperties());
  },
  add$2$prepend: function(element, prepend) {
    var newList;
    if (this._control == null) {
      if (prepend === true) {
        newList = $.List_List(0);
        newList.push(element);
        $.CONSTANT.addAll$1(newList, this._addLaterElements);
        this._addLaterElements = newList;
      } else
        this._addLaterElements.push(element);
      this.$indexSet("controlChanged", new $.UIWrapper_add_anon(this));
    } else {
      $.CONSTANT.addLast$1(this._children, element);
      element.set$_owner(this);
      element._initialize$0();
      if (prepend === true) {
        newList = $.List_List(0);
        newList.push(element.get$control());
        $.CONSTANT.addAll$1(newList, this._owner.get$_control().get$children());
        $.removeAll(this._owner.get$_control().get$children(), this._owner.get$_control().get$children());
        $.addAll(this._owner.get$_control().get$children(), newList);
      } else
        $.add(this._control.get$children(), element.get$control());
      this.invalidateProperties$0();
    }
  },
  add$1: function(element) {
    return this.add$2$prepend(element, false);
  },
  remove$1: function(element) {
    $.CONSTANT.removeMatching$1(this._children, new $.UIWrapper_remove_anon(element));
    $.CONSTANT.removeMatching$1(this._addLaterElements, new $.UIWrapper_remove_anon0(element));
    element.removeAll$0();
  },
  removeAll$0: function() {
    for (var t1 = this._children; t1.length > 0;)
      this.remove$1($.CONSTANT.get$last(t1));
    if (!(this._control == null))
      for (; $.$$gt($.length(this._control.get$children()), 0) === true;)
        $.removeLast(this._control.get$children());
  },
  _setControl$1: function(element) {
    this._control = element;
    this.dispatch$1($.FrameworkEvent_FrameworkEvent("controlChanged", element));
    $.$$gt(this.get$later(), this.get$_commitProperties());
  },
  _wrapDOMTarget$0: function() {
    var t1 = this._elementId;
    if (!(t1 == null)) {
      this._control = document.query$1(t1);
      $.$$gt(this.get$later(), this.get$_invalidateSize());
    }
  },
  _initialize$0: function() {
    if (!this._isInitialized) {
      this._isInitialized = true;
      this._createChildren$0();
    }
  },
  _createChildren$0: function() {
  },
  _commitProperties$0: function() {
    if (this._isLayoutUpdateRequired === true) {
      this._isLayoutUpdateRequired = false;
      this._updateLayout$0();
    }
  },
  get$_commitProperties: function() {
    return new $.BoundClosure3(this, "_commitProperties$0");
  },
  _updateLayout$0: function() {
    var t1, t2, i, element;
    t1 = this._graphics;
    if (!(t1 == null)) {
      t1.set$width(this._width);
      t1.set$height(this._height);
    }
    if ($.$$gt(this._width, 0) === true && $.$$gt(this._height, 0) === true) {
      t1 = this._layout;
      t2 = this._children;
      if (!(t1 == null))
        t1.doLayout$6(this._width, this._height, this._getPageItemSize$0(), this._getPageOffset$0(), this._getPageSize$0(), t2);
      else {
        i = t2.length;
        for (; i > 0;) {
          --i;
          if (i >= t2.length)
            throw $.ioore(i);
          element = t2[i];
          if (element.get$includeInLayout() === true) {
            t1 = this._control.get$style().get$width();
            element.get$_control().get$style().set$width(t1);
            t1 = this._control.get$style().get$height();
            element.get$_control().get$style().set$height(t1);
          } else
            element.get$_control().get$style().set$position("absolute");
          t1 = this._control.get$style().get$left();
          element.get$_control().get$style().set$left(t1);
          t1 = this._control.get$style().get$top();
          element.get$_control().get$style().set$top(t1);
          element.set$_width(this._width);
          element.set$_height(this._height);
          element.invalidateProperties$0();
        }
      }
    }
  },
  _getPageItemSize$0: function() {
    return 0;
  },
  _getPageOffset$0: function() {
    return 0;
  },
  _getPageSize$0: function() {
    return 0;
  },
  _invalidateSize$0: function() {
    var t1, t3;
    this.set$width(this._control.get$clientWidth());
    this.set$height(this._control.get$clientHeight());
    if (this._owner == null) {
      t1 = this.get$later();
      t3 = this.get$_invalidateSize();
      if (typeof t1 !== "number")
        return this._invalidateSize$0$bailout(1, t1);
      if (typeof t3 !== "number")
        return this._invalidateSize$0$bailout(2, t1, t3);
    }
  },
  _invalidateSize$0$bailout: function(state0, t1, t3) {
    switch (state0) {
      case 0:
        this.set$width(this._control.get$clientWidth());
        this.set$height(this._control.get$clientHeight());
      default:
        if (state0 === 2 || state0 === 1 || state0 === 0 && this._owner == null)
          switch (state0) {
            case 0:
              t1 = this.get$later();
            case 1:
              state0 = 0;
              t3 = this.get$_invalidateSize();
            case 2:
              state0 = 0;
              $.$$gt(t1, t3);
          }
    }
  },
  get$_invalidateSize: function() {
    return new $.BoundClosure3(this, "_invalidateSize$0");
  },
  _addAllPendingElements$0: function() {
    $.CONSTANT.forEach$1(this._addLaterElements, new $.UIWrapper__addAllPendingElements_anon(this));
    this._addLaterElements = $.List_List(0);
  },
  UIWrapper$1$elementId: function(elementId) {
    this._eventDispatcher = $.FrameworkEventDispatcher$(this);
    this._elementId = elementId;
    this._wrapDOMTarget$0();
  }
};

$$.VGroup = {"": "Group;_eventDispatcher,_isLayoutUpdateRequired,_graphics,_includeInLayout,_width,_percentWidth,_height,_percentHeight,_paddingLeft,_paddingRight,_paddingTop,_paddingBottom,_layout,_addLaterElements,_later,_isInitialized,_owner,_children,_elementId,_control",
  VGroup$1$elementId: function(elementId) {
    this._layout = $.VerticalLayout$();
  }
};

$$.HorizontalLayout = {"": "Object;_useVirtualLayout,_gap",
  doLayout$6: function(width, height, pageItemSize, pageOffset, pageSize, elements) {
    var len, percWidth, i, staticElmLen, element, t1, t2, t3, t4, offset, w, h, t5, t6, t7, t8;
    if (typeof width !== "number")
      return this.doLayout$6$bailout(1, width, height, elements);
    if (typeof height !== "number")
      return this.doLayout$6$bailout(1, width, height, elements);
    if (typeof elements !== "string" && (typeof elements !== "object" || elements === null || elements.constructor !== Array && !elements.$isJavaScriptIndexingBehavior()))
      return this.doLayout$6$bailout(1, width, height, elements);
    len = elements.length;
    for (percWidth = width, i = 0, staticElmLen = 0; i < len; ++i) {
      if (i >= elements.length)
        throw $.ioore(i);
      element = elements[i];
      if (element.get$includeInLayout() !== true)
        ++staticElmLen;
      else if ($.$$eq(element.get$percentWidth(), 0) === true && $.$$gt(element.get$width(), 0) === true) {
        t1 = element.get$width();
        if (typeof t1 !== "number")
          throw $.iae(t1);
        percWidth -= t1;
        ++staticElmLen;
      }
    }
    t1 = len - staticElmLen;
    t2 = percWidth - staticElmLen * this._gap;
    for (t3 = height * 0.5, t4 = t1 - 1, offset = 0, w = null, h = null, i = 0; i < len; ++i) {
      if (i >= elements.length)
        throw $.ioore(i);
      element = elements[i];
      if (element.get$includeInLayout() === true) {
        if ($.$$gt(element.get$percentWidth(), 0) === true)
          w = $.toInt($.$$div($.$$mul($.$$mul(element.get$percentWidth(), 0.01), t2 - this._gap * t4), t1));
        else if ($.$$gt(element.get$width(), 0) === true)
          w = element.get$width();
        if ($.$$gt(element.get$percentHeight(), 0) === true) {
          t5 = element.get$percentHeight();
          if (typeof t5 !== "number")
            throw $.iae(t5);
          h = $.CONSTANT5.toInt$0(height * t5 * 0.01);
        } else if ($.$$gt(element.get$height(), 0) === true)
          h = element.get$height();
        if (w == null)
          w = 0;
        if (h == null)
          h = 0;
        element.get$control().get$style().set$position("absolute");
        t5 = $.concat($.CONSTANT3.toString$0(offset), "px");
        element.get$control().get$style().set$left(t5);
        t5 = $.getInterceptor$JSNumber(h);
        t6 = t5.$mul(h, 0.5);
        if (typeof t6 !== "number")
          throw $.iae(t6);
        t7 = $.concat($.CONSTANT5.toString$0(t3 - t6), "px");
        element.get$control().get$style().set$top(t7);
        t7 = $.getInterceptor(w);
        t8 = $.concat(t7.toString$0(w), "px");
        element.get$control().get$style().set$width(t8);
        t8 = $.concat(t5.toString$0(h), "px");
        element.get$control().get$style().set$height(t8);
        element.set$width(w);
        element.set$height(h);
        t7 = t7.$add(w, this._gap);
        if (typeof t7 !== "number")
          throw $.iae(t7);
        offset += t7;
      }
      element.invalidateProperties$0();
    }
  },
  doLayout$6$bailout: function(state0, width, height, elements, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSStringJSArray(elements);
        len = t1.get$length(elements);
      case 2:
        var percWidth, i, staticElmLen, element, t2, t3, t4, t5, t6, offset, w, h, t7, t8, t9;
        state0 = 0;
        for (percWidth = width, i = 0, staticElmLen = 0; $.CONSTANT1.$lt(i, len); ++i) {
          element = t1.$index(elements, i);
          if (element.get$includeInLayout() !== true)
            ++staticElmLen;
          else if ($.$$eq(element.get$percentWidth(), 0) === true && $.$$gt(element.get$width(), 0) === true) {
            percWidth = $.$$sub(percWidth, element.get$width());
            ++staticElmLen;
          }
        }
        t2 = $.$$sub(len, staticElmLen);
        t3 = $.$$sub(percWidth, staticElmLen * this._gap);
        for (t4 = $.getInterceptor$JSNumber(height), t5 = $.getInterceptor$JSNumber(t2), t6 = $.getInterceptor$JSNumber(t3), offset = 0, w = null, h = null, i = 0; $.CONSTANT1.$lt(i, len); ++i) {
          element = t1.$index(elements, i);
          if (element.get$includeInLayout() === true) {
            if ($.$$gt(element.get$percentWidth(), 0) === true) {
              t7 = $.$$mul(element.get$percentWidth(), 0.01);
              t8 = this._gap;
              t9 = t5.$sub(t2, 1);
              if (typeof t9 !== "number")
                throw $.iae(t9);
              w = $.toInt($.$$div($.$$mul(t7, t6.$sub(t3, t8 * t9)), t2));
            } else if ($.$$gt(element.get$width(), 0) === true)
              w = element.get$width();
            if ($.$$gt(element.get$percentHeight(), 0) === true)
              h = $.toInt($.$$mul(t4.$mul(height, element.get$percentHeight()), 0.01));
            else if ($.$$gt(element.get$height(), 0) === true)
              h = element.get$height();
            if (w == null)
              w = 0;
            if (h == null)
              h = 0;
            element.get$control().get$style().set$position("absolute");
            t7 = $.concat($.CONSTANT3.toString$0(offset), "px");
            element.get$control().get$style().set$left(t7);
            t7 = $.getInterceptor$JSNumber(h);
            t8 = $.concat($.toString($.$$sub(t4.$mul(height, 0.5), t7.$mul(h, 0.5))), "px");
            element.get$control().get$style().set$top(t8);
            t8 = $.getInterceptor(w);
            t9 = $.concat(t8.toString$0(w), "px");
            element.get$control().get$style().set$width(t9);
            t9 = $.concat(t7.toString$0(h), "px");
            element.get$control().get$style().set$height(t9);
            element.set$width(w);
            element.set$height(h);
            t8 = t8.$add(w, this._gap);
            if (typeof t8 !== "number")
              throw $.iae(t8);
            offset += t8;
          }
          element.invalidateProperties$0();
        }
    }
  }
};

$$.VerticalLayout = {"": "Object;_useVirtualLayout,_gap",
  set$useVirtualLayout: function(value) {
    if ($.$$eq(value, this._useVirtualLayout) !== true)
      this._useVirtualLayout = value;
  },
  set$gap: function(value) {
    this._gap = value;
    return value;
  },
  doLayout$6: function(width, height, pageItemSize, pageOffset, pageSize, elements) {
    var pageHeightFloored, offset, len, percHeight, i, staticElmLen, element, t1, t2, t3, t4, t5, w, h, t6, t7, t8;
    if (typeof width !== "number")
      return this.doLayout$6$bailout0(1, width, height, pageItemSize, pageOffset, pageSize, elements);
    if (typeof height !== "number")
      return this.doLayout$6$bailout0(1, width, height, pageItemSize, pageOffset, pageSize, elements);
    if (typeof pageSize !== "number")
      return this.doLayout$6$bailout0(1, width, height, pageItemSize, pageOffset, pageSize, elements);
    if (typeof elements !== "string" && (typeof elements !== "object" || elements === null || elements.constructor !== Array && !elements.$isJavaScriptIndexingBehavior()))
      return this.doLayout$6$bailout0(1, width, height, pageItemSize, pageOffset, pageSize, elements);
    pageHeightFloored = $.$$eq(pageItemSize, 0) === true ? 0 : $.$$mul($.toInt($.$$div(pageOffset, pageItemSize)), pageItemSize);
    offset = this._useVirtualLayout === true ? pageHeightFloored : 0;
    if (typeof offset !== "number")
      return this.doLayout$6$bailout0(2, width, height, null, null, pageSize, elements, offset);
    len = elements.length;
    for (percHeight = height, i = 0, staticElmLen = 0; i < len; ++i) {
      if (i >= elements.length)
        throw $.ioore(i);
      element = elements[i];
      if (element.get$includeInLayout() !== true)
        ++staticElmLen;
      else if ($.$$eq(element.get$percentHeight(), 0) === true && $.$$gt(element.get$height(), 0) === true) {
        t1 = element.get$height();
        if (typeof t1 !== "number")
          throw $.iae(t1);
        percHeight -= t1;
        ++staticElmLen;
      }
    }
    t1 = len - staticElmLen;
    t2 = this._gap;
    if (typeof t2 !== "number")
      throw $.iae(t2);
    t3 = percHeight - staticElmLen * t2;
    for (t2 = !(pageSize === 0), t4 = width * 0.5, t5 = t1 - 1, w = null, h = null, i = 0; i < len; ++i) {
      if (i >= elements.length)
        throw $.ioore(i);
      element = elements[i];
      if (element.get$includeInLayout() === true) {
        if ($.$$gt(element.get$percentWidth(), 0) === true) {
          t6 = element.get$percentWidth();
          if (typeof t6 !== "number")
            throw $.iae(t6);
          w = $.CONSTANT5.toInt$0(width * t6 * 0.01);
        } else if ($.$$gt(element.get$width(), 0) === true)
          w = element.get$width();
        if ($.$$gt(element.get$percentHeight(), 0) === true) {
          t6 = $.$$mul(element.get$percentHeight(), 0.01);
          t7 = $.$$mul(this._gap, t5);
          if (typeof t7 !== "number")
            throw $.iae(t7);
          h = $.toInt($.$$div($.$$mul(t6, t3 - t7), t1));
        } else if ($.$$gt(element.get$height(), 0) === true)
          h = element.get$height();
        if (w == null)
          w = 0;
        if (h == null)
          h = 0;
        element.get$control().get$style().set$position("absolute");
        t6 = $.getInterceptor$JSNumber(w);
        t7 = t6.$mul(w, 0.5);
        if (typeof t7 !== "number")
          throw $.iae(t7);
        t8 = $.concat($.CONSTANT5.toString$0(t4 - t7), "px");
        element.get$control().get$style().set$left(t8);
        if (t2) {
          if (typeof h !== "number")
            throw $.iae(h);
          t7 = offset + h <= pageSize;
        } else
          t7 = true;
        t8 = $.getInterceptor(h);
        if (t7) {
          t7 = $.concat($.CONSTANT3.toString$0(offset), "px");
          element.get$control().get$style().set$top(t7);
          t7 = $.concat(t6.toString$0(w), "px");
          element.get$control().get$style().set$width(t7);
          t7 = $.concat(t8.toString$0(h), "px");
          element.get$control().get$style().set$height(t7);
        } else {
          element.get$control().get$style().set$top("0px");
          t7 = $.concat(t6.toString$0(w), "px");
          element.get$control().get$style().set$width(t7);
          t7 = $.concat(t8.toString$0(h), "px");
          element.get$control().get$style().set$height(t7);
        }
        element.set$width(w);
        element.set$height(h);
        t6 = $.$$add(h, this._gap);
        if (typeof t6 !== "number")
          throw $.iae(t6);
        offset += t6;
      } else {
        element.get$control().get$style().set$position("absolute");
        element.get$control().get$style().set$left("0px");
        element.get$control().get$style().set$top("0px");
        t6 = $.concat($.toString(element.get$width()), "px");
        element.get$control().get$style().set$width(t6);
        t6 = $.concat($.toString(element.get$height()), "px");
        element.get$control().get$style().set$height(t6);
      }
      element.invalidateProperties$0();
    }
  },
  doLayout$6$bailout0: function(state0, width, height, pageItemSize, pageOffset, pageSize, elements, offset, len, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        pageHeightFloored = $.$$eq(pageItemSize, 0) === true ? 0 : $.$$mul($.toInt($.$$div(pageOffset, pageItemSize)), pageItemSize);
        offset = this._useVirtualLayout === true ? pageHeightFloored : 0;
      case 2:
        state0 = 0;
        t2 = $.getInterceptor$JSStringJSArray(elements);
        len = t2.get$length(elements);
      case 3:
        var pageHeightFloored, percHeight, i, staticElmLen, element, t1, t3, t4, t5, t6, t7, w, h, t8, t9, t10;
        state0 = 0;
        for (percHeight = height, i = 0, staticElmLen = 0; $.CONSTANT1.$lt(i, len); ++i) {
          element = t2.$index(elements, i);
          if (element.get$includeInLayout() !== true)
            ++staticElmLen;
          else if ($.$$eq(element.get$percentHeight(), 0) === true && $.$$gt(element.get$height(), 0) === true) {
            percHeight = $.$$sub(percHeight, element.get$height());
            ++staticElmLen;
          }
        }
        t1 = $.$$sub(len, staticElmLen);
        t3 = this._gap;
        if (typeof t3 !== "number")
          throw $.iae(t3);
        t4 = $.$$sub(percHeight, staticElmLen * t3);
        for (t3 = $.getInterceptor(pageSize), t5 = $.getInterceptor$JSNumber(width), t6 = $.getInterceptor$JSNumber(t1), t7 = $.getInterceptor$JSNumber(t4), w = null, h = null, i = 0; $.CONSTANT1.$lt(i, len); ++i) {
          element = t2.$index(elements, i);
          if (element.get$includeInLayout() === true) {
            if ($.$$gt(element.get$percentWidth(), 0) === true)
              w = $.toInt($.$$mul(t5.$mul(width, element.get$percentWidth()), 0.01));
            else if ($.$$gt(element.get$width(), 0) === true)
              w = element.get$width();
            if ($.$$gt(element.get$percentHeight(), 0) === true)
              h = $.toInt($.$$div($.$$mul($.$$mul(element.get$percentHeight(), 0.01), t7.$sub(t4, $.$$mul(this._gap, t6.$sub(t1, 1)))), t1));
            else if ($.$$gt(element.get$height(), 0) === true)
              h = element.get$height();
            if (w == null)
              w = 0;
            if (h == null)
              h = 0;
            element.get$control().get$style().set$position("absolute");
            t8 = $.getInterceptor$JSNumber(w);
            t9 = $.concat($.toString($.$$sub(t5.$mul(width, 0.5), t8.$mul(w, 0.5))), "px");
            element.get$control().get$style().set$left(t9);
            t9 = t3.$eq(pageSize, 0) === true || $.$$le($.$$add(offset, h), pageSize) === true;
            t10 = $.getInterceptor(h);
            if (t9) {
              t9 = $.concat($.toString(offset), "px");
              element.get$control().get$style().set$top(t9);
              t9 = $.concat(t8.toString$0(w), "px");
              element.get$control().get$style().set$width(t9);
              t9 = $.concat(t10.toString$0(h), "px");
              element.get$control().get$style().set$height(t9);
            } else {
              element.get$control().get$style().set$top("0px");
              t9 = $.concat(t8.toString$0(w), "px");
              element.get$control().get$style().set$width(t9);
              t9 = $.concat(t10.toString$0(h), "px");
              element.get$control().get$style().set$height(t9);
            }
            element.set$width(w);
            element.set$height(h);
            offset = $.$$add(offset, $.$$add(h, this._gap));
          } else {
            element.get$control().get$style().set$position("absolute");
            element.get$control().get$style().set$left("0px");
            element.get$control().get$style().set$top("0px");
            t8 = $.concat($.toString(element.get$width()), "px");
            element.get$control().get$style().set$width(t8);
            t8 = $.concat($.toString(element.get$height()), "px");
            element.get$control().get$style().set$height(t8);
          }
          element.invalidateProperties$0();
        }
    }
  }
};

$$.DemoItemRenderer = {"": "ItemRenderer;_container,_label,_selection01,_selection02,_selectIndicator,_data,_liblib4$_state,_selected,_isSelectionInvalid,_fraction,_eventDispatcher,_isLayoutUpdateRequired,_graphics,_includeInLayout,_width,_percentWidth,_height,_percentHeight,_paddingLeft,_paddingRight,_paddingTop,_paddingBottom,_layout,_addLaterElements,_later,_isInitialized,_owner,_children,_elementId,_control",
  createDataProvider$4$dpLen$labelMain$modifier$suffix: function(dpLen, labelMain, modifier, suffix) {
    var dataProvider, i;
    if (typeof dpLen !== "number")
      return this.createDataProvider$4$dpLen$labelMain$modifier$suffix$bailout(1, dpLen, labelMain, modifier, suffix);
    dataProvider = $.ListCollection$(null);
    for (i = 0; i < dpLen; ++i) {
      if (typeof modifier !== "number")
        throw $.iae(modifier);
      dataProvider.$add($.S(labelMain) + " " + $.S(i * modifier) + " " + $.S(suffix));
    }
    return dataProvider;
  },
  createDataProvider$4$dpLen$labelMain$modifier$suffix$bailout: function(state0, dpLen, labelMain, modifier, suffix) {
    var dataProvider, i;
    dataProvider = $.ListCollection$(null);
    for (i = 0; $.CONSTANT1.$lt(i, dpLen); ++i) {
      if (typeof modifier !== "number")
        throw $.iae(modifier);
      dataProvider.$add($.S(labelMain) + " " + $.S(i * modifier) + " " + $.S(suffix));
    }
    return dataProvider;
  },
  createDataProvider$2$dpLen$labelMain: function(dpLen, labelMain) {
    return this.createDataProvider$4$dpLen$labelMain$modifier$suffix(dpLen, labelMain, 1, "");
  },
  createChildren$0: function() {
    var t1, t2;
    t1 = $.HGroup$(null);
    t1.set$percentWidth(100);
    t1.set$percentHeight(100);
    this._container = t1;
    t1 = $.RichText$(null);
    t1.set$width(120);
    t1.set$height(18);
    this._label = t1;
    t1 = this.createDataProvider$4$dpLen$labelMain$modifier$suffix(100, "cost", 10, "$");
    t2 = $.ComboBox$();
    t2.set$width(120);
    t2.set$height(22);
    t2.set$dataProvider(t1);
    this._selection01 = t2;
    t2 = this.createDataProvider$2$dpLen$labelMain(10, "rating");
    t1 = $.ComboBox$();
    t1.set$width(120);
    t1.set$height(22);
    t1.set$dataProvider(t2);
    this._selection02 = t1;
    if (!(this.get$data() == null)) {
      t1 = $.control_labelHandler(this.get$data());
      this._label.set$text(t1);
    }
    $.add(this._container, this._label);
    $.add(this._container, this._selection01);
    $.add(this._container, this._selection02);
    $.$$indexSet(this._selection01, "selectedIndexChanged", new $.DemoItemRenderer_createChildren_anon(this));
    $.$$indexSet(this._selection02, "selectedIndexChanged", new $.DemoItemRenderer_createChildren_anon0(this));
    this.add$1(this._container);
  },
  invalidateData$0: function() {
    var t1;
    if (!(this._label == null)) {
      t1 = $.control_labelHandler(this.get$data());
      this._label.set$text(t1);
    }
    if (!(this._selection01 == null)) {
      if (!(this.get$data() == null)) {
        t1 = this.get$data().get$rating01();
        if (typeof t1 !== "number")
          return this.invalidateData$0$bailout(1, t1);
      } else
        t1 = -1;
      this._selection01.set$selectedIndex(t1);
    }
    if (!(this._selection02 == null)) {
      if (!(this.get$data() == null)) {
        t1 = this.get$data().get$rating02();
        if (typeof t1 !== "number")
          return this.invalidateData$0$bailout(2, t1);
      } else
        t1 = -1;
      this._selection02.set$selectedIndex(t1);
    }
  },
  invalidateData$0$bailout: function(state0, t1) {
    switch (state0) {
      case 0:
        if (!(this._label == null)) {
          t1 = $.control_labelHandler(this.get$data());
          this._label.set$text(t1);
        }
      case 1:
        if (state0 === 1 || state0 === 0 && !(this._selection01 == null))
          switch (state0) {
            case 0:
            case 1:
              if (state0 === 1 || state0 === 0 && !(this.get$data() == null))
                switch (state0) {
                  case 0:
                    t1 = this.get$data().get$rating01();
                  case 1:
                    state0 = 0;
                }
              else
                t1 = -1;
              this._selection01.set$selectedIndex(t1);
          }
      case 2:
        if (state0 === 2 || state0 === 0 && !(this._selection02 == null))
          switch (state0) {
            case 0:
            case 2:
              if (state0 === 2 || state0 === 0 && !(this.get$data() == null))
                switch (state0) {
                  case 0:
                    t1 = this.get$data().get$rating02();
                  case 2:
                    state0 = 0;
                }
              else
                t1 = -1;
              this._selection02.set$selectedIndex(t1);
          }
    }
  },
  updateLayout$0: function() {
  }
};

$$.UIWrapper_add_anon = {"": "Closure;this_0",
  call$1: function(event) {
    return this.this_0._addAllPendingElements$0();
  }
};

$$.Maps__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true)
      $.add(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.Collections__emitObject(k, t1, t2);
    $.add(t1, ": ");
    $.Collections__emitObject(v, t1, t2);
  }
};

$$._LinkedHashMapImpl_forEach_anon = {"": "Closure;f_0",
  call$1: function(entry) {
    this.f_0.call$2(entry.get$key(), entry.get$value());
  }
};

$$.HashSet_forEach_anon = {"": "Closure;f_0",
  call$2: function(key, value) {
    this.f_0.call$1(key);
  }
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$$gt(t1.i_1, 0) === true)
      $.add(t1.sb_0, ", ");
    $.add(t1.sb_0, key);
    $.add(t1.sb_0, ": ");
    $.add(t1.sb_0, $.Error_safeToString(value));
    t1.i_1 = $.$$add(t1.i_1, 1);
  }
};

$$.UIWrapper__addAllPendingElements_anon = {"": "Closure;this_0",
  call$1: function(element) {
    return $.add(this.this_0, element);
  }
};

$$.Stream_toSet_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add(this.result_0, data);
  }
};

$$.Stream_toSet_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._setValue$1(this.result_1);
  }
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  }
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  }
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  }
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$1: function(_) {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError() === true) {
      t1._clearUnhandledError$0();
      error = t1.get$_resultOrListeners();
      $.print("Uncaught Error: " + $.S(error.get$error()));
      t1 = error.get$stackTrace();
      if (!(t1 == null))
        $.print("Stack Trace:\n" + $.S(t1) + "\n");
      throw $.$$throw(error.get$error());
    }
  }
};

$$.anon = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  }
};

$$.internalCallback = {"": "Closure;this_2,callback_3",
  call$0: function() {
    var t1, t2;
    t1 = this.callback_3;
    t2 = this.this_2;
    t1.call$1(t2);
    t2.set$_handle(null);
    t2 = $globalState.get$topEventLoop();
    t2.set$activeTimerCount($.$$sub(t2.get$activeTimerCount(), 1));
  }
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$$add(t1.count_0, 1);
  }
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.box_0.count_0);
  }
};

$$.Stream_contains_anon = {"": "Closure;box_0,match_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_contains__anon(this.match_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_contains__anon0(t2, t3, element), $._cancelAndError(t2.subscription_0, t3), null);
  }
};

$$.Stream_contains__anon = {"": "Closure;match_3,element_4",
  call$0: function() {
    return this.match_3.call$1(this.element_4);
  }
};

$$.Stream_contains__anon0 = {"": "Closure;box_0,future_5,element_6",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._setValue$1(this.element_6);
    }
  }
};

$$.Stream_contains_anon0 = {"": "Closure;future_7",
  call$0: function() {
    this.future_7._setValue$1(false);
  }
};

$$._cancelAndError_anon = {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    this.subscription_0.cancel$0();
    this.future_1._setError$1(error);
  }
};

$$.UIWrapper_remove_anon = {"": "Closure;element_0",
  call$1: function(child) {
    return $.$$eq(child, this.element_0);
  }
};

$$.UIWrapper_remove_anon0 = {"": "Closure;element_1",
  call$1: function(child) {
    return $.$$eq(child, this.element_1);
  }
};

$$.Stream_last_anon = {"": "Closure;box_0",
  call$1: function(value) {
    var t1 = this.box_0;
    t1.foundResult_1 = true;
    t1.result_0 = value;
  }
};

$$.Stream_last_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    var t1 = this.box_0;
    if (t1.foundResult_1 === true) {
      this.future_1._setValue$1(t1.result_0);
      return;
    }
    this.future_1._setError$1($.AsyncError$($.StateError$("No elements"), null));
  }
};

$$.FilteredElementList__filtered_anon = {"": "Closure;",
  call$1: function(n) {
    return typeof n === "object" && n !== null && n.$isElement();
  }
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$1: function(_) {
    this.errorFuture_1._sendError$1(this.error_0);
  }
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$1: function(_) {
    this.thenFuture_0._sendValue$1(this.value_1);
  }
};

$$.AsyncError_throwDelayed_reportError = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.print("Uncaught Error: " + $.S(t1.get$error()));
    t1 = t1.get$stackTrace();
    if (!(t1 == null))
      $.print("Stack Trace:\n" + $.S(t1) + "\n");
  }
};

$$.AsyncError_throwDelayed_anon = {"": "Closure;this_1,reportError_2",
  call$1: function(_) {
    this.reportError_2.call$0();
    throw $.$$throw(this.this_1.get$error());
  }
};

$$.FilteredElementList_removeRange_anon = {"": "Closure;",
  call$1: function(el) {
    return el.remove$0();
  }
};

$$.DemoItemRenderer_createChildren_anon = {"": "Closure;this_0",
  call$1: function(event) {
    var t1, t2;
    t1 = this.this_0;
    if (!(t1.get$data() == null)) {
      t2 = event.get$relatedObject();
      t1.get$data().set$rating01(t2);
    }
  }
};

$$.DemoItemRenderer_createChildren_anon0 = {"": "Closure;this_1",
  call$1: function(event) {
    var t1, t2;
    t1 = this.this_1;
    if (!(t1.get$data() == null)) {
      t2 = event.get$relatedObject();
      t1.get$data().set$rating02(t2);
    }
  }
};

$$.convertNativeToDart_AcceptStructuredClone_findSlot = {"": "Closure;values_0,copies_1",
  call$1: function(value) {
    var t1, length, i, t2;
    t1 = this.values_0;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.call$1$bailout0(1, value, t1);
    length = t1.length;
    for (i = 0; i < length; ++i) {
      t2 = t1[i];
      if (t2 == null ? value == null : t2 === value)
        return i;
    }
    $.add(t1, value);
    $.add(this.copies_1, null);
    return length;
  },
  call$1$bailout0: function(state0, value, t1, t3, length) {
    switch (state0) {
      case 0:
        t1 = this.values_0;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        length = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        for (i = 0; $.CONSTANT1.$lt(i, length); ++i) {
          t2 = t3.$index(t1, i);
          if (t2 == null ? value == null : t2 === value)
            return i;
        }
        $.add(t1, value);
        $.add(this.copies_1, null);
        return length;
    }
  }
};

$$.convertNativeToDart_AcceptStructuredClone_readSlot = {"": "Closure;copies_2",
  call$1: function(i) {
    return $.$$index(this.copies_2, i);
  }
};

$$.convertNativeToDart_AcceptStructuredClone_writeSlot = {"": "Closure;copies_3",
  call$2: function(i, x) {
    $.$$indexSet(this.copies_3, i, x);
  }
};

$$.convertNativeToDart_AcceptStructuredClone_walk = {"": "Closure;mustCopy_4,findSlot_5,readSlot_6,writeSlot_7",
  call$1: function(e) {
    var slot, copy, t1, t2, t3, length, i;
    if (typeof e !== "object" || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.$isJavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    if (e instanceof Date)
      throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
    if (e instanceof RegExp)
      throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
    if (Object.getPrototypeOf(e) === Object.prototype) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (!(copy == null))
        return copy;
      copy = $.makeLiteralMap([]);
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.$isJavaScriptIndexingBehavior())
        return this.call$1$bailout(2, e, copy, slot);
      this.writeSlot_7.call$2(slot, copy);
      for (t1 = $.CONSTANT.get$iterator(Object.keys(e)); t1.moveNext$0() === true;) {
        t2 = t1.get$current();
        t3 = this.call$1(e[t2]);
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= copy.length)
          throw $.ioore(t2);
        copy[t2] = t3;
      }
      return copy;
    }
    if (e instanceof Array) {
      slot = this.findSlot_5.call$1(e);
      copy = this.readSlot_6.call$1(slot);
      if (!(copy == null))
        return copy;
      length = e.length;
      if (this.mustCopy_4 === true)
        copy = new Array(length);
      else
        copy = e;
      if (typeof copy !== "object" || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.$isJavaScriptIndexingBehavior())
        return this.call$1$bailout(4, e, copy, slot, length, $.CONSTANT);
      this.writeSlot_7.call$2(slot, copy);
      for (i = 0; i < length; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        t1 = this.call$1(e[i]);
        if (i >= copy.length)
          throw $.ioore(i);
        copy[i] = t1;
      }
      return copy;
    }
    return e;
  },
  call$1$bailout: function(state0, e, copy, slot, length, t1) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor(e);
        if (e == null)
          return e;
        if (typeof e === "boolean")
          return e;
        if (typeof e === "number")
          return e;
        if (typeof e === "string")
          return e;
        if (e instanceof Date)
          throw $.$$throw($.UnimplementedError$("structured clone of DateTime"));
        if (e instanceof RegExp)
          throw $.$$throw($.UnimplementedError$("structured clone of RegExp"));
      case 2:
        if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (!(copy == null))
                return copy;
              copy = $.makeLiteralMap([]);
            case 2:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (t1 = $.CONSTANT.get$iterator(Object.keys(e)), t2 = $.getInterceptor$JSArray(copy); t1.moveNext$0() === true;) {
                t3 = t1.get$current();
                t2.$indexSet(copy, t3, this.call$1(e[t3]));
              }
              return copy;
          }
      default:
        var t2, t3, i;
        if (state0 === 4 || state0 === 3 || state0 === 0 && e instanceof Array)
          switch (state0) {
            case 0:
              slot = this.findSlot_5.call$1(e);
              copy = this.readSlot_6.call$1(slot);
              if (!(copy == null))
                return copy;
              length = t1.get$length(e);
            case 3:
              state0 = 0;
              copy = this.mustCopy_4 === true ? new Array(length) : e;
            case 4:
              state0 = 0;
              this.writeSlot_7.call$2(slot, copy);
              for (t2 = $.getInterceptor$JSArray(copy), i = 0; $.CONSTANT1.$lt(i, length); ++i)
                t2.$indexSet(copy, i, this.call$1(t1.$index(e, i)));
              return copy;
          }
        return e;
    }
  }
};

$$.SelectElement_selectedOptions_anon = {"": "Closure;",
  call$1: function(o) {
    return o.get$selected();
  }
};

$$.Stream_toList_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add(this.result_0, data);
  }
};

$$.Stream_toList_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._setValue$1(this.result_1);
  }
};

$$.SelectElement_options_anon = {"": "Closure;",
  call$1: function(e) {
    return typeof e === "object" && e !== null && e.$isOptionElement();
  }
};

$$.initContainer01_anon = {"": "Closure;box_0",
  call$1: function(event) {
    var t1, item;
    t1 = this.box_0;
    item = $.createListItem($.length(t1.get$dataProvider()), "I'm a new option! ");
    $.$$add(t1.get$dataProvider(), item);
  }
};

$$.Button__createChildren_anon = {"": "Closure;this_0",
  call$1: function(event) {
    return this.this_0.dispatch$1($.FrameworkEvent_FrameworkEvent("click", null));
  }
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  }
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1;
    this.port_1.close$0();
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!value.$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(value);
  }
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.get$isWorker() === true)
      $globalState.get$mainManager().postMessage$1(workerMessage);
    else {
      t2 = $.$$index($globalState.get$managers(), t1.get$_workerId());
      if (!(t2 == null))
        t2.postMessage$1(workerMessage);
    }
  }
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  }
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,completer_1,values_2,pos_3",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.values_2;
    $.$$indexSet(t1, this.pos_3, value);
    t2 = this.box_0;
    t3 = $.$$sub(t2.remaining_0, 1);
    t2.remaining_0 = t3;
    if ($.$$eq(t3, 0) === true)
      this.completer_1.complete$1(t1);
  }
};

$$._FutureImpl__FutureImpl$wait_anon0 = {"": "Closure;box_0,completer_4",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.completed_1 !== true)
      this.completer_4.completeError$2(error.get$error(), error.get$stackTrace());
    t1.completed_1 = true;
  }
};

$$.Stream_isEmpty_anon = {"": "Closure;box_0,future_1",
  call$1: function(_) {
    this.box_0.subscription_0.cancel$0();
    this.future_1._setValue$1(false);
  }
};

$$.Stream_isEmpty_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setValue$1(true);
  }
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$.Storage_values_anon = {"": "Closure;values_0",
  call$2: function(k, v) {
    return $.add(this.values_0, v);
  }
};

$$._LinkedHashMapImpl_values_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$value();
  }
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  }
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $.$$index($globalState.get$isolates(), t2.get$_isolateId());
    if (t4 == null)
      return;
    if (t2.get$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = !($globalState.get$currentContext() == null) && $.$$eq($globalState.get$currentContext().get$id(), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.get$topEventLoop().enqueue$3(t4, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  }
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (!(t1.get$_receivePort().get$_callback() == null)) {
      if (this.shouldSerialize_5 === true) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_receivePort();
      t2 = this.box_0;
      t1._callback$2(t2.msg_0, t2.reply_1);
    }
  }
};

$$.Storage_keys_anon = {"": "Closure;keys_0",
  call$2: function(k, v) {
    return $.add(this.keys_0, k);
  }
};

$$._LinkedHashMapImpl_keys_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$key();
  }
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$$indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  }
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (this.this_0.runIteration$0() !== true)
      return;
    $.Timer_Timer(0, new $._EventLoop__runHelper_next_anon(this));
  }
};

$$._EventLoop__runHelper_next_anon = {"": "Closure;next_1",
  call$1: function(_) {
    return this.next_1.call$0();
  }
};

$$.BoundClosure = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$$.BoundClosure0 = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  }
};
$$.BoundClosure1 = {"": "Closure;self,target,receiver",
  call$2: function(p0, p1) {
    return this.self[this.target](this.receiver, p0, p1);
  },
  call$1: function($receiver, other) {
    return this.call$2($receiver, other, 0);
  }
};
$$.BoundClosure2 = {"": "Closure;self,target",
  call$2: function(p0, p1) {
    return this.self[this.target](p0, p1);
  }
};
$$.BoundClosure3 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};
$.main = function() {
  $.initContainer01();
  $.initContainer02();
};

$.initContainer01 = function() {
  var divContainer, t1, box, button;
  divContainer = $.VGroup$("#container01");
  divContainer.set$percentWidth(100);
  divContainer.set$percentHeight(100);
  t1 = $.createDataProvider(10, "Option:");
  box = $.ComboBox$();
  box.set$labelFunction($.control_labelHandler0);
  box.set$width(120);
  box.set$height(22);
  box.set$dataProvider(t1);
  button = $.Button$(null);
  button.set$width(100);
  button.set$height(22);
  button.set$label("add item");
  button.$indexSet("click", new $.initContainer01_anon(box));
  divContainer.add$1(button);
  divContainer.add$1(box);
};

$.initContainer02 = function() {
  var t1, t2, t3, container01;
  t1 = $.createDataProvider(1000, "Employee nr.");
  t2 = $.ClassFactory$(null, $.DemoItemRenderer_construct, null);
  t3 = $.ListRenderer$();
  t3.set$itemRendererFactory(t2);
  t3.set$width(400);
  t3.set$percentHeight(100);
  t3.set$colPercentWidth(100);
  t3.set$rowHeight(30);
  t3.set$dataProvider(t1);
  $._listRenderer = t3;
  t3 = $.RichText$(null);
  t3.set$percentWidth(100);
  t3.set$percentHeight(100);
  $._innerHtmlDisplay = t3;
  container01 = $.HGroup$("#container02");
  container01.set$percentWidth(100);
  container01.set$percentHeight(100);
  container01.add$1($._listRenderer);
  container01.add$1($._innerHtmlDisplay);
};

$.createListItem = function(index, label) {
  return $.ListItem$($.S(label) + " " + $.S(index));
};

$.createDataProvider = function(dpLen, labelMain) {
  var dataProvider, i;
  if (typeof dpLen !== "number")
    return $.createDataProvider$bailout(1, dpLen, labelMain);
  dataProvider = $.ListCollection$(null);
  for (i = 0; i < dpLen; ++i)
    dataProvider.$add($.createListItem(i, labelMain));
  return dataProvider;
};

$.createDataProvider$bailout = function(state0, dpLen, labelMain) {
  var dataProvider, i;
  dataProvider = $.ListCollection$(null);
  for (i = 0; $.CONSTANT1.$lt(i, dpLen); ++i)
    dataProvider.$add($.createListItem(i, labelMain));
  return dataProvider;
};

$.control_labelHandler0 = function(item) {
  return item.get$label();
};

$.ListItem$ = function(label) {
  var t1 = new $.ListItem(null, null, null);
  t1.ListItem$1(label);
  return t1;
};

$._callInIsolate = function(isolate, $function) {
  isolate.eval$1($function);
  $globalState.get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $globalState.get$currentContext();
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.set$rootContext(rootContext);
  $globalState.set$currentContext(rootContext);
  rootContext.eval$1(entry);
  $globalState.get$topEventLoop().run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue(), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var scripts, len, i, script, src, t1;
  scripts = document.getElementsByTagName('script');
  for (len = scripts.length, i = 0; i < len; ++i) {
    script = scripts[i];
    src = script && script.src;
    t1 = $.getInterceptor(src);
    if (!(src == null) && t1.endsWith$1(src, "test_controller.js") !== true && t1.endsWith$1(src, "dart.js") !== true)
      return src;
  }
  return;
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$JSStringJSArray(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      t2 = t1.$index(msg, "id");
      $globalState.set$currentManagerId(t2);
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.get$topEventLoop().enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.set$currentContext(context);
      $globalState.get$topEventLoop().run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (!(t1.$index(msg, "port") == null))
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.get$topEventLoop().run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      $.remove($globalState.get$managers(), sender.get$id());
      sender.terminate$0();
      $globalState.get$topEventLoop().run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.get$isWorker() === true)
        $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      else
        $.print(t1.$index(msg, "msg"));
      break;
    case "error":
      throw $.$$throw(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, exception;
  if ($globalState.get$isWorker() === true)
    $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($.Exception_Exception(trace));
    }

};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePort_ReceivePort();
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  replyTo.send$2("spawned", $.lazyPort.toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.set$onmessage(function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $globalState;
  workerId = t1.get$nextManagerId();
  t1.set$nextManagerId($.$$add(workerId, 1));
  worker.set$id(workerId);
  $.$$indexSet($globalState.get$managers(), workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$$add(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return !($.get$globalThis().setTimeout == null);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var t1;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && !(value === 0) || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  t1 = $.toString(value);
  if (!(typeof t1 === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return t1;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$$add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives_objectTypeName = function(object) {
  var name, decompiled, t1;
  name = $.constructorNameFallback(object);
  if ($.$$eq(name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      name = decompiled;
  }
  t1 = $.getInterceptor$JSString(name);
  return t1.charCodeAt$1(name, 0) === 36 ? t1.substring$1(name, 1) : name;
};

$.Primitives_newFixedList = function(length) {
  var result = new Array(length);
  result.fixed$length = true;
  return result;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT0;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString(this);
};

$.unwrapException = function(ex) {
  var message, type, name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, name, [], $.makeLiteralMap([]), null);
    else if ($.$$eq(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if ($.CONSTANT2.endsWith$1(message, "is null") === true || $.CONSTANT2.endsWith$1(message, "is undefined") === true || $.CONSTANT2.endsWith$1(message, "is null or undefined") === true || $.CONSTANT2.endsWith$1(message, "of undefined") === true || $.CONSTANT2.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(t1 ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, t1, key;
  iterator = $.CONSTANT.get$iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (t1 = $.getInterceptor$JSArray(result); iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    t1.$indexSet(result, key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $._currentIsolate();
  $function = function($0, $1) { return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, $0, $1); };
  closure.$identity = $function;
  return $function;
};

$.propertyTypeCastError = function(value, property) {
  var t1 = $.getInterceptor$JSStringJSArray(property);
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.callTypeCast = function(value, property) {
  var t1;
  if (!(value == null))
    t1 = typeof value === "object" && value[property]();
  else
    t1 = true;
  if (t1)
    return value;
  $.propertyTypeCastError(value, property);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name = tag;
  if (name === "Window")
    return "DOMWindow";
  if (name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name === "WebKitMutationObserver")
    return "MutationObserver";
  if (name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name === "AudioGainNode")
    return "GainNode";
  if (name === "AudioPannerNode")
    return "PannerNode";
  if (name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name === "Oscillator")
    return "OscillatorNode";
  if (name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name;
};

$.typeNameInOpera = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "ApplicationCache")
    return "DOMApplicationCache";
  return name;
};

$.typeNameInFirefox = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name === "DataTransfer")
    return "Clipboard";
  if (name === "DragEvent")
    return "MouseEvent";
  if (name === "GeoGeolocation")
    return "Geolocation";
  if (name === "MouseScrollEvent")
    return "WheelEvent";
  if (name === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name === "WorkerMessageEvent")
    return "MessageEvent";
  if (name === "XMLDocument")
    return "Document";
  return name;
};

$.typeNameInIE = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name === "ApplicationCache")
    return "DOMApplicationCache";
  if (name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name === "DataTransfer")
    return "Clipboard";
  if (name === "DragEvent")
    return "MouseEvent";
  if (name === "HTMLDDElement")
    return "HTMLElement";
  if (name === "HTMLDTElement")
    return "HTMLElement";
  if (name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name === "HTMLPhraseElement")
    return "HTMLElement";
  if (name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name === "MouseWheelEvent")
    return "WheelEvent";
  if (name === "Position")
    return "Geoposition";
  if (name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return name;
};

$.constructorNameFallback = function(object) {
  var $constructor, name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    name = $constructor.name;
    if (typeof name === "string")
      t1 = !(name === "") && !(name === "Object") && !(name === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name, methods, arguments) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT14));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name + " is not a function");} else {return Object.prototype[name].apply(this, arguments);}};
  if ($.callHasOwnProperty(hasOwnPropertyFunction, proto, name) !== true)
    $.defineProperty(proto, name, method);
  return method.apply(obj, arguments);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT14)[name];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern, sb, e, isMultiLine, isCaseSensitive, t1, exception;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (isMultiLine === true)
    $.add(sb, "m");
  if (isCaseSensitive !== true)
    $.add(sb, "i");
  if (global === true)
    $.add(sb, "g");
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length, patternLength, startIndex, position, t2, endIndex;
  result = $.List_List(0);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    t2 = $.getInterceptor(position);
    if (t2.$eq(position, -1) === true)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = t2.$add(position, patternLength);
    if ($.$$eq(endIndex, length) === true)
      break;
    else
      startIndex = t2.$eq(position, endIndex) === true ? $.$$add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.$$eq($.CONSTANT2.indexOf$2(receiver, other, startIndex), -1) !== true;
  else if (typeof other === "object" && other !== null && !!other.$isJSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT2.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.CONSTANT2.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length, t1, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), true, false), true), to);
};

$.JsStringBuffer$ = function(content) {
  var t1 = typeof content === "string" ? content : $.S(content);
  return new $.JsStringBuffer(t1);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl$immediate(value);
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListener__FutureListener$wrap = function(future) {
  return $._FutureListenerWrapper$(future);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, completer, values, i, i0;
  t1 = {};
  t2 = $.getInterceptor$JSStringJSArray(futures);
  if (t2.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CONSTANT15);
  completer = $.Completer_Completer();
  t1.remaining_0 = t2.get$length(futures);
  values = $.List_List$fixedLength(t2.get$length(futures), null);
  t1.completed_1 = false;
  for (t2 = t2.get$iterator(futures), i = 0; t2.moveNext$0() === true; i = i0) {
    i0 = i + 1;
    t2.get$current().then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, completer, values, i)).catchError$1(new $._FutureImpl__FutureImpl$wait_anon0(t1, completer));
  }
  return completer.get$future();
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$._nullDataHandler = function(value) {
};

$._nullErrorHandler = function(error) {
  error.throwDelayed$0();
};

$._nullDoneHandler = function() {
};

$._asyncError = function(error, stackTrace, cause) {
  if (typeof error === "object" && error !== null && !!error.$isAsyncError)
    return error;
  if (cause == null)
    return $.AsyncError$(error, stackTrace);
  return $.AsyncError$withCause(error, stackTrace, cause);
};

$._runUserCode = function(userCode, onSuccess, onError, cause) {
  var result, e, e0, s, exception, t1;
  result = null;
  try {
    result = userCode.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
      e = t1;
      return onError.call$1(e);
    } else {
      e0 = t1;
      s = $.getTraceFromException(exception);
      if (cause == null)
        onError.call$1($.AsyncError$(e0, s));
      else
        onError.call$1($.AsyncError$withCause(e0, s, cause));
    }
  }

  onSuccess.call$1(result);
};

$._cancelAndError = function(subscription, future) {
  return new $._cancelAndError_anon(subscription, future);
};

$._ForwardingStreamSubscription$ = function(_stream, _onData, _onError, _onDone, unsubscribeOnError) {
  var t1 = new $._ForwardingStreamSubscription(_stream, _onData, _onError, _onDone, null);
  t1._ForwardingStreamSubscription$5(_stream, _onData, _onError, _onDone, unsubscribeOnError);
  return t1;
};

$.WhereStream$ = function(source, test) {
  return new $.WhereStream(test, source);
};

$.TakeStream$ = function(source, count) {
  var t1 = new $.TakeStream(count, source);
  t1.TakeStream$2(source, count);
  return t1;
};

$.Timer_Timer = function(milliseconds, callback) {
  return $.TimerImpl$(milliseconds, callback);
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.IterableMixinWorkaround_contains = function(iterable, element) {
  var t1, t2;
  for (t1 = $.iterator(iterable), t2 = $.getInterceptor(element); t1.moveNext$0() === true;)
    if (t2.$eq(element, t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_removeAll = function(collection, elementsToRemove) {
  var t1, t2;
  for (t1 = $.iterator(elementsToRemove), t2 = $.getInterceptor$JSArray(collection); t1.moveNext$0() === true;)
    t2.remove$1(collection, t1.get$current());
};

$.IterableMixinWorkaround_removeAllList = function(collection, elementsToRemove) {
  $.removeMatching(collection, $.contains(typeof elementsToRemove === "object" && elementsToRemove !== null && !!elementsToRemove.$isSet ? elementsToRemove : $.toSet(elementsToRemove)));
};

$.IterableMixinWorkaround_removeMatching = function(collection, test) {
  var elementsToRemove, t1, t2, t3;
  elementsToRemove = [];
  for (t1 = $.getInterceptor$JSArray(collection), t2 = t1.get$iterator(collection); t2.moveNext$0() === true;) {
    t3 = t2.get$current();
    if (test.call$1(t3) === true)
      elementsToRemove.push(t3);
  }
  t1.removeAll$1(collection, elementsToRemove);
};

$.IterableMixinWorkaround_removeMatchingList = function(list, test) {
  var retained, length, i, element, t1, t2, t3;
  if (typeof list !== "object" || list === null || (list.constructor !== Array || !!list.immutable$list) && !list.$isJavaScriptIndexingBehavior())
    return $.IterableMixinWorkaround_removeMatchingList$bailout(1, list, test);
  retained = [];
  length = list.length;
  for (i = 0; i < length; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    element = list[i];
    if (test.call$1(element) !== true)
      retained.push(element);
    if (length !== list.length)
      throw $.$$throw($.ConcurrentModificationError$(list));
  }
  t1 = retained.length;
  if (t1 === length)
    return;
  for (t2 = list.length, i = 0; i < t1; ++i) {
    t3 = retained[i];
    if (i >= t2)
      throw $.ioore(i);
    list[i] = t3;
  }
  $.CONSTANT.set$length(list, t1);
};

$.IterableMixinWorkaround_removeMatchingList$bailout = function(state0, list, test) {
  var retained, length, i, element, t1;
  retained = [];
  length = list.length;
  for (i = 0; i < length; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    element = list[i];
    if (test.call$1(element) !== true)
      retained.push(element);
    if (length !== list.length)
      throw $.$$throw($.ConcurrentModificationError$(list));
  }
  if (retained.length === length)
    return;
  for (i = 0; t1 = retained.length, i < t1; ++i)
    $.CONSTANT.$indexSet(list, i, retained[i]);
  $.CONSTANT.set$length(list, t1);
};

$.IterableMixinWorkaround_takeList = function(list, n) {
  return $.ListView$(list, 0, n);
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(0));
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, t2);
  for (t2 = $.iterator(c), first = true; t2.moveNext$0() === true; first = false) {
    t4 = t2.get$current();
    if (!first)
      t3.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t3.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.Collections__containsRef(visiting, o) === true)
      $.add(result, typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.$isMap())
    if ($.Collections__containsRef(visiting, o) === true)
      $.add(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.CONSTANT1.$tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length) {
  return $.$$and($.$$add(currentProbe, numberOfProbes), $.$$sub(length, 1));
};

$._HashMapImplKeyIterable$ = function(_map) {
  return new $._HashMapImplKeyIterable(_map);
};

$._HashMapImplValueIterable$ = function(_map) {
  return new $._HashMapImplValueIterable(_map);
};

$._HashMapImplKeyIterator$ = function(map) {
  return new $._HashMapImplKeyIterator(map, -1, null);
};

$._HashMapImplValueIterator$ = function(map) {
  return new $._HashMapImplValueIterator(map, -1, null);
};

$._HashMapImplIndexIterator$ = function(map) {
  return new $._HashMapImplIndexIterator(map, -1, null);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(0));
  return $.toString(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.forEach(m, new $.Maps__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(sentinel) {
  return new $._DoubleLinkedQueueIterator(sentinel, sentinel, null);
};

$.HashSet$ = function() {
  return new $.HashSet($._HashMapImpl$());
};

$.HashSet_HashSet$from = function(other) {
  var set, t1;
  set = $.HashSet$();
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    set.add$1(t1.get$current());
  return set;
};

$._HashSetIterator$ = function(set) {
  return new $._HashSetIterator($.CONSTANT.get$iterator(set._backingMap._keys));
};

$.MappedIterable$ = function(_iterable, _f) {
  return new $.MappedIterable(_iterable, _f);
};

$.MappedIterator$ = function(_iterator, _f) {
  return new $.MappedIterator(null, _iterator, _f);
};

$.WhereIterable$ = function(_iterable, _f) {
  return new $.WhereIterable(_iterable, _f);
};

$.WhereIterator$ = function(_iterator, _f) {
  return new $.WhereIterator(_iterator, _f);
};

$.TakeIterable$ = function(_iterable, _takeCount) {
  var t1 = new $.TakeIterable(_iterable, _takeCount);
  t1.TakeIterable$2(_iterable, _takeCount);
  return t1;
};

$.TakeIterator$ = function(_iterator, _remaining) {
  var t1 = new $.TakeIterator(_iterator, _remaining);
  t1.TakeIterator$2(_iterator, _remaining);
  return t1;
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(list, $.length(list), -1, null);
};

$.EmptyList$ = function() {
  return new $.EmptyList();
};

$.ListView$ = function(list, start, end) {
  return new $.ListView(list, start, end);
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString(object);
  if (typeof object === "string")
    return "\"" + $.S($.replaceAll($.replaceAll($.replaceAll($.CONSTANT2.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"")) + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.RangeError$range = function(value, start, end) {
  return new $.RangeError("value " + $.S(value) + " not in range " + $.S(start) + ".." + $.S(end));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.List_List = function(length) {
  if (!(typeof length === "number" && Math.floor(length) === length) || length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length) + "."));
  return new Array(length);
};

$.List_List$fixedLength = function(length, fill) {
  var result, t1, i;
  if (!(typeof length === "number" && Math.floor(length) === length) || length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length) + "."));
  result = $.Primitives_newFixedList(length);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.$isJavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, length, fill, result);
  if ($.$$eq(length, 0) !== true && !(fill == null))
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, length, fill, result) {
  var t1, i;
  if ($.$$eq(length, 0) !== true && !(fill == null))
    for (t1 = $.getInterceptor$JSStringJSArray(result), i = 0; $.CONSTANT1.$lt(i, t1.get$length(result)); ++i)
      t1.$indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.Map_Map = function() {
  return $.HashMap_HashMap();
};

$.Object$ = function() {
  return new $.Object();
};

$.print = function(object) {
  if (typeof object === "string")
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.toString(object));
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.Set_Set = function() {
  return $.HashSet$();
};

$.Set_Set$from = function(other) {
  return $.HashSet_HashSet$from(other);
};

$.StringBuffer_StringBuffer = function(content) {
  return $.JsStringBuffer$(content);
};

$.ButtonElement_ButtonElement = function() {
  return document.$$dom_createElement$1("button");
};

$.CanvasElement_CanvasElement = function(height, width) {
  var e = document.$$dom_createElement$1("canvas");
  if (!(width == null))
    e.set$width(width);
  if (!(height == null))
    e.set$height(height);
  return e;
};

$.DivElement_DivElement = function() {
  return document.$$dom_createElement$1("div");
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, -1, null);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.OptionElement_OptionElement = function(data, value, defaultSelected, selected) {
  var t1, t2, t3, t4;
  t1 = $ === data;
  if (t1)
    data = null;
  t2 = $ === value;
  if (t2)
    value = null;
  t3 = $ === defaultSelected;
  if (t3)
    defaultSelected = null;
  t4 = $ === selected;
  if (t4)
    selected = null;
  if (t1)
    return $.OptionElement__create($, $, $, $);
  if (t2)
    return $.OptionElement__create(data, $, $, $);
  if (t3)
    return $.OptionElement__create(data, value, $, $);
  if (t4)
    return $.OptionElement__create(data, value, defaultSelected, $);
  return $.OptionElement__create(data, value, defaultSelected, selected);
};

$.OptionElement__create = function(data, value, defaultSelected, selected) {
  var t1, t2, t3, t4;
  t1 = $ === data;
  if (t1)
    data = null;
  t2 = $ === value;
  if (t2)
    value = null;
  t3 = $ === defaultSelected;
  if (t3)
    defaultSelected = null;
  t4 = $ === selected;
  if (t4)
    selected = null;
  if (t1)
    return new Option();
  if (t2)
    return new Option(data);
  if (t3)
    return new Option(data,value);
  if (t4)
    return new Option(data,value,defaultSelected);
  return new Option(data,value,defaultSelected,selected);
};

$.SelectElement_SelectElement = function() {
  return document.$$dom_createElement$1("select");
};

$.SpanElement_SpanElement = function() {
  return document.$$dom_createElement$1("span");
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = window;
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.length(array), -1, null);
};

$.convertNativeToDart_SerializedScriptValue = function(object) {
  return $.convertNativeToDart_AcceptStructuredClone(object, true);
};

$.convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var copies = [];
  return new $.convertNativeToDart_AcceptStructuredClone_walk(mustCopy, new $.convertNativeToDart_AcceptStructuredClone_findSlot([], copies), new $.convertNativeToDart_AcceptStructuredClone_readSlot(copies), new $.convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, t2, i;
  t1 = $.getInterceptor$JSStringJSArray(a);
  t2 = $.getInterceptor$JSNumber(startIndex);
  if (t2.$ge(startIndex, t1.get$length(a)) === true)
    return -1;
  if (t2.$lt(startIndex, 0) === true)
    startIndex = 0;
  for (i = startIndex; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, endIndex) === true; i = t2.$add(i, 1))
    if ($.$$eq(t1.$index(a, i), element) === true)
      return i;
  return -1;
};

$.Lists_getRange = function(a, start, length, accumulator) {
  var end, i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length, accumulator);
  if (typeof start !== "number")
    return $.Lists_getRange$bailout(1, a, start, length, accumulator);
  if ($.$$lt(length, 0) === true)
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length !== "number")
    throw $.iae(length);
  end = start + length;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Lists_getRange$bailout = function(state0, a, start, length, accumulator) {
  var t1, end, i, t2;
  if ($.$$lt(length, 0) === true)
    throw $.$$throw($.ArgumentError$("length"));
  t1 = $.getInterceptor$JSNumber(start);
  if (t1.$lt(start, 0) === true)
    throw $.$$throw($.RangeError$value(start));
  end = t1.$add(start, length);
  t1 = $.getInterceptor$JSStringJSArray(a);
  if ($.$$gt(end, t1.get$length(a)) === true)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, end) === true; i = t2.$add(i, 1))
    accumulator.push(t1.$index(a, i));
  return accumulator;
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$.min = function(a, b) {
  if (typeof a === "number") {
    if (typeof b === "number") {
      if (a > b)
        return b;
      if (a < b)
        return a;
      if (typeof b === "number") {
        if (typeof a === "number")
          if (a === 0)
            return (a + b) * a * b;
        if (a === 0 && $.CONSTANT5.get$isNegative(b) === true || $.CONSTANT5.get$isNaN(b) === true)
          return b;
        return a;
      }
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.Random_Random = function(seed) {
  return $.CONSTANT12;
};

$.Sine$ = function(easeInFraction) {
  var t1 = new $.Sine(null);
  t1.BaseEaser$1$easeInFraction(easeInFraction);
  return t1;
};

$.ListCollection$ = function(source) {
  var t1 = new $.ListCollection(null, null, $.List_List(0));
  t1.FrameworkEventDispatcher$1$dispatcher(null);
  t1.ListCollection$1$source(source);
  return t1;
};

$.Button$ = function(elementId) {
  var t1 = new $.Button(null, null, false, null, true, 0, 0, 0, 0, 0, 0, 0, 0, null, $.List_List(0), $.UpdateManager$(), false, null, $.List_List(0), null, null);
  t1.UIWrapper$1$elementId(elementId);
  return t1;
};

$.ComboBox$ = function() {
  var t1 = new $.ComboBox(false, false, null, $.ScrollPolicy_NONE(), $.ScrollPolicy_NONE(), null, -1, null, null, false, null, true, 0, 0, 0, 0, 0, 0, 0, 0, null, $.List_List(0), $.UpdateManager$(), false, null, $.List_List(0), null, null);
  t1.UIWrapper$1$elementId(null);
  return t1;
};

$.Graphics$ = function(elementId) {
  var t1 = new $.Graphics(null, null, false, null, true, 0, 0, 0, 0, 0, 0, 0, 0, null, $.List_List(0), $.UpdateManager$(), false, null, $.List_List(0), null, null);
  t1.UIWrapper$1$elementId(elementId);
  t1.Graphics$1$elementId(elementId);
  return t1;
};

$.Group$ = function(elementId) {
  var t1 = new $.Group(null, false, null, true, 0, 0, 0, 0, 0, 0, 0, 0, null, $.List_List(0), $.UpdateManager$(), false, null, $.List_List(0), null, null);
  t1.UIWrapper$1$elementId(elementId);
  return t1;
};

$.HGroup$ = function(elementId) {
  var t1 = new $.HGroup(null, false, null, true, 0, 0, 0, 0, 0, 0, 0, 0, null, $.List_List(0), $.UpdateManager$(), false, null, $.List_List(0), null, null);
  t1.UIWrapper$1$elementId(elementId);
  t1.HGroup$1$elementId(elementId);
  return t1;
};

$.ListRenderer$ = function() {
  var t1 = new $.ListRenderer(null, null, null, 0, 0, 0, 0, false, false, null, $.ScrollPolicy_NONE(), $.ScrollPolicy_NONE(), null, -1, null, null, false, null, true, 0, 0, 0, 0, 0, 0, 0, 0, null, $.List_List(0), $.UpdateManager$(), false, null, $.List_List(0), null, null);
  t1.UIWrapper$1$elementId(null);
  t1.ListRenderer$0();
  return t1;
};

$.RichText$ = function(elementId) {
  var t1 = new $.RichText(null, null, false, null, true, 0, 0, 0, 0, 0, 0, 0, 0, null, $.List_List(0), $.UpdateManager$(), false, null, $.List_List(0), null, null);
  t1.UIWrapper$1$elementId(elementId);
  return t1;
};

$.VGroup$ = function(elementId) {
  var t1 = new $.VGroup(null, false, null, true, 0, 0, 0, 0, 0, 0, 0, 0, null, $.List_List(0), $.UpdateManager$(), false, null, $.List_List(0), null, null);
  t1.UIWrapper$1$elementId(elementId);
  t1.VGroup$1$elementId(elementId);
  return t1;
};

$.ClassFactory$ = function(className, constructorMethod, library) {
  var t1 = new $.ClassFactory(null, null, null);
  t1.ClassFactory$3$className$constructorMethod$library(className, constructorMethod, library);
  return t1;
};

$.FunctionEqualityUtil_equals = function(functionA, functionB) {
  return $.$$eq(functionA, functionB);
};

$.ScrollPolicy_NONE = function() {
  return "none";
};

$.ScrollPolicy_AUTO = function() {
  return "auto";
};

$.UpdateManager$ = function() {
  return new $.UpdateManager([]);
};

$.TimeoutHandler$ = function() {
  return new $.TimeoutHandler(null, null);
};

$.CollectionEvent$construct = function(ident, type, relatedObject) {
  var t1 = new $.CollectionEvent(null, null, null, null);
  t1.FrameworkEvent$construct$3$relatedObject("CollectionEvent", type, relatedObject);
  return t1;
};

$.CollectionEvent_CollectionEvent = function(type, relatedObject) {
  return $.CollectionEvent$construct("CollectionEvent", type, relatedObject);
};

$.FrameworkEvent_FrameworkEvent = function(type, relatedObject) {
  return $.FrameworkEvent$construct("FrameworkEvent", type, relatedObject);
};

$.FrameworkEvent$construct = function(ident, type, relatedObject) {
  var t1 = new $.FrameworkEvent(null, null, null, null);
  t1.FrameworkEvent$construct$3$relatedObject(ident, type, relatedObject);
  return t1;
};

$.FrameworkEventDispatcher$ = function(dispatcher) {
  var t1 = new $.FrameworkEventDispatcher(null, $.List_List(0));
  t1.FrameworkEventDispatcher$1$dispatcher(dispatcher);
  return t1;
};

$.FrameworkEventListenerValuePair$ = function(type, eventHandler) {
  var t1 = new $.FrameworkEventListenerValuePair(null, null);
  t1.FrameworkEventListenerValuePair$2(type, eventHandler);
  return t1;
};

$.HorizontalLayout$ = function() {
  return new $.HorizontalLayout(false, 10);
};

$.VerticalLayout$ = function() {
  return new $.VerticalLayout(false, 10);
};

$.DemoItemRenderer$ = function(elementId) {
  var t1 = new $.DemoItemRenderer(null, null, null, null, null, null, "mouseout", false, false, null, null, false, null, true, 0, 0, 0, 0, 0, 0, 0, 0, null, $.List_List(0), $.UpdateManager$(), false, null, $.List_List(0), null, null);
  t1.UIWrapper$1$elementId(null);
  return t1;
};

$.DemoItemRenderer_construct = function() {
  return $.DemoItemRenderer$(null);
};

$.control_labelHandler = function(item) {
  if (!(item == null))
    return item.get$label();
  return "";
};

$.control_labelHandler0.call$1 = $.control_labelHandler0;
$.control_labelHandler0.$name = "control_labelHandler0";
$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._nullDataHandler.call$1 = $._nullDataHandler;
$._nullDataHandler.$name = "_nullDataHandler";
$._nullErrorHandler.call$1 = $._nullErrorHandler;
$._nullErrorHandler.$name = "_nullErrorHandler";
$._nullDoneHandler.call$0 = $._nullDoneHandler;
$._nullDoneHandler.$name = "_nullDoneHandler";
$.DemoItemRenderer_construct.call$0 = $.DemoItemRenderer_construct;
$.DemoItemRenderer_construct.$name = "DemoItemRenderer_construct";
Isolate.$finishClasses($$);
$$ = {};
$.Element = {builtin$cls: 'Element'};
$.List = {builtin$cls: 'List'};
$.Node = {builtin$cls: 'Node'};
$.num = {builtin$cls: 'num'};
$.Match = {builtin$cls: 'Match'};
$.Set = {builtin$cls: 'Set'};
$.ReceivePort = {builtin$cls: 'ReceivePort'};
$.bool = {builtin$cls: 'bool'};
$.$int = {builtin$cls: '$int'};
$.IItemRenderer = {builtin$cls: 'IItemRenderer'};
$._ManagerStub = {builtin$cls: '_ManagerStub'};
$.CONSTANT7 = new Isolate.$isolateProperties.EventStreamProvider("mousedown");
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT15 = Isolate.makeConstantList([]);
$.CONSTANT9 = new Isolate.$isolateProperties.EventStreamProvider("mouseover");
$.CONSTANT = new Isolate.$isolateProperties.JSArray();
$.CONSTANT3 = new Isolate.$isolateProperties.JSNumber();
$.CONSTANT0 = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT1 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT2 = new Isolate.$isolateProperties.JSString();
$.CONSTANT12 = new Isolate.$isolateProperties._Random();
$.CONSTANT5 = new Isolate.$isolateProperties.JSDouble();
$.CONSTANT8 = new Isolate.$isolateProperties.EventStreamProvider("mouseout");
$.CONSTANT11 = new Isolate.$isolateProperties.EventStreamProvider("change");
$.CONSTANT14 = new Isolate.$isolateProperties.Object();
$.CONSTANT6 = new Isolate.$isolateProperties.EventStreamProvider("mouseup");
$.CONSTANT13 = new Isolate.$isolateProperties.EventStreamProvider("click");
$.CONSTANT4 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT10 = new Isolate.$isolateProperties.EventStreamProvider("scroll");
$._listRenderer = null;
$._innerHtmlDisplay = null;
$.lazyPort = null;
$._SPAWNED_SIGNAL = "spawned";
$.ReceivePortImpl__nextFreeId = 1;
$.Primitives_hashCodeSeed = 0;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._getTypeNameOf = null;
$._FutureImpl__INCOMPLETE = 0;
$._FutureImpl__VALUE = 1;
$._FutureImpl__ERROR = 2;
$._FutureImpl__UNHANDLED_ERROR = 4;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT4;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.Element_changeEvent = Isolate.$isolateProperties.CONSTANT11;
$.Element_clickEvent = Isolate.$isolateProperties.CONSTANT13;
$.Element_mouseDownEvent = Isolate.$isolateProperties.CONSTANT7;
$.Element_mouseOutEvent = Isolate.$isolateProperties.CONSTANT8;
$.Element_mouseOverEvent = Isolate.$isolateProperties.CONSTANT9;
$.Element_mouseUpEvent = Isolate.$isolateProperties.CONSTANT6;
$.Element_scrollEvent = Isolate.$isolateProperties.CONSTANT10;
$.PI = 3.141592653589793;
$.CollectionEvent_COLLECTION_CHANGED = "collectionChanged";
$.toString = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.add = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).add$1(receiver, a0);
};
$.addLast = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addLast$1(receiver, a0);
};
$.iterator = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$iterator(receiver);
};
$.removeAll = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeAll$1(receiver, a0);
};
$.replaceAll = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).replaceAll$2(receiver, a0, a1);
};
$.length = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$length(receiver);
};
$.$$index = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).$index(receiver, a0);
};
$.$$indexSet = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).$indexSet(receiver, a0, a1);
};
$.$$add = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$add(receiver, a0);
};
$.toSet = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toSet$0(receiver);
};
$.$$lt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$lt(receiver, a0);
};
$.indexOf = function(receiver, a0, a1) {
  return $.getInterceptor$JSStringJSArray(receiver).indexOf$2(receiver, a0, a1);
};
$.toList = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toList$0(receiver);
};
$.contains = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$contains(receiver);
};
$.$$and = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$and(receiver, a0);
};
$.getRange = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).getRange$2(receiver, a0, a1);
};
$.concat = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).concat$1(receiver, a0);
};
$.$$or = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$or(receiver, a0);
};
$.$$xor = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$xor(receiver, a0);
};
$.hashCode = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.$$gt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$gt(receiver, a0);
};
$.length0 = function(receiver, value) {
  return $.getInterceptor$JSArray(receiver).set$length(receiver, value);
};
$.$$mul = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mul(receiver, a0);
};
$.isEmpty = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$isEmpty(receiver);
};
$.$$sub = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$sub(receiver, a0);
};
$.removeAt = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeAt$1(receiver, a0);
};
$.contains0 = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).contains$1(receiver, a0);
};
$.toInt = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).toInt$0(receiver);
};
$.addAll = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addAll$1(receiver, a0);
};
$.removeMatching = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeMatching$1(receiver, a0);
};
$.$$ge = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$ge(receiver, a0);
};
$.$$tdiv = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$tdiv(receiver, a0);
};
$.removeLast = function(receiver) {
  return $.getInterceptor$JSArray(receiver).removeLast$0(receiver);
};
$.$$eq = function(receiver, a0) {
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$$le = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$le(receiver, a0);
};
$.$$shl = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$shl(receiver, a0);
};
$.substring = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).substring$1(receiver, a0);
};
$.last = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$last(receiver);
};
$.forEach = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).forEach$1(receiver, a0);
};
$.allMatches = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).allMatches$1(receiver, a0);
};
$.where = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).where$1(receiver, a0);
};
$.remove = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).remove$1(receiver, a0);
};
$.$$div = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$div(receiver, a0);
};
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "quoteRegExp", "quoteRegExp", "get$quoteRegExp", function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", true, false);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $isCollection: function() {
    return false;
  },
  $isList: function() {
    return false;
  },
  $isMap: function() {
    return false;
  },
  $isButtonElement: function() {
    return false;
  },
  $isCanvasElement: function() {
    return false;
  },
  $isDivElement: function() {
    return false;
  },
  $isElement: function() {
    return false;
  },
  $isNode: function() {
    return false;
  },
  $isOptionElement: function() {
    return false;
  },
  $isSelectElement: function() {
    return false;
  },
  $isSpanElement: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(a) {
    return this === a;
  }
});

$.$defineNativeClass("Worker", {
  get$id: function() {
    return this.id;
  },
  set$id: function(i) {
    this.id = i;
  },
  set$onmessage: function(f) {
    this.onmessage = f;
  },
  postMessage$1: function(msg) {
    this.postMessage(msg);
  },
  terminate$0: function() {
    this.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "type>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Blob", {"": "type>"});

$.$defineNativeClass("HTMLButtonElement", {"": "type>,value=",
  $isButtonElement: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLCanvasElement", {"": "height=,width=",
  getContext$1: function(contextId) {
    return this.getContext(contextId);
  },
  $isCanvasElement: function() {
    return true;
  }
});

$.$defineNativeClass("CanvasRenderingContext2D", {"": "fillStyle<,globalAlpha<",
  beginPath$0: function() {
    return this.beginPath();
  },
  clearRect$4: function(x, y, width, height) {
    return this.clearRect(x,y,width,height);
  },
  closePath$0: function() {
    return this.closePath();
  },
  fillRect$4: function(x, y, width, height) {
    return this.fillRect(x,y,width,height);
  }
});

$.$defineNativeClass("CharacterData", {"": "data=,length>",
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("CompositionEvent", {"": "data>"});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  _getPropertyValue$1: function(propertyName) {
    return this.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(propertyName) {
    var propValue = this._getPropertyValue$1(propertyName);
    return !(propValue == null) ? propValue : "";
  },
  setProperty$3: function(propertyName, value, priority) {
    this.setProperty(propertyName, value, priority);
    if (!!this.setAttribute)
      this.setAttribute(propertyName, value);
  },
  set$backgroundColor: function(value) {
    this.setProperty$3("background-color", value, "");
  },
  set$border: function(value) {
    this.setProperty$3("border", value, "");
  },
  get$height: function() {
    return this.getPropertyValue$1("height");
  },
  set$height: function(value) {
    this.setProperty$3("height", value, "");
  },
  get$left: function() {
    return this.getPropertyValue$1("left");
  },
  set$left: function(value) {
    this.setProperty$3("left", value, "");
  },
  set$overflow: function(value) {
    this.setProperty$3("overflow", value, "");
  },
  set$overflowX: function(value) {
    this.setProperty$3("overflow-x", value, "");
  },
  set$overflowY: function(value) {
    this.setProperty$3("overflow-y", value, "");
  },
  set$position: function(value) {
    this.setProperty$3("position", value, "");
  },
  get$top: function() {
    return this.getPropertyValue$1("top");
  },
  set$top: function(value) {
    this.setProperty$3("top", value, "");
  },
  get$width: function() {
    return this.getPropertyValue$1("width");
  },
  set$width: function(value) {
    this.setProperty$3("width", value, "");
  }
});

$.$defineNativeClass("HTMLDivElement", {
  $isDivElement: function() {
    return true;
  }
});

$.$defineNativeClass("Document", {
  $$dom_createElement$1: function(tagName) {
    return this.createElement(tagName);
  },
  $$dom_getElementById$1: function(elementId) {
    return this.getElementById(elementId);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  get$onChange: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onClick: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  get$onScroll: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors) === true)
      return this.$$dom_getElementById$1($.substring(selectors, 1));
    return this.$$dom_querySelector$1(selectors);
  }
});

$.$defineNativeClass("DocumentFragment", {
  get$children: function() {
    if (this._children == null)
      this._children = $.FilteredElementList$(this);
    return this._children;
  },
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  }
});

$.$defineNativeClass("DOMException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {"": "$$dom_children:children~,hidden<,id=,clientHeight>,clientWidth>,$$dom_lastElementChild:lastElementChild~,scrollTop>,style>",
  get$children: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$children")) {
      return $._ChildrenElementList$_wrap(this);
    } else
      return Object.prototype.get$children.call(this);
  },
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  get$onChange: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onClick: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  get$onMouseDown: function() {
    return $.CONSTANT7.forTarget$1(this);
  },
  get$onMouseOut: function() {
    return $.CONSTANT8.forTarget$1(this);
  },
  get$onMouseOver: function() {
    return $.CONSTANT9.forTarget$1(this);
  },
  get$onMouseUp: function() {
    return $.CONSTANT6.forTarget$1(this);
  },
  get$onScroll: function() {
    return $.CONSTANT10.forTarget$1(this);
  },
  $isElement: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "height=,type>,width="});

$.$defineNativeClass("Event", {"": "type>",
  get$currentTarget: function() {
    return $._convertNativeToDart_EventTarget(this.currentTarget);
  }
});

$.$defineNativeClass("EventException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "type>"});

$.$defineNativeClass("FileException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Float32Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout5(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout5(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout5: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Float64Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout4(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout4(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout4: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>",
  reset$0: function() {
    return this.reset();
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout6(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout6(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout6: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("XMLHttpRequestException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "height=,width="});

$.$defineNativeClass("HTMLImageElement", {"": "border<,height=,width=",
  complete$1: function(arg0) {
    return this.complete.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLInputElement", {"": "height=,pattern>,type>,value=,width=",
  $isElement: function() {
    return true;
  },
  $isNode: function() {
    return true;
  }
});

$.$defineNativeClass("Int16Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout7(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout7(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout7: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Int32Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout8(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout8(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout8: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Int8Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout9(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout9(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout9: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "type>"});

$.$defineNativeClass("HTMLLIElement", {"": "type>,value="});

$.$defineNativeClass("HTMLLabelElement", {"": "control>"});

$.$defineNativeClass("HTMLLinkElement", {"": "type>"});

$.$defineNativeClass("HTMLMediaElement", {"": "error>"});

$.$defineNativeClass("MessageEvent", {"": "ports>",
  get$data: function() {
    return $.convertNativeToDart_SerializedScriptValue(this.data);
  }
});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout10(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout10(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout10: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Node", {"": "$$dom_childNodes:childNodes~,text:textContent|",
  get$nodes: function() {
    return $._ChildNodeListLazy$(this);
  },
  remove$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$0")) {
      var t1 = this.parentNode;
      if (!(t1 == null))
        t1.$$dom_removeChild$1(this);
    } else
      return Object.prototype.remove$0.call(this);
  },
  replaceWith$1: function(otherNode) {
    var parent, exception;
    try {
      parent = this.parentNode;
      parent.$$dom_replaceChild$2(otherNode, this);
    } catch (exception) {
      $.unwrapException(exception);
    }

    return this;
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_appendChild$1: function(newChild) {
    return this.appendChild(newChild);
  },
  contains$1: function(other) {
    return this.contains(other);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_replaceChild$2: function(newChild, oldChild) {
    return this.replaceChild(newChild,oldChild);
  },
  $isNode: function() {
    return true;
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "type>"});

$.$defineNativeClass("HTMLObjectElement", {"": "data=,height=,type>,width="});

$.$defineNativeClass("HTMLOptGroupElement", {"": "label>"});

$.$defineNativeClass("HTMLOptionElement", {"": "label>,selected=,value=",
  $isOptionElement: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLOutputElement", {"": "type>,value="});

$.$defineNativeClass("HTMLParamElement", {"": "value="});

$.$defineNativeClass("ProcessingInstruction", {"": "data="});

$.$defineNativeClass("HTMLProgressElement", {"": "value="});

$.$defineNativeClass("RadioNodeList", {"": "value="});

$.$defineNativeClass("RangeException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "type>"});

$.$defineNativeClass("HTMLSelectElement", {"": "length=,selectedIndex=,type>,value=",
  get$options: function() {
    var t1, t2;
    t1 = $.toList($.where(this.get$children(), new $.SelectElement_options_anon()));
    t2 = $.getInterceptor$JSStringJSArray(t1);
    return t2.take$1(t1, t2.get$length(t1));
  },
  get$selectedOptions: function() {
    var t1, t2;
    if (this.multiple === true) {
      t1 = $.toList($.where(this.get$options(), new $.SelectElement_selectedOptions_anon()));
      t2 = $.getInterceptor$JSStringJSArray(t1);
      return t2.take$1(t1, t2.get$length(t1));
    } else
      return [$.$$index(this.get$options(), this.selectedIndex)];
  },
  $isSelectElement: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLSourceElement", {"": "type>"});

$.$defineNativeClass("HTMLSpanElement", {
  $isSpanElement: function() {
    return true;
  }
});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>"});

$.$defineNativeClass("Storage", {
  containsKey$1: function(key) {
    return !(this.$$dom_getItem$1(key) == null);
  },
  $index: function(key) {
    return this.$$dom_getItem$1(key);
  },
  $indexSet: function(key, value) {
    this.$$dom_setItem$2(key, value);
  },
  remove$1: function(key) {
    var value = this.$index(key);
    this.$$dom_removeItem$1(key);
    return value;
  },
  forEach$1: function(f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.$$dom_key$1(i);
      if (key == null)
        return;
      f.call$2(key, this.$index(key));
    }
  },
  get$keys: function() {
    var keys = [];
    this.forEach$1(new $.Storage_keys_anon(keys));
    return keys;
  },
  get$values: function() {
    var values = [];
    this.forEach$1(new $.Storage_values_anon(values));
    return values;
  },
  get$length: function() {
    return this.length;
  },
  get$isEmpty: function() {
    return this.$$dom_key$1(0) == null;
  },
  $$dom_getItem$1: function(key) {
    return this.getItem(key);
  },
  $$dom_key$1: function(index) {
    return this.key(index);
  },
  $$dom_removeItem$1: function(key) {
    return this.removeItem(key);
  },
  $$dom_setItem$2: function(key, data) {
    return this.setItem(key,data);
  },
  $isMap: function() {
    return true;
  }
});

$.$defineNativeClass("StorageEvent", {"": "key>"});

$.$defineNativeClass("HTMLStyleElement", {"": "type>"});

$.$defineNativeClass("HTMLTableElement", {"": "border<"});

$.$defineNativeClass("HTMLTextAreaElement", {"": "type>,value="});

$.$defineNativeClass("TextEvent", {"": "data>"});

$.$defineNativeClass("HTMLTrackElement", {"": "label>"});

$.$defineNativeClass("Uint16Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout0(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout0(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout0: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint32Array", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout1(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout1(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout1: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  $index: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return this[index];
    } else
      return Object.prototype.$index.call(this, index);
  },
  $indexSet: function(index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      this[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, index, value);
  },
  get$iterator: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(this);
    } else
      return Object.prototype.get$iterator.call(this);
  },
  contains$1: function(element) {
    if (Object.getPrototypeOf(this).hasOwnProperty("contains$1")) {
      return $.IterableMixinWorkaround_contains(this, element);
    } else
      return Object.prototype.contains$1.call(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = $.iterator(this); t1.moveNext$0() === true;)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, f);
  },
  where$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("where$1")) {
      return $.WhereIterable$(this, f);
    } else
      return Object.prototype.where$1.call(this, f);
  },
  toList$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$0")) {
      return $.List_List$from(this);
    } else
      return Object.prototype.toList$0.call(this);
  },
  toSet$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toSet$0")) {
      return $.Set_Set$from(this);
    } else
      return Object.prototype.toSet$0.call(this);
  },
  get$isEmpty: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$isEmpty")) {
      return $.$$eq($.length(this), 0);
    } else
      return Object.prototype.get$isEmpty.call(this);
  },
  take$1: function(n) {
    if (Object.getPrototypeOf(this).hasOwnProperty("take$1")) {
      return $.IterableMixinWorkaround_takeList(this, n);
    } else
      return Object.prototype.take$1.call(this, n);
  },
  add$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, value);
  },
  addLast$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addLast$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addLast$1.call(this, value);
  },
  addAll$1: function(iterable) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addAll$1.call(this, iterable);
  },
  set$length: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$length")) {
      throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
    } else
      return Object.prototype.set$length.call(this, value);
  },
  indexOf$2: function(element, start) {
    if (Object.getPrototypeOf(this).hasOwnProperty("indexOf$2")) {
      return $.Lists_indexOf(this, element, start, $.length(this));
    } else
      return Object.prototype.indexOf$2.call(this, element, start);
  },
  get$last: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$last")) {
      var t1, t2;
      t1 = $.getInterceptor$JSStringJSArray(this);
      t2 = t1.get$length(this);
      if (typeof t2 !== "number")
        return this.get$last$bailout2(1, t1, t2);
      if (t2 > 0) {
        t1 = t1.get$length(this);
        if (typeof t1 !== "number")
          return this.get$last$bailout2(2, t1);
        return this.$index(t1 - 1);
      }
      throw $.$$throw($.StateError$("No elements"));
    } else
      return Object.prototype.get$last.call(this);
  },
  get$last$bailout2: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeAt$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeAt$1.call(this, pos);
  },
  removeLast$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this);
  },
  remove$1: function(object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, object);
  },
  removeAll$1: function(elements) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeAll$1.call(this, elements);
  },
  removeMatching$1: function(test) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeMatching$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeMatching$1.call(this, test);
  },
  getRange$2: function(start, rangeLength) {
    if (Object.getPrototypeOf(this).hasOwnProperty("getRange$2")) {
      return $.Lists_getRange(this, start, rangeLength, []);
    } else
      return Object.prototype.getRange$2.call(this, start, rangeLength);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.$$eq($.length(this), 0);
  },
  take$1: function(n) {
    return $.IterableMixinWorkaround_takeList(this, n);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  get$last: function() {
    var t1, t2;
    t1 = $.getInterceptor$JSStringJSArray(this);
    t2 = t1.get$length(this);
    if (typeof t2 !== "number")
      return this.get$last$bailout3(1, t1, t2);
    if (t2 > 0) {
      t1 = t1.get$length(this);
      if (typeof t1 !== "number")
        return this.get$last$bailout3(2, t1);
      return this.$index(t1 - 1);
    }
    throw $.$$throw($.StateError$("No elements"));
  },
  get$last$bailout3: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(this);
        t2 = t1.get$length(this);
      case 1:
        state0 = 0;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$gt(t2, 0) === true)
          switch (state0) {
            case 0:
              t1 = t1.get$length(this);
            case 2:
              state0 = 0;
              return this.$index($.$$sub(t1, 1));
          }
        throw $.$$throw($.StateError$("No elements"));
    }
  },
  removeAt$1: function(pos) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLVideoElement", {"": "height=,width="});

$.$defineNativeClass("DOMWindow", {
  get$top: function() {
    return $._convertNativeToDart_Window(this.top);
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  get$onChange: function() {
    return $.CONSTANT11.forTarget$1(this);
  },
  get$onClick: function() {
    return $.CONSTANT13.forTarget$1(this);
  },
  get$onScroll: function() {
    return $.CONSTANT10.forTarget$1(this);
  }
});

$.$defineNativeClass("XPathException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "type>"});

$.$defineNativeClass("SVGFEBlendElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type>,height>,width>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEFloodElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEImageElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFETileElement", {"": "height>,width>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type>,height>,width>"});

$.$defineNativeClass("SVGFilterElement", {"": "height>,width>"});

$.$defineNativeClass("SVGForeignObjectElement", {"": "height>,width>"});

$.$defineNativeClass("SVGImageElement", {"": "height>,width>"});

$.$defineNativeClass("SVGMaskElement", {"": "height>,width>"});

$.$defineNativeClass("SVGPatternElement", {"": "height>,width>"});

$.$defineNativeClass("SVGRectElement", {"": "height>,width>"});

$.$defineNativeClass("SVGScriptElement", {"": "type>"});

$.$defineNativeClass("SVGStyleElement", {"": "type>"});

$.$defineNativeClass("SVGElement", {
  get$children: function() {
    return $.FilteredElementList$(this);
  },
  get$$$dom_children: function() {
    throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
  },
  get$id: function() {
    return this.id;
  },
  set$id: function(value) {
    this.id = value;
  }
});

$.$defineNativeClass("SVGException", {
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGSVGElement", {"": "height>,width>"});

$.$defineNativeClass("SVGUseElement", {"": "height>,width>"});

// 100 dynamic classes.
// 242 classes
// 22 !leaf
(function() {
  var v0_ComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncRElement|SVGFEFuncAElement", v1_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v2_SvgElement = [v0_ComponentTransferFunctionElement, "SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPositioningElement|SVGAltGlyphElement|SVGTSpanElement|SVGTextElement|SVGTRefElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEConvolveMatrixElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEGaussianBlurElement|SVGFEColorMatrixElement|SVGFEImageElement|SVGFEPointLightElement|SVGFEMergeElement|SVGFESpecularLightingElement|SVGFEOffsetElement|SVGFilterElement|SVGFETurbulenceElement|SVGFEMorphologyElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGFETileElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGImageElement|SVGFontFaceNameElement|SVGHKernElement|SVGFESpotLightElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGLineElement|SVGMetadataElement|SVGGlyphRefElement|SVGMissingGlyphElement|SVGPathElement|SVGFEMergeNodeElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement"].join("|"), v3_Element = [v1_MediaElement, v2_SvgElement, "Element|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLAppletElement|HTMLBaseFontElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLMarqueeElement|HTMLAnchorElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFormElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement"].join("|"), v4_DocumentFragment = "DocumentFragment|ShadowRoot", v5_CharacterData = "CharacterData|Text|CDATASection|Comment", v6_Document = "Document|SVGDocument|HTMLDocument", v7_Node = [v3_Element, v4_DocumentFragment, v5_CharacterData, v6_Document, "Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction"].join("|");
  $.dynamicSetMetadata([["SVGComponentTransferFunctionElement", v0_ComponentTransferFunctionElement], ["Blob", "Blob|File"], ["CharacterData", v5_CharacterData], ["Document", v6_Document], ["DocumentFragment", v4_DocumentFragment], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["HTMLMediaElement", v1_MediaElement], ["SVGElement", v2_SvgElement], ["Element", v3_Element], ["Event", "Event|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|UIEvent|TextEvent|TouchEvent|MouseEvent|WheelEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|WebKitAnimationEvent|DeviceMotionEvent|BeforeLoadEvent|CloseEvent|CustomEvent|ErrorEvent|HashChangeEvent|DeviceOrientationEvent|AudioProcessingEvent|OfflineAudioCompletionEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OverflowEvent|PageTransitionEvent|PopStateEvent"], ["Node", v7_Node], ["EventTarget", [v7_Node, "EventTarget|DOMWindow"].join("|")], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["NodeList", "NodeList|RadioNodeList"]]);
})();

$.main.call$0 = $.main;

//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } finally {
          if (result === sentinelUndefined) {
            if ($[fieldName] === sentinelInProgress) {
              $[fieldName] = null;
            }
          }
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=dartplay.dart.js.map